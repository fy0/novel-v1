// Generated by Haxe 4.3.4
var exports = {};
(function ($hx_exports, $global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
class StoryLoader {
	constructor() {
		this.debug = false;
		this.curLine = 0;
	}
	parse(s) {
		let p = new Parser("",s + "\n",[]);
		let s1 = js_Boot.__cast(p.parse(NovelPeg_g) , Story);
		let _g = 0;
		let _g1 = s1.items;
		while(_g < _g1.length) {
			let i = _g1[_g];
			++_g;
			if(i.next == "" || i.next == null) {
				continue;
			}
			if(Object.prototype.hasOwnProperty.call(p.cur.data.name2Index.h,i.next)) {
				i.nextIndex = p.cur.data.name2Index.h[i.next];
			} else {
				throw new haxe_Exception("line " + i.pos[0] + ": section `" + i.next + "` not defined");
			}
		}
		return s1;
	}
	eval(s) {
		let _gthis = this;
		return (async function() {
			let curIndex = 0;
			while(!(curIndex < 0 || curIndex >= s.items.length)) {
				let i = s.items[curIndex];
				_gthis.curLine = i.pos[0];
				if(_gthis.debug) {
					let nodeName = i.name;
					if(nodeName == null || nodeName == "") {
						nodeName = "<noname>";
					}
					haxe_Log.trace("node:",{ fileName : "Eval.hx", lineNumber : 54, className : "StoryLoader", methodName : "eval", customParams : [nodeName]});
				}
				if(i.condition != null && i.condition != "") {
					if(_gthis.codeCallback != null) {
						let valid = (await _gthis.codeCallback(_gthis,i.condition));
						if(!valid) {
							++curIndex;
							continue;
						}
					}
				}
				let _g = 0;
				let _g1 = i.lines;
				while(_g < _g1.length) {
					let line = _g1[_g];
					++_g;
					switch(line.type) {
					case "":
						if(_gthis.debug) {
							haxe_Log.trace("line - invoke",{ fileName : "Eval.hx", lineNumber : 71, className : "StoryLoader", methodName : "eval", customParams : [line.name,line.params]});
						}
						if(!(await _gthis.invokeCallback(_gthis,line.name,line.params))) {
							haxe_Log.trace("[Line " + line.pos[0] + " Col " + line.pos[1] + "] ERROR: invoke unsolved",{ fileName : "Eval.hx", lineNumber : 74, className : "StoryLoader", methodName : "eval"});
						}
						break;
					case "code":
						if(_gthis.debug) {
							haxe_Log.trace("line - code",{ fileName : "Eval.hx", lineNumber : 78, className : "StoryLoader", methodName : "eval", customParams : [line.code]});
						}
						if(line.code != null) {
							(await _gthis.codeCallback(_gthis,line.code));
						}
						break;
					}
				}
				curIndex = i.nextIndex;
			}
			return 0;
		})();
	}
}
$hx_exports["StoryLoader"] = StoryLoader;
StoryLoader.__name__ = true;
Object.assign(StoryLoader.prototype, {
	__class__: StoryLoader
});
class HxOverrides {
	static cca(s,index) {
		let x = s.charCodeAt(index);
		if(x != x) {
			return undefined;
		}
		return x;
	}
	static substr(s,pos,len) {
		if(len == null) {
			len = s.length;
		} else if(len < 0) {
			if(pos == 0) {
				len = s.length + len;
			} else {
				return "";
			}
		}
		return s.substr(pos,len);
	}
	static now() {
		return Date.now();
	}
}
HxOverrides.__name__ = true;
function Main_main() {
}
Math.__name__ = true;
class ParserCustomData {
	constructor() {
		this.name2Index = new haxe_ds_StringMap();
		this.curIndex = 0;
	}
	getNextIndex() {
		this.curIndex += 1;
		return this.curIndex;
	}
	setSectionIndex(name) {
		if(name == "" || name == null) {
			return null;
		}
		if(Object.prototype.hasOwnProperty.call(this.name2Index.h,name)) {
			return new haxe_Exception("section name must be unique");
		}
		let v = this.curIndex;
		this.name2Index.h[name] = v;
		return null;
	}
}
ParserCustomData.__name__ = true;
Object.assign(ParserCustomData.prototype, {
	__class__: ParserCustomData
});
class haxe_Exception extends Error {
	constructor(message,previous,native) {
		super(message);
		this.message = message;
		this.__previousException = previous;
		this.__nativeException = native != null ? native : this;
	}
	toString() {
		return this.get_message();
	}
	get_message() {
		return this.message;
	}
	get_native() {
		return this.__nativeException;
	}
	static caught(value) {
		if(((value) instanceof haxe_Exception)) {
			return value;
		} else if(((value) instanceof Error)) {
			return new haxe_Exception(value.message,null,value);
		} else {
			return new haxe_ValueException(value,null,value);
		}
	}
	static thrown(value) {
		if(((value) instanceof haxe_Exception)) {
			return value.get_native();
		} else if(((value) instanceof Error)) {
			return value;
		} else {
			let e = new haxe_ValueException(value);
			return e;
		}
	}
}
haxe_Exception.__name__ = true;
haxe_Exception.__super__ = Error;
Object.assign(haxe_Exception.prototype, {
	__class__: haxe_Exception
});
class Errors {
}
Errors.__name__ = true;
var AllExpr = $hxEnums["AllExpr"] = { __ename__:true,__constructs__:null
	,ChoiceExpr: ($_=function(e) { return {_hx_index:0,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="ChoiceExpr",$_.__params__ = ["e"],$_)
	,ActionExpr: ($_=function(e) { return {_hx_index:1,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="ActionExpr",$_.__params__ = ["e"],$_)
	,RecoveryExpr: ($_=function(e) { return {_hx_index:2,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="RecoveryExpr",$_.__params__ = ["e"],$_)
	,SeqExpr: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="SeqExpr",$_.__params__ = ["e"],$_)
	,ThrowExpr: ($_=function(e) { return {_hx_index:4,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="ThrowExpr",$_.__params__ = ["e"],$_)
	,LabeledExpr: ($_=function(e) { return {_hx_index:5,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="LabeledExpr",$_.__params__ = ["e"],$_)
	,AndExpr: ($_=function(e) { return {_hx_index:6,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="AndExpr",$_.__params__ = ["e"],$_)
	,NotExpr: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="NotExpr",$_.__params__ = ["e"],$_)
	,ZeroOrOneExpr: ($_=function(e) { return {_hx_index:8,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="ZeroOrOneExpr",$_.__params__ = ["e"],$_)
	,ZeroOrMoreExpr: ($_=function(e) { return {_hx_index:9,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="ZeroOrMoreExpr",$_.__params__ = ["e"],$_)
	,OneOrMoreExpr: ($_=function(e) { return {_hx_index:10,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="OneOrMoreExpr",$_.__params__ = ["e"],$_)
	,RuleRefExpr: ($_=function(e) { return {_hx_index:11,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="RuleRefExpr",$_.__params__ = ["e"],$_)
	,AndCodeExpr: ($_=function(e) { return {_hx_index:12,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="AndCodeExpr",$_.__params__ = ["e"],$_)
	,NotCodeExpr: ($_=function(e) { return {_hx_index:13,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="NotCodeExpr",$_.__params__ = ["e"],$_)
	,AnyMatcher: ($_=function(e) { return {_hx_index:14,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="AnyMatcher",$_.__params__ = ["e"],$_)
	,CharClassMatcher: ($_=function(e) { return {_hx_index:15,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="CharClassMatcher",$_.__params__ = ["e"],$_)
	,CustomParserCodeExpr: ($_=function(e) { return {_hx_index:16,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="CustomParserCodeExpr",$_.__params__ = ["e"],$_)
	,LitMatcher: ($_=function(e) { return {_hx_index:17,e:e,__enum__:"AllExpr",toString:$estr}; },$_._hx_name="LitMatcher",$_.__params__ = ["e"],$_)
};
AllExpr.__constructs__ = [AllExpr.ChoiceExpr,AllExpr.ActionExpr,AllExpr.RecoveryExpr,AllExpr.SeqExpr,AllExpr.ThrowExpr,AllExpr.LabeledExpr,AllExpr.AndExpr,AllExpr.NotExpr,AllExpr.ZeroOrOneExpr,AllExpr.ZeroOrMoreExpr,AllExpr.OneOrMoreExpr,AllExpr.RuleRefExpr,AllExpr.AndCodeExpr,AllExpr.NotCodeExpr,AllExpr.AnyMatcher,AllExpr.CharClassMatcher,AllExpr.CustomParserCodeExpr,AllExpr.LitMatcher];
class ErrList {
	constructor() {
		this.lst = [];
	}
	add(err) {
		this.lst.push(err);
	}
	err() {
		if(this.lst.length == 0) {
			return null;
		}
		this.dedupe();
		return this;
	}
	get_length() {
		return this.lst.length;
	}
	dedupe() {
	}
	error() {
		switch(this.lst.length) {
		case 0:
			return "";
		case 1:
			return this.lst[0].prefix + " " + this.lst[0].Inner.toString();
		default:
			let arr = [];
			let _g = 0;
			let _g1 = this.lst;
			while(_g < _g1.length) {
				let i = _g1[_g];
				++_g;
				arr.push(i.prefix + " " + i.Inner.toString());
			}
			return arr.join("\n");
		}
	}
	toException() {
		if(this.lst.length == 0) {
			return null;
		}
		return new haxe_Exception(this.err().error());
	}
}
ErrList.__name__ = true;
Object.assign(ErrList.prototype, {
	__class__: ErrList
});
class Parser {
	constructor(filename,b,opts) {
		this.recoveryStack = new haxe_ds_GenericStack();
		this.maxFailInvertExpected = false;
		this.rstack = new haxe_ds_GenericStack();
		this.vstack = new haxe_ds_GenericStack();
		this.errs = new ErrList();
		let stats = { ExprCnt : 0, ChoiceAltCnt : new haxe_ds_StringMap()};
		this.filename = filename;
		this.data = b;
		this.pt = { line : 1, col : 0, offset : 0, rn : 0, w : 0};
		this.recover = true;
		let tmp = new haxe_ds_StringMap();
		this.cur = { pos : { line : 0, col : 0, offset : 0}, text : null, globalStore : tmp, data : new ParserCustomData()};
		this.maxFailPos = { col : 1, line : 1, offset : 0};
		this.maxFailExpected = [];
		this.stats = stats;
		this.entrypoint = NovelPeg_g.rules[0].name;
		this.setOptions(opts);
		if(this.maxExprCnt == 0) {
			this.maxExprCnt = 2147483647;
		}
	}
	setOptions(opts) {
		let _g = 0;
		while(_g < opts.length) {
			let opt = opts[_g];
			++_g;
			opt(this);
		}
	}
	pushV() {
		let _this = this.vstack;
		_this.head = new haxe_ds_GenericCell(new haxe_ds_StringMap(),_this.head);
	}
	popV() {
		let _this = this.vstack;
		let k = _this.head;
		if(k != null) {
			_this.head = k.next;
		}
	}
	pushRecovery(labels,expr) {
		let m = new haxe_ds_StringMap();
		let _g = 0;
		while(_g < labels.length) {
			let fl = labels[_g];
			++_g;
			m.h[fl] = expr;
		}
		let _this = this.recoveryStack;
		_this.head = new haxe_ds_GenericCell(m,_this.head);
	}
	popRecovery() {
		let _this = this.recoveryStack;
		let k = _this.head;
		if(k != null) {
			_this.head = k.next;
		}
	}
	addErr(err) {
		this.addErrAt(err,this.pt,[]);
	}
	addErrAt(err,pos,expected) {
		let buf = new haxe_io_BytesBuffer();
		if(this.filename != "") {
			buf.addString(this.filename);
		}
		if(buf.pos > 0) {
			buf.addString(":");
		}
		buf.addString("" + pos.line + ":" + pos.col + " (" + pos.offset + ")");
		let _this = this.rstack;
		if((_this.head == null ? null : _this.head.elt) != null) {
			if(buf.pos > 0) {
				buf.addString(": ");
			}
			let _this = this.rstack;
			let rule = _this.head == null ? null : _this.head.elt;
			if(rule.displayName != "") {
				buf.addString("rule " + rule.displayName);
			} else {
				buf.addString("rule " + rule.name);
			}
		}
		this.errs.add({ Inner : err, pos : pos, prefix : buf.getBytes().toString(), expected : expected});
	}
	failAt(fail,pos,want) {
		if(fail == this.maxFailInvertExpected) {
			if(pos.offset < this.maxFailPos.offset) {
				return;
			}
			if(pos.offset > this.maxFailPos.offset) {
				this.maxFailPos = pos;
				this.maxFailExpected = [];
			}
			if(this.maxFailInvertExpected) {
				want = "!" + want;
			}
			this.maxFailExpected.push(want);
		}
	}
	read() {
		this.pt.offset += this.pt.w > 0 ? 1 : 0;
		let rn = this.data.charAt(this.pt.offset);
		let rnB = haxe_io_Bytes.ofString(rn);
		let _rnInt = HxOverrides.cca(rn,0);
		this.pt.rn = _rnInt != null ? _rnInt : 0;
		this.pt.w = rnB.length;
		this.pt.col++;
		if(rn == "\n") {
			this.pt.line++;
			this.pt.col = 0;
		}
	}
	restore(pt) {
		if(pt.offset == this.pt.offset) {
			return;
		}
		this.pt = pt;
	}
	sliceFrom(start) {
		return this.data.substring(start.offset,this.pt.offset);
	}
	buildRulesTable(g) {
		this.rules = new haxe_ds_StringMap();
		let _g = 0;
		let _g1 = g.rules;
		while(_g < _g1.length) {
			let r = _g1[_g];
			++_g;
			this.rules.h[r.name] = r;
		}
	}
	parse(g) {
		if(g.rules.length == 0) {
			this.addErr(Errors.errNoRule);
			throw haxe_Exception.thrown(this.errs.toException());
		}
		this.buildRulesTable(g);
		let tmp = this.recover;
		let startRule = this.rules.h[this.entrypoint];
		if(startRule == null) {
			this.addErr(Errors.errInvalidEntrypoint);
			throw haxe_Exception.thrown(this.errs.toException());
		}
		let ret = { val : null, ok : false};
		try {
			this.read();
			ret = this.parseRuleWrap(startRule);
		} catch( _g ) {
			let e = haxe_Exception.caught(_g);
			this.addErr(e);
			throw haxe_Exception.thrown(this.errs.toException());
		}
		if(!ret.ok) {
			if(this.errs.get_length() == 0) {
				let maxFailExpectedMap_h = Object.create(null);
				let _g = 0;
				let _g1 = this.maxFailExpected;
				while(_g < _g1.length) {
					let v = _g1[_g];
					++_g;
					let v1 = { };
					maxFailExpectedMap_h[v] = v1;
				}
				let expected = [];
				let eof = false;
				if(maxFailExpectedMap_h["!."] != null) {
					if(Object.prototype.hasOwnProperty.call(maxFailExpectedMap_h,"!.")) {
						delete(maxFailExpectedMap_h["!."]);
					}
					eof = true;
				}
				let h = maxFailExpectedMap_h;
				let k_h = h;
				let k_keys = Object.keys(h);
				let k_length = k_keys.length;
				let k_current = 0;
				while(k_current < k_length) {
					let k = k_keys[k_current++];
					expected.push(k);
				}
				expected.sort(function(a,b) {
					if(a > b) {
						return 1;
					} else {
						return -1;
					}
				});
				if(eof) {
					expected.push("EOF");
				}
				this.addErrAt(new haxe_Exception("no match found, expected: " + NovelPeg_listJoin(expected,", ","or")),this.maxFailPos,expected);
			}
			throw haxe_Exception.thrown(this.errs.toException());
		}
		if(this.errs.get_length() != 0) {
			throw haxe_Exception.thrown(this.errs.toException());
		}
		return ret.val;
	}
	parseRuleWrap(rule) {
		let ret = { val : null, ok : false};
		ret = this.parseRule(rule);
		return ret;
	}
	parseRule(rule) {
		let _this = this.rstack;
		_this.head = new haxe_ds_GenericCell(rule,_this.head);
		this.pushV();
		let ret = this.parseExprWrap(rule.expr);
		this.popV();
		let _this1 = this.rstack;
		let k = _this1.head;
		if(k != null) {
			_this1.head = k.next;
		}
		return ret;
	}
	parseExprWrap(expr) {
		let ret = this.parseExpr(expr);
		return ret;
	}
	parseExpr(expr) {
		this.stats.ExprCnt++;
		if(UInt.gt(this.stats.ExprCnt,this.maxExprCnt)) {
			throw haxe_Exception.thrown(Errors.errMaxExprCnt);
		}
		let ret;
		switch(expr._hx_index) {
		case 0:
			let expr1 = expr.e;
			ret = this.parseChoiceExpr(expr1);
			break;
		case 1:
			let expr2 = expr.e;
			ret = this.parseActionExpr(expr2);
			break;
		case 2:
			let expr3 = expr.e;
			ret = this.parseRecoveryExpr(expr3);
			break;
		case 3:
			let expr4 = expr.e;
			ret = this.parseSeqExpr(expr4);
			break;
		case 4:
			let expr5 = expr.e;
			ret = this.parseThrowExpr(expr5);
			break;
		case 5:
			let expr6 = expr.e;
			ret = this.parseLabeledExpr(expr6);
			break;
		case 6:
			let expr7 = expr.e;
			ret = this.parseAndExpr(expr7);
			break;
		case 7:
			let expr8 = expr.e;
			ret = this.parseNotExpr(expr8);
			break;
		case 8:
			let expr9 = expr.e;
			ret = this.parseZeroOrOneExpr(expr9);
			break;
		case 9:
			let expr10 = expr.e;
			ret = this.parseZeroOrMoreExpr(expr10);
			break;
		case 10:
			let expr11 = expr.e;
			ret = this.parseOneOrMoreExpr(expr11);
			break;
		case 11:
			let expr12 = expr.e;
			ret = this.parseRuleRefExpr(expr12);
			break;
		case 12:
			let expr13 = expr.e;
			ret = this.parseAndCodeExpr(expr13);
			break;
		case 13:
			let expr14 = expr.e;
			ret = this.parseNotCodeExpr(expr14);
			break;
		case 14:
			let expr15 = expr.e;
			ret = this.parseAnyMatcher(expr15);
			break;
		case 15:
			let expr16 = expr.e;
			ret = this.parseCharClassMatcher(expr16);
			break;
		case 16:
			let expr17 = expr.e;
			ret = this.parseCustomParserCodeExpr(expr17);
			break;
		case 17:
			let expr18 = expr.e;
			ret = this.parseLitMatcher(expr18);
			break;
		}
		return ret;
	}
	parseActionExpr(act) {
		let start = NovelPeg_savepointClone(this.pt);
		let ret = this.parseExprWrap(act.expr);
		if(ret.ok) {
			this.cur.pos = { line : start.line, col : start.col, offset : start.offset};
			this.cur.text = this.sliceFrom(start);
			let RetValErr1 = act.run(this);
			if(RetValErr1.err != null) {
				this.addErrAt(RetValErr1.err,{ line : start.line, col : start.col, offset : start.offset},[]);
			}
			ret.val = RetValErr1.val;
		}
		return ret;
	}
	parseAndCodeExpr(and) {
		let ret = and.run(this);
		if(ret.err != null) {
			this.addErr(ret.err);
		}
		return { val : null, ok : true};
	}
	parseAndExpr(and) {
		let pt = this.pt;
		this.pushV();
		let ret = this.parseExprWrap(and.expr);
		this.popV();
		this.restore(pt);
		return { val : null, ok : ret.ok};
	}
	parseAnyMatcher(act) {
		if(this.pt.rn == 0 && this.pt.w == 0) {
			this.failAt(false,this.pt,".");
			return { val : null, ok : false};
		}
		let start = NovelPeg_savepointClone(this.pt);
		this.read();
		this.failAt(true,start,".");
		return { val : this.sliceFrom(start), ok : true};
	}
	parseCharClassMatcher(chr) {
		let cur = this.pt.rn;
		let start = NovelPeg_savepointClone(this.pt);
		if(cur == 0 && this.pt.w == 0) {
			this.failAt(false,start,chr.val);
			return { val : null, ok : false};
		}
		if(chr.ignoreCase) {
			cur = HxOverrides.cca(String.fromCodePoint(cur).toLowerCase(),0);
		}
		let _g = 0;
		let _g1 = chr.chars;
		while(_g < _g1.length) {
			let rn = _g1[_g];
			++_g;
			if(rn == cur) {
				if(chr.inverted) {
					this.failAt(false,start,chr.val);
					return { val : null, ok : false};
				}
				this.read();
				this.failAt(true,start,chr.val);
				return { val : this.sliceFrom(start), ok : true};
			}
		}
		let _g2 = 0;
		let _g3 = chr.ranges.length;
		while(_g2 < _g3) {
			let i = _g2++;
			if(i % 2 != 0) {
				continue;
			}
			if(UInt.gte(cur,chr.ranges[i]) && UInt.gte(chr.ranges[i + 1],cur)) {
				if(chr.inverted) {
					this.failAt(false,start,chr.val);
					return { val : null, ok : false};
				}
				this.read();
				this.failAt(true,start,chr.val);
				return { val : this.sliceFrom(start), ok : true};
			}
		}
		if(chr.classes != null) {
			let _g = 0;
			let _g1 = chr.classes;
			while(_g < _g1.length) {
				let cl = _g1[_g];
				++_g;
				if(Unicode_Is(cl,cur)) {
					if(chr.inverted) {
						this.failAt(false,start,chr.val);
						return { val : null, ok : false};
					}
					this.read();
					this.failAt(true,start,chr.val);
					return { val : this.sliceFrom(start), ok : true};
				}
			}
		}
		if(chr.inverted) {
			this.read();
			this.failAt(true,start,chr.val);
			return { val : this.sliceFrom(start), ok : true};
		}
		this.failAt(true,start,chr.val);
		return { val : null, ok : false};
	}
	parseChoiceExpr(ch) {
		let _g = 0;
		let _g1 = ch.alternatives.length;
		while(_g < _g1) {
			let altI = _g++;
			let alt = ch.alternatives[altI];
			let _ = altI;
			this.pushV();
			let ret = this.parseExprWrap(alt);
			this.popV();
			if(ret.ok) {
				return ret;
			}
		}
		return { val : null, ok : false};
	}
	parseLabeledExpr(lab) {
		this.pushV();
		let ret = this.parseExprWrap(lab.expr);
		this.popV();
		if(ret.ok && lab.label != "") {
			let _this = this.vstack;
			let m = _this.head == null ? null : _this.head.elt;
			let v = ret.val;
			m.h[lab.label] = v;
		}
		return ret;
	}
	parseCustomParserCodeExpr(code) {
		let ret = code.run(this);
		if(ret.err != null) {
			this.addErr(ret.err);
			return { val : null, ok : false};
		}
		return { val : ret.val, ok : ret.ok};
	}
	parseLitMatcher(lit) {
		let start = NovelPeg_savepointClone(this.pt);
		let litVal = lit.val;
		if(lit.ignoreCase) {
			litVal = lit.val.toLowerCase();
		}
		let _g_offset = 0;
		let _g_s = litVal;
		while(_g_offset < _g_s.length) {
			let s = _g_s;
			let index = _g_offset++;
			let c = s.charCodeAt(index);
			if(c >= 55296 && c <= 56319) {
				c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
			}
			let c1 = c;
			if(c1 >= 65536) {
				++_g_offset;
			}
			let want = c1;
			let cur = this.pt.rn;
			if(cur != want) {
				this.failAt(false,start,lit.want);
				this.restore(start);
				return { val : null, ok : false};
			}
			this.read();
		}
		this.failAt(true,start,lit.want);
		return { val : this.sliceFrom(start), ok : true};
	}
	parseNotCodeExpr(code) {
		let ret = code.run(this);
		if(ret.err != null) {
			this.addErr(ret.err);
		}
		return { val : null, ok : !ret.ok};
	}
	parseNotExpr(not) {
		let pt = NovelPeg_savepointClone(this.pt);
		this.pushV();
		this.maxFailInvertExpected = !this.maxFailInvertExpected;
		let ret = this.parseExprWrap(not.expr);
		this.maxFailInvertExpected = !this.maxFailInvertExpected;
		this.popV();
		this.restore(pt);
		return { val : null, ok : !ret.ok};
	}
	parseOneOrMoreExpr(expr) {
		let vals = [];
		while(true) {
			this.pushV();
			let ret = this.parseExprWrap(expr.expr);
			this.popV();
			if(!ret.ok) {
				if(vals.length == 0) {
					return { val : null, ok : false};
				}
				return { val : vals, ok : true};
			}
			vals.push(ret.val);
		}
	}
	parseRecoveryExpr(recover) {
		this.pushRecovery(recover.failureLabel,recover.recoverExpr);
		let ret = this.parseExprWrap(recover.expr);
		this.popRecovery();
		return ret;
	}
	parseRuleRefExpr(ref) {
		if(ref.name == "") {
			throw haxe_Exception.thrown("" + Std.string(ref.pos) + ": invalid rule: missing name");
		}
		let rule = this.rules.h[ref.name];
		if(rule == null) {
			this.addErr(new haxe_Exception("undefined rule: " + ref.name));
			return { val : null, ok : false};
		}
		return this.parseRuleWrap(rule);
	}
	parseSeqExpr(seq) {
		let vals = [];
		let pt = NovelPeg_savepointClone(this.pt);
		let _g = 0;
		let _g1 = seq.exprs;
		while(_g < _g1.length) {
			let expr = _g1[_g];
			++_g;
			let ret = this.parseExprWrap(expr);
			if(!ret.ok) {
				this.restore(pt);
				return { val : null, ok : false};
			}
			vals.push(ret.val);
		}
		return { val : vals, ok : true};
	}
	parseThrowExpr(expr) {
		let i = this.recoveryStack.iterator();
		while(i.hasNext()) {
			let i1 = i.next();
			let recoverExpr = i1.h[expr.label];
			if(recoverExpr != null) {
				return this.parseExprWrap(recoverExpr);
			}
		}
		return { val : null, ok : false};
	}
	parseZeroOrMoreExpr(expr) {
		let vals = [];
		while(true) {
			this.pushV();
			let ret = this.parseExprWrap(expr.expr);
			this.popV();
			if(!ret.ok) {
				return { val : vals, ok : true};
			}
			vals.push(ret.val);
		}
	}
	parseZeroOrOneExpr(expr) {
		this.pushV();
		let ret = this.parseExprWrap(expr.expr);
		this.popV();
		return { val : ret.val, ok : true};
	}
}
Parser.__name__ = true;
Object.assign(Parser.prototype, {
	__class__: Parser
});
class Story {
	constructor(items) {
		this.name = "";
		this.items = items;
	}
}
$hx_exports["Story"] = Story;
Story.__name__ = true;
Object.assign(Story.prototype, {
	__class__: Story
});
function Unicode_is16(ranges,r) {
	if(ranges.length <= Unicode_linearMax || UInt.gte(Unicode_MaxLatin1,r)) {
		let _g = 0;
		while(_g < ranges.length) {
			let i = ranges[_g];
			++_g;
			if(UInt.gt(i[0],r)) {
				return false;
			}
			if(UInt.gte(i[1],r)) {
				if(i[2] != 1) {
					return (UInt.toFloat(r - i[0]) % UInt.toFloat(i[2]) | 0) == 0;
				} else {
					return true;
				}
			}
		}
		return false;
	}
	let lo = 0;
	let hi = ranges.length;
	while(lo < hi) {
		let m = lo + ((hi - lo) / 2 | 0);
		let range_ = ranges[m];
		if(UInt.gte(r,range_[0]) && UInt.gte(range_[1],r)) {
			if(range_[2] != 1) {
				return (UInt.toFloat(r - range_[0]) % UInt.toFloat(range_[2]) | 0) == 0;
			} else {
				return true;
			}
		}
		if(UInt.gt(range_[0],r)) {
			hi = m;
		} else {
			lo = m + 1;
		}
	}
	return false;
}
function Unicode_is32(ranges,r) {
	if(ranges.length <= Unicode_linearMax) {
		let _g = 0;
		while(_g < ranges.length) {
			let i = ranges[_g];
			++_g;
			if(UInt.gt(i[0],r)) {
				return false;
			}
			if(UInt.gte(i[1],r)) {
				if(i[2] != 1) {
					return (UInt.toFloat(r - i[0]) % UInt.toFloat(i[2]) | 0) == 0;
				} else {
					return true;
				}
			}
		}
		return false;
	}
	let lo = 0;
	let hi = ranges.length;
	while(lo < hi) {
		let m = lo + ((hi - lo) / 2 | 0);
		let range_ = ranges[m];
		if(UInt.gte(r,range_[0]) && UInt.gte(range_[1],r)) {
			if(range_[2] != 1) {
				return (UInt.toFloat(r - range_[0]) % UInt.toFloat(range_[2]) | 0) == 0;
			} else {
				return true;
			}
		}
		if(UInt.gt(range_[0],r)) {
			hi = m;
		} else {
			lo = m + 1;
		}
	}
	return false;
}
function Unicode_Is(rangeTab,r) {
	let r16 = rangeTab.R16;
	if(r16.length > 0 && UInt.gt(r16[r16.length - 1][1],r)) {
		return Unicode_is16(r16,r);
	}
	let r32 = rangeTab.R32;
	if(r32.length > 0 && UInt.gte(r,r32[0][0])) {
		return Unicode_is32(r32,r);
	}
	return false;
}
class Std {
	static string(s) {
		return js_Boot.__string_rec(s,"");
	}
	static parseInt(x) {
		let v = parseInt(x);
		if(isNaN(v)) {
			return null;
		}
		return v;
	}
}
Std.__name__ = true;
class StringTools {
	static isSpace(s,pos) {
		let c = HxOverrides.cca(s,pos);
		if(!(c > 8 && c < 14)) {
			return c == 32;
		} else {
			return true;
		}
	}
	static ltrim(s) {
		let l = s.length;
		let r = 0;
		while(r < l && StringTools.isSpace(s,r)) ++r;
		if(r > 0) {
			return HxOverrides.substr(s,r,l - r);
		} else {
			return s;
		}
	}
	static rtrim(s) {
		let l = s.length;
		let r = 0;
		while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
		if(r > 0) {
			return HxOverrides.substr(s,0,l - r);
		} else {
			return s;
		}
	}
	static trim(s) {
		return StringTools.ltrim(StringTools.rtrim(s));
	}
}
StringTools.__name__ = true;
function NovelPeg_parseFilterNil(lines) {
	let items = [];
	if(((lines) instanceof Array)) {
		let x = lines;
		let _g = 0;
		while(_g < x.length) {
			let i = x[_g];
			++_g;
			if(i != null) {
				items.push(i);
			}
		}
	}
	return items;
}
function NovelPeg_gatherParams(first,v) {
	if(v == null) {
		return null;
	}
	let items = [first];
	let _g = 0;
	let _g1 = NovelPeg_parseFilterNil(v);
	while(_g < _g1.length) {
		let i = _g1[_g];
		++_g;
		items.push(i);
	}
	return items;
}
function NovelPeg_retWrap(a,err) {
	return { val : a, err : err};
}
function NovelPeg_toStr(x) {
	return x;
}
function NovelPeg_toStrWithTrim(x) {
	return StringTools.trim(x);
}
function NovelPeg__oninput17(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput17(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput17(p.cur);
}
function NovelPeg__oninput30(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput30(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput30(p.cur);
}
function NovelPeg__oninput25(c,cond) {
	return NovelPeg_retWrap(cond,NovelPeg_nil);
}
function NovelPeg__calloninput25(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput25(p.cur,stack.h["cond"]);
}
function NovelPeg__oninput42(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput42(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput42(p.cur);
}
function NovelPeg__oninput38(c,name) {
	return NovelPeg_retWrap(name,NovelPeg_nil);
}
function NovelPeg__calloninput38(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput38(p.cur,stack.h["name"]);
}
function NovelPeg__oninput57(c) {
	return NovelPeg_retWrap(NovelPeg_nil,NovelPeg_nil);
}
function NovelPeg__calloninput57(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput57(p.cur);
}
function NovelPeg__oninput72(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput72(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput72(p.cur);
}
function NovelPeg__oninput79(c) {
	return NovelPeg_retWrap([],NovelPeg_nil);
}
function NovelPeg__calloninput79(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput79(p.cur);
}
function NovelPeg__oninput93(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput93(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput93(p.cur);
}
function NovelPeg__oninput98(c) {
	return NovelPeg_retWrap(Std.parseInt(c.text),NovelPeg_nil);
}
function NovelPeg__calloninput98(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput98(p.cur);
}
function NovelPeg__oninput110(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput110(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput110(p.cur);
}
function NovelPeg__oninput91(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput91(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput91(p.cur);
}
function NovelPeg__oninput167(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput167(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput167(p.cur);
}
function NovelPeg__oninput172(c) {
	return NovelPeg_retWrap(Std.parseInt(c.text),NovelPeg_nil);
}
function NovelPeg__calloninput172(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput172(p.cur);
}
function NovelPeg__oninput184(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput184(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput184(p.cur);
}
function NovelPeg__oninput165(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput165(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput165(p.cur);
}
function NovelPeg__oninput157(c,e) {
	return NovelPeg_retWrap(e,NovelPeg_nil);
}
function NovelPeg__calloninput157(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput157(p.cur,stack.h["e"]);
}
function NovelPeg__oninput85(c,first,rest) {
	let tmp = NovelPeg_gatherParams(first,rest);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput85(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput85(p.cur,stack.h["first"],stack.h["rest"]);
}
function NovelPeg__oninput68(c,name,params) {
	return NovelPeg_retWrap({ type : "", pos : [c.pos.line,c.pos.col,c.pos.offset], name : name, params : params},NovelPeg_nil);
}
function NovelPeg__calloninput68(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput68(p.cur,stack.h["name"],stack.h["params"]);
}
function NovelPeg__oninput236(c) {
	let tmp = NovelPeg_toStrWithTrim(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput236(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput236(p.cur);
}
function NovelPeg__oninput232(c,code) {
	return NovelPeg_retWrap({ pos : [c.pos.line,c.pos.col,c.pos.offset], type : "code", code : code},NovelPeg_nil);
}
function NovelPeg__calloninput232(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput232(p.cur,stack.h["code"]);
}
function NovelPeg__oninput248(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput248(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput248(p.cur);
}
function NovelPeg__oninput246(c,text) {
	if(StringTools.trim(c.text) == "") {
		return NovelPeg_retWrap(null,null);
	}
	return NovelPeg_retWrap({ pos : [c.pos.line,c.pos.col,c.pos.offset], name : "sayRaw", type : "", params : [text]},NovelPeg_nil);
}
function NovelPeg__calloninput246(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput246(p.cur,stack.h["text"]);
}
function NovelPeg__oninput52(c,lines) {
	return NovelPeg_retWrap(lines,NovelPeg_nil);
}
function NovelPeg__calloninput52(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput52(p.cur,stack.h["lines"]);
}
function NovelPeg__oninput10(c,name,cond,next,lines) {
	let e = c.data.setSectionIndex(name);
	if(e != null) {
		return NovelPeg_retWrap(null,e);
	}
	let tmp = [c.pos.line,c.pos.col,c.pos.offset];
	let tmp1 = NovelPeg_parseFilterNil(lines);
	let tmp2 = c.data.getNextIndex();
	return NovelPeg_retWrap({ pos : tmp, name : name, lines : tmp1, condition : cond, next : next, nextIndex : tmp2},NovelPeg_nil);
}
function NovelPeg__calloninput10(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput10(p.cur,stack.h["name"],stack.h["cond"],stack.h["next"],stack.h["lines"]);
}
function NovelPeg__oninput263(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput263(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput263(p.cur);
}
function NovelPeg__oninput277(c) {
	return NovelPeg_retWrap(NovelPeg_nil,NovelPeg_nil);
}
function NovelPeg__calloninput277(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput277(p.cur);
}
function NovelPeg__oninput292(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput292(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput292(p.cur);
}
function NovelPeg__oninput299(c) {
	return NovelPeg_retWrap([],NovelPeg_nil);
}
function NovelPeg__calloninput299(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput299(p.cur);
}
function NovelPeg__oninput313(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput313(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput313(p.cur);
}
function NovelPeg__oninput318(c) {
	return NovelPeg_retWrap(Std.parseInt(c.text),NovelPeg_nil);
}
function NovelPeg__calloninput318(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput318(p.cur);
}
function NovelPeg__oninput330(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput330(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput330(p.cur);
}
function NovelPeg__oninput311(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput311(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput311(p.cur);
}
function NovelPeg__oninput387(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput387(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput387(p.cur);
}
function NovelPeg__oninput392(c) {
	return NovelPeg_retWrap(Std.parseInt(c.text),NovelPeg_nil);
}
function NovelPeg__calloninput392(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput392(p.cur);
}
function NovelPeg__oninput404(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput404(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput404(p.cur);
}
function NovelPeg__oninput385(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput385(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput385(p.cur);
}
function NovelPeg__oninput377(c,e) {
	return NovelPeg_retWrap(e,NovelPeg_nil);
}
function NovelPeg__calloninput377(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput377(p.cur,stack.h["e"]);
}
function NovelPeg__oninput305(c,first,rest) {
	let tmp = NovelPeg_gatherParams(first,rest);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput305(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput305(p.cur,stack.h["first"],stack.h["rest"]);
}
function NovelPeg__oninput288(c,name,params) {
	return NovelPeg_retWrap({ type : "", pos : [c.pos.line,c.pos.col,c.pos.offset], name : name, params : params},NovelPeg_nil);
}
function NovelPeg__calloninput288(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput288(p.cur,stack.h["name"],stack.h["params"]);
}
function NovelPeg__oninput456(c) {
	let tmp = NovelPeg_toStrWithTrim(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput456(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput456(p.cur);
}
function NovelPeg__oninput452(c,code) {
	return NovelPeg_retWrap({ pos : [c.pos.line,c.pos.col,c.pos.offset], type : "code", code : code},NovelPeg_nil);
}
function NovelPeg__calloninput452(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput452(p.cur,stack.h["code"]);
}
function NovelPeg__oninput468(c) {
	let tmp = NovelPeg_toStr(c.text);
	return NovelPeg_retWrap(tmp,NovelPeg_nil);
}
function NovelPeg__calloninput468(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput468(p.cur);
}
function NovelPeg__oninput466(c,text) {
	if(StringTools.trim(c.text) == "") {
		return NovelPeg_retWrap(null,null);
	}
	return NovelPeg_retWrap({ pos : [c.pos.line,c.pos.col,c.pos.offset], name : "sayRaw", type : "", params : [text]},NovelPeg_nil);
}
function NovelPeg__calloninput466(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput466(p.cur,stack.h["text"]);
}
function NovelPeg__oninput272(c,lines) {
	return NovelPeg_retWrap(lines,NovelPeg_nil);
}
function NovelPeg__calloninput272(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput272(p.cur,stack.h["lines"]);
}
function NovelPeg__oninput258(c,name,lines) {
	let e = c.data.setSectionIndex(name);
	if(e != null) {
		return NovelPeg_retWrap(null,e);
	}
	let tmp = [c.pos.line,c.pos.col,c.pos.offset];
	let tmp1 = NovelPeg_parseFilterNil(lines);
	let tmp2 = c.data.getNextIndex();
	return NovelPeg_retWrap({ pos : tmp, name : name, lines : tmp1, nextIndex : tmp2},NovelPeg_nil);
}
function NovelPeg__calloninput258(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput258(p.cur,stack.h["name"],stack.h["lines"]);
}
function NovelPeg__oninput6(c,nodes) {
	return NovelPeg_retWrap(new Story(nodes),NovelPeg_nil);
}
function NovelPeg__calloninput6(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput6(p.cur,stack.h["nodes"]);
}
function NovelPeg__oninput1(c,x) {
	return NovelPeg_retWrap(x,NovelPeg_nil);
}
function NovelPeg__calloninput1(p) {
	let _this = p.vstack;
	let stack = _this.head == null ? null : _this.head.elt;
	let _ = stack;
	return NovelPeg__oninput1(p.cur,stack.h["x"]);
}
function NovelPeg_savepointClone(x) {
	return { line : x.line, col : x.col, offset : x.offset, rn : x.rn, w : x.w};
}
function NovelPeg_listJoin(list,sep,lastSep) {
	switch(list.length) {
	case 0:
		return "";
	case 1:
		return list[0];
	default:
		return list.slice(0,list.length - 1).join(sep) + " " + lastSep + " " + list[list.length - 1];
	}
}
class UInt {
	static gt(a,b) {
		let aNeg = a < 0;
		let bNeg = b < 0;
		if(aNeg != bNeg) {
			return aNeg;
		} else {
			return a > b;
		}
	}
	static gte(a,b) {
		let aNeg = a < 0;
		let bNeg = b < 0;
		if(aNeg != bNeg) {
			return aNeg;
		} else {
			return a >= b;
		}
	}
	static toFloat(this1) {
		let int = this1;
		if(int < 0) {
			return 4294967296.0 + int;
		} else {
			return int + 0.0;
		}
	}
}
class haxe_IMap {
}
haxe_IMap.__name__ = true;
haxe_IMap.__isInterface__ = true;
class haxe_Log {
	static formatOutput(v,infos) {
		let str = Std.string(v);
		if(infos == null) {
			return str;
		}
		let pstr = infos.fileName + ":" + infos.lineNumber;
		if(infos.customParams != null) {
			let _g = 0;
			let _g1 = infos.customParams;
			while(_g < _g1.length) {
				let v = _g1[_g];
				++_g;
				str += ", " + Std.string(v);
			}
		}
		return pstr + ": " + str;
	}
	static trace(v,infos) {
		let str = haxe_Log.formatOutput(v,infos);
		if(typeof(console) != "undefined" && console.log != null) {
			console.log(str);
		}
	}
}
haxe_Log.__name__ = true;
class haxe_ValueException extends haxe_Exception {
	constructor(value,previous,native) {
		super(String(value),previous,native);
		this.value = value;
	}
}
haxe_ValueException.__name__ = true;
haxe_ValueException.__super__ = haxe_Exception;
Object.assign(haxe_ValueException.prototype, {
	__class__: haxe_ValueException
});
class haxe_ds_GenericCell {
	constructor(elt,next) {
		this.elt = elt;
		this.next = next;
	}
}
haxe_ds_GenericCell.__name__ = true;
Object.assign(haxe_ds_GenericCell.prototype, {
	__class__: haxe_ds_GenericCell
});
class haxe_ds_GenericStack {
	constructor() {
	}
	iterator() {
		let l = this.head;
		return { hasNext : function() {
			return l != null;
		}, next : function() {
			let k = l;
			l = k.next;
			return k.elt;
		}};
	}
}
haxe_ds_GenericStack.__name__ = true;
Object.assign(haxe_ds_GenericStack.prototype, {
	__class__: haxe_ds_GenericStack
});
class haxe_ds_StringMap {
	constructor() {
		this.h = Object.create(null);
	}
}
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
Object.assign(haxe_ds_StringMap.prototype, {
	__class__: haxe_ds_StringMap
});
class haxe_io_Bytes {
	constructor(data) {
		this.length = data.byteLength;
		this.b = new Uint8Array(data);
		this.b.bufferValue = data;
		data.hxBytes = this;
		data.bytes = this.b;
	}
	getString(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		let s = "";
		let b = this.b;
		let i = pos;
		let max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			let debug = pos > 0;
			while(i < max) {
				let c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					let code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					let c2 = b[i++];
					let code = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else {
					let c2 = b[i++];
					let c3 = b[i++];
					let u = (c & 15) << 18 | (c2 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				let c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	toString() {
		return this.getString(0,this.length);
	}
	static ofString(s,encoding) {
		if(encoding == haxe_io_Encoding.RawNative) {
			let buf = new Uint8Array(s.length << 1);
			let _g = 0;
			let _g1 = s.length;
			while(_g < _g1) {
				let i = _g++;
				let c = s.charCodeAt(i);
				buf[i << 1] = c & 255;
				buf[i << 1 | 1] = c >> 8;
			}
			return new haxe_io_Bytes(buf.buffer);
		}
		let a = [];
		let i = 0;
		while(i < s.length) {
			let c = s.charCodeAt(i++);
			if(55296 <= c && c <= 56319) {
				c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
			}
			if(c <= 127) {
				a.push(c);
			} else if(c <= 2047) {
				a.push(192 | c >> 6);
				a.push(128 | c & 63);
			} else if(c <= 65535) {
				a.push(224 | c >> 12);
				a.push(128 | c >> 6 & 63);
				a.push(128 | c & 63);
			} else {
				a.push(240 | c >> 18);
				a.push(128 | c >> 12 & 63);
				a.push(128 | c >> 6 & 63);
				a.push(128 | c & 63);
			}
		}
		return new haxe_io_Bytes(new Uint8Array(a).buffer);
	}
}
haxe_io_Bytes.__name__ = true;
Object.assign(haxe_io_Bytes.prototype, {
	__class__: haxe_io_Bytes
});
class haxe_io_BytesBuffer {
	constructor() {
		this.pos = 0;
		this.size = 0;
	}
	add(src) {
		if(this.pos + src.length > this.size) {
			this.grow(src.length);
		}
		if(this.size == 0) {
			return;
		}
		let sub = new Uint8Array(src.b.buffer,src.b.byteOffset,src.length);
		this.u8.set(sub,this.pos);
		this.pos += src.length;
	}
	addString(v,encoding) {
		this.add(haxe_io_Bytes.ofString(v,encoding));
	}
	grow(delta) {
		let req = this.pos + delta;
		let nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		let nbuf = new ArrayBuffer(nsize);
		let nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	getBytes() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		let b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
}
haxe_io_BytesBuffer.__name__ = true;
Object.assign(haxe_io_BytesBuffer.prototype, {
	__class__: haxe_io_BytesBuffer
});
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__:true,__constructs__:null
	,UTF8: {_hx_name:"UTF8",_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_name:"RawNative",_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__:true,__constructs__:null
	,Blocked: {_hx_name:"Blocked",_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_name:"Overflow",_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_name:"OutsideBounds",_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["e"],$_)
};
haxe_io_Error.__constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds,haxe_io_Error.Custom];
class haxe_iterators_ArrayIterator {
	constructor(array) {
		this.current = 0;
		this.array = array;
	}
	hasNext() {
		return this.current < this.array.length;
	}
	next() {
		return this.array[this.current++];
	}
}
haxe_iterators_ArrayIterator.__name__ = true;
Object.assign(haxe_iterators_ArrayIterator.prototype, {
	__class__: haxe_iterators_ArrayIterator
});
class js_Boot {
	static getClass(o) {
		if(o == null) {
			return null;
		} else if(((o) instanceof Array)) {
			return Array;
		} else {
			let cl = o.__class__;
			if(cl != null) {
				return cl;
			}
			let name = js_Boot.__nativeClassName(o);
			if(name != null) {
				return js_Boot.__resolveNativeClass(name);
			}
			return null;
		}
	}
	static __string_rec(o,s) {
		if(o == null) {
			return "null";
		}
		if(s.length >= 5) {
			return "<...>";
		}
		let t = typeof(o);
		if(t == "function" && (o.__name__ || o.__ename__)) {
			t = "object";
		}
		switch(t) {
		case "function":
			return "<function>";
		case "object":
			if(o.__enum__) {
				let e = $hxEnums[o.__enum__];
				let con = e.__constructs__[o._hx_index];
				let n = con._hx_name;
				if(con.__params__) {
					s = s + "\t";
					return n + "(" + ((function($this) {
						var $r;
						let _g = [];
						{
							let _g1 = 0;
							let _g2 = con.__params__;
							while(true) {
								if(!(_g1 < _g2.length)) {
									break;
								}
								let p = _g2[_g1];
								_g1 = _g1 + 1;
								_g.push(js_Boot.__string_rec(o[p],s));
							}
						}
						$r = _g;
						return $r;
					}(this))).join(",") + ")";
				} else {
					return n;
				}
			}
			if(((o) instanceof Array)) {
				let str = "[";
				s += "\t";
				let _g = 0;
				let _g1 = o.length;
				while(_g < _g1) {
					let i = _g++;
					str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
				}
				str += "]";
				return str;
			}
			let tostr;
			try {
				tostr = o.toString;
			} catch( _g ) {
				return "???";
			}
			if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
				let s2 = o.toString();
				if(s2 != "[object Object]") {
					return s2;
				}
			}
			let str = "{\n";
			s += "\t";
			let hasp = o.hasOwnProperty != null;
			let k = null;
			for( k in o ) {
			if(hasp && !o.hasOwnProperty(k)) {
				continue;
			}
			if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
				continue;
			}
			if(str.length != 2) {
				str += ", \n";
			}
			str += s + k + " : " + js_Boot.__string_rec(o[k],s);
			}
			s = s.substring(1);
			str += "\n" + s + "}";
			return str;
		case "string":
			return o;
		default:
			return String(o);
		}
	}
	static __interfLoop(cc,cl) {
		if(cc == null) {
			return false;
		}
		if(cc == cl) {
			return true;
		}
		let intf = cc.__interfaces__;
		if(intf != null && (cc.__super__ == null || cc.__super__.__interfaces__ != intf)) {
			let _g = 0;
			let _g1 = intf.length;
			while(_g < _g1) {
				let i = _g++;
				let i1 = intf[i];
				if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
					return true;
				}
			}
		}
		return js_Boot.__interfLoop(cc.__super__,cl);
	}
	static __instanceof(o,cl) {
		if(cl == null) {
			return false;
		}
		switch(cl) {
		case Array:
			return ((o) instanceof Array);
		case Bool:
			return typeof(o) == "boolean";
		case Dynamic:
			return o != null;
		case Float:
			return typeof(o) == "number";
		case Int:
			if(typeof(o) == "number") {
				return ((o | 0) === o);
			} else {
				return false;
			}
			break;
		case String:
			return typeof(o) == "string";
		default:
			if(o != null) {
				if(typeof(cl) == "function") {
					if(js_Boot.__downcastCheck(o,cl)) {
						return true;
					}
				} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
					if(((o) instanceof cl)) {
						return true;
					}
				}
			} else {
				return false;
			}
			if(cl == Class ? o.__name__ != null : false) {
				return true;
			}
			if(cl == Enum ? o.__ename__ != null : false) {
				return true;
			}
			return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
		}
	}
	static __downcastCheck(o,cl) {
		if(!((o) instanceof cl)) {
			if(cl.__isInterface__) {
				return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	static __cast(o,t) {
		if(o == null || js_Boot.__instanceof(o,t)) {
			return o;
		} else {
			throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
		}
	}
	static __nativeClassName(o) {
		let name = js_Boot.__toStr.call(o).slice(8,-1);
		if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
			return null;
		}
		return name;
	}
	static __isNativeObj(o) {
		return js_Boot.__nativeClassName(o) != null;
	}
	static __resolveNativeClass(name) {
		return $global[name];
	}
}
js_Boot.__name__ = true;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
{
	Object.defineProperty(String.prototype,"__class__",{ value : String, enumerable : false, writable : true});
	String.__name__ = true;
	Array.__name__ = true;
	var Int = { };
	var Dynamic = { };
	var Float = Number;
	var Bool = Boolean;
	var Class = { };
	var Enum = { };
}
js_Boot.__toStr = ({ }).toString;
Errors.errNoRule = new haxe_Exception("grammar has no rule");
Errors.errInvalidEntrypoint = new haxe_Exception("invalid entrypoint");
Errors.errMaxExprCnt = new haxe_Exception("max number of expressions parsed");
var Unicode_linearMax = 18;
var Unicode_MaxLatin1 = 255;
var Unicode__L = { R16 : [[65,90,1],[97,122,1],[170,181,11],[186,192,6],[193,214,1],[216,246,1],[248,705,1],[710,721,1],[736,740,1],[748,750,2],[880,884,1],[886,887,1],[890,893,1],[895,902,7],[904,906,1],[908,910,2],[911,929,1],[931,1013,1],[1015,1153,1],[1162,1327,1],[1329,1366,1],[1369,1376,7],[1377,1416,1],[1488,1514,1],[1519,1522,1],[1568,1610,1],[1646,1647,1],[1649,1747,1],[1749,1765,16],[1766,1774,8],[1775,1786,11],[1787,1788,1],[1791,1808,17],[1810,1839,1],[1869,1957,1],[1969,1994,25],[1995,2026,1],[2036,2037,1],[2042,2048,6],[2049,2069,1],[2074,2084,10],[2088,2112,24],[2113,2136,1],[2144,2154,1],[2160,2183,1],[2185,2190,1],[2208,2249,1],[2308,2361,1],[2365,2384,19],[2392,2401,1],[2417,2432,1],[2437,2444,1],[2447,2448,1],[2451,2472,1],[2474,2480,1],[2482,2486,4],[2487,2489,1],[2493,2510,17],[2524,2525,1],[2527,2529,1],[2544,2545,1],[2556,2565,9],[2566,2570,1],[2575,2576,1],[2579,2600,1],[2602,2608,1],[2610,2611,1],[2613,2614,1],[2616,2617,1],[2649,2652,1],[2654,2674,20],[2675,2676,1],[2693,2701,1],[2703,2705,1],[2707,2728,1],[2730,2736,1],[2738,2739,1],[2741,2745,1],[2749,2768,19],[2784,2785,1],[2809,2821,12],[2822,2828,1],[2831,2832,1],[2835,2856,1],[2858,2864,1],[2866,2867,1],[2869,2873,1],[2877,2908,31],[2909,2911,2],[2912,2913,1],[2929,2947,18],[2949,2954,1],[2958,2960,1],[2962,2965,1],[2969,2970,1],[2972,2974,2],[2975,2979,4],[2980,2984,4],[2985,2986,1],[2990,3001,1],[3024,3077,53],[3078,3084,1],[3086,3088,1],[3090,3112,1],[3114,3129,1],[3133,3160,27],[3161,3162,1],[3165,3168,3],[3169,3200,31],[3205,3212,1],[3214,3216,1],[3218,3240,1],[3242,3251,1],[3253,3257,1],[3261,3293,32],[3294,3296,2],[3297,3313,16],[3314,3332,18],[3333,3340,1],[3342,3344,1],[3346,3386,1],[3389,3406,17],[3412,3414,1],[3423,3425,1],[3450,3455,1],[3461,3478,1],[3482,3505,1],[3507,3515,1],[3517,3520,3],[3521,3526,1],[3585,3632,1],[3634,3635,1],[3648,3654,1],[3713,3714,1],[3716,3718,2],[3719,3722,1],[3724,3747,1],[3749,3751,2],[3752,3760,1],[3762,3763,1],[3773,3776,3],[3777,3780,1],[3782,3804,22],[3805,3807,1],[3840,3904,64],[3905,3911,1],[3913,3948,1],[3976,3980,1],[4096,4138,1],[4159,4176,17],[4177,4181,1],[4186,4189,1],[4193,4197,4],[4198,4206,8],[4207,4208,1],[4213,4225,1],[4238,4256,18],[4257,4293,1],[4295,4301,6],[4304,4346,1],[4348,4680,1],[4682,4685,1],[4688,4694,1],[4696,4698,2],[4699,4701,1],[4704,4744,1],[4746,4749,1],[4752,4784,1],[4786,4789,1],[4792,4798,1],[4800,4802,2],[4803,4805,1],[4808,4822,1],[4824,4880,1],[4882,4885,1],[4888,4954,1],[4992,5007,1],[5024,5109,1],[5112,5117,1],[5121,5740,1],[5743,5759,1],[5761,5786,1],[5792,5866,1],[5873,5880,1],[5888,5905,1],[5919,5937,1],[5952,5969,1],[5984,5996,1],[5998,6000,1],[6016,6067,1],[6103,6108,5],[6176,6264,1],[6272,6276,1],[6279,6312,1],[6314,6320,6],[6321,6389,1],[6400,6430,1],[6480,6509,1],[6512,6516,1],[6528,6571,1],[6576,6601,1],[6656,6678,1],[6688,6740,1],[6823,6917,94],[6918,6963,1],[6981,6988,1],[7043,7072,1],[7086,7087,1],[7098,7141,1],[7168,7203,1],[7245,7247,1],[7258,7293,1],[7296,7304,1],[7312,7354,1],[7357,7359,1],[7401,7404,1],[7406,7411,1],[7413,7414,1],[7418,7424,6],[7425,7615,1],[7680,7957,1],[7960,7965,1],[7968,8005,1],[8008,8013,1],[8016,8023,1],[8025,8031,2],[8032,8061,1],[8064,8116,1],[8118,8124,1],[8126,8130,4],[8131,8132,1],[8134,8140,1],[8144,8147,1],[8150,8155,1],[8160,8172,1],[8178,8180,1],[8182,8188,1],[8305,8319,14],[8336,8348,1],[8450,8455,5],[8458,8467,1],[8469,8473,4],[8474,8477,1],[8484,8490,2],[8491,8493,1],[8495,8505,1],[8508,8511,1],[8517,8521,1],[8526,8579,53],[8580,11264,2684],[11265,11492,1],[11499,11502,1],[11506,11507,1],[11520,11557,1],[11559,11565,6],[11568,11623,1],[11631,11648,17],[11649,11670,1],[11680,11686,1],[11688,11694,1],[11696,11702,1],[11704,11710,1],[11712,11718,1],[11720,11726,1],[11728,11734,1],[11736,11742,1],[11823,12293,470],[12294,12337,43],[12338,12341,1],[12347,12348,1],[12353,12438,1],[12445,12447,1],[12449,12538,1],[12540,12543,1],[12549,12591,1],[12593,12686,1],[12704,12735,1],[12784,12799,1],[13312,19903,1],[19968,42124,1],[42192,42237,1],[42240,42508,1],[42512,42527,1],[42538,42539,1],[42560,42606,1],[42623,42653,1],[42656,42725,1],[42775,42783,1],[42786,42888,1],[42891,42954,1],[42960,42961,1],[42963,42965,2],[42966,42969,1],[42994,43009,1],[43011,43013,1],[43015,43018,1],[43020,43042,1],[43072,43123,1],[43138,43187,1],[43250,43255,1],[43259,43261,2],[43262,43274,12],[43275,43301,1],[43312,43334,1],[43360,43388,1],[43396,43442,1],[43471,43488,17],[43489,43492,1],[43494,43503,1],[43514,43518,1],[43520,43560,1],[43584,43586,1],[43588,43595,1],[43616,43638,1],[43642,43646,4],[43647,43695,1],[43697,43701,4],[43702,43705,3],[43706,43709,1],[43712,43714,2],[43739,43741,1],[43744,43754,1],[43762,43764,1],[43777,43782,1],[43785,43790,1],[43793,43798,1],[43808,43814,1],[43816,43822,1],[43824,43866,1],[43868,43881,1],[43888,44002,1],[44032,55203,1],[55216,55238,1],[55243,55291,1],[63744,64109,1],[64112,64217,1],[64256,64262,1],[64275,64279,1],[64285,64287,2],[64288,64296,1],[64298,64310,1],[64312,64316,1],[64318,64320,2],[64321,64323,2],[64324,64326,2],[64327,64433,1],[64467,64829,1],[64848,64911,1],[64914,64967,1],[65008,65019,1],[65136,65140,1],[65142,65276,1],[65313,65338,1],[65345,65370,1],[65382,65470,1],[65474,65479,1],[65482,65487,1],[65490,65495,1],[65498,65500,1]], R32 : [[65536,65547,1],[65549,65574,1],[65576,65594,1],[65596,65597,1],[65599,65613,1],[65616,65629,1],[65664,65786,1],[66176,66204,1],[66208,66256,1],[66304,66335,1],[66349,66368,1],[66370,66377,1],[66384,66421,1],[66432,66461,1],[66464,66499,1],[66504,66511,1],[66560,66717,1],[66736,66771,1],[66776,66811,1],[66816,66855,1],[66864,66915,1],[66928,66938,1],[66940,66954,1],[66956,66962,1],[66964,66965,1],[66967,66977,1],[66979,66993,1],[66995,67001,1],[67003,67004,1],[67072,67382,1],[67392,67413,1],[67424,67431,1],[67456,67461,1],[67463,67504,1],[67506,67514,1],[67584,67589,1],[67592,67594,2],[67595,67637,1],[67639,67640,1],[67644,67647,3],[67648,67669,1],[67680,67702,1],[67712,67742,1],[67808,67826,1],[67828,67829,1],[67840,67861,1],[67872,67897,1],[67968,68023,1],[68030,68031,1],[68096,68112,16],[68113,68115,1],[68117,68119,1],[68121,68149,1],[68192,68220,1],[68224,68252,1],[68288,68295,1],[68297,68324,1],[68352,68405,1],[68416,68437,1],[68448,68466,1],[68480,68497,1],[68608,68680,1],[68736,68786,1],[68800,68850,1],[68864,68899,1],[69248,69289,1],[69296,69297,1],[69376,69404,1],[69415,69424,9],[69425,69445,1],[69488,69505,1],[69552,69572,1],[69600,69622,1],[69635,69687,1],[69745,69746,1],[69749,69763,14],[69764,69807,1],[69840,69864,1],[69891,69926,1],[69956,69959,3],[69968,70002,1],[70006,70019,13],[70020,70066,1],[70081,70084,1],[70106,70108,2],[70144,70161,1],[70163,70187,1],[70207,70208,1],[70272,70278,1],[70280,70282,2],[70283,70285,1],[70287,70301,1],[70303,70312,1],[70320,70366,1],[70405,70412,1],[70415,70416,1],[70419,70440,1],[70442,70448,1],[70450,70451,1],[70453,70457,1],[70461,70480,19],[70493,70497,1],[70656,70708,1],[70727,70730,1],[70751,70753,1],[70784,70831,1],[70852,70853,1],[70855,71040,185],[71041,71086,1],[71128,71131,1],[71168,71215,1],[71236,71296,60],[71297,71338,1],[71352,71424,72],[71425,71450,1],[71488,71494,1],[71680,71723,1],[71840,71903,1],[71935,71942,1],[71945,71948,3],[71949,71955,1],[71957,71958,1],[71960,71983,1],[71999,72001,2],[72096,72103,1],[72106,72144,1],[72161,72163,2],[72192,72203,11],[72204,72242,1],[72250,72272,22],[72284,72329,1],[72349,72368,19],[72369,72440,1],[72704,72712,1],[72714,72750,1],[72768,72818,50],[72819,72847,1],[72960,72966,1],[72968,72969,1],[72971,73008,1],[73030,73056,26],[73057,73061,1],[73063,73064,1],[73066,73097,1],[73112,73440,328],[73441,73458,1],[73474,73476,2],[73477,73488,1],[73490,73523,1],[73648,73728,80],[73729,74649,1],[74880,75075,1],[77712,77808,1],[77824,78895,1],[78913,78918,1],[82944,83526,1],[92160,92728,1],[92736,92766,1],[92784,92862,1],[92880,92909,1],[92928,92975,1],[92992,92995,1],[93027,93047,1],[93053,93071,1],[93760,93823,1],[93952,94026,1],[94032,94099,67],[94100,94111,1],[94176,94177,1],[94179,94208,29],[94209,100343,1],[100352,101589,1],[101632,101640,1],[110576,110579,1],[110581,110587,1],[110589,110590,1],[110592,110882,1],[110898,110928,30],[110929,110930,1],[110933,110948,15],[110949,110951,1],[110960,111355,1],[113664,113770,1],[113776,113788,1],[113792,113800,1],[113808,113817,1],[119808,119892,1],[119894,119964,1],[119966,119967,1],[119970,119973,3],[119974,119977,3],[119978,119980,1],[119982,119993,1],[119995,119997,2],[119998,120003,1],[120005,120069,1],[120071,120074,1],[120077,120084,1],[120086,120092,1],[120094,120121,1],[120123,120126,1],[120128,120132,1],[120134,120138,4],[120139,120144,1],[120146,120485,1],[120488,120512,1],[120514,120538,1],[120540,120570,1],[120572,120596,1],[120598,120628,1],[120630,120654,1],[120656,120686,1],[120688,120712,1],[120714,120744,1],[120746,120770,1],[120772,120779,1],[122624,122654,1],[122661,122666,1],[122928,122989,1],[123136,123180,1],[123191,123197,1],[123214,123536,322],[123537,123565,1],[123584,123627,1],[124112,124139,1],[124896,124902,1],[124904,124907,1],[124909,124910,1],[124912,124926,1],[124928,125124,1],[125184,125251,1],[125259,126464,1205],[126465,126467,1],[126469,126495,1],[126497,126498,1],[126500,126503,3],[126505,126514,1],[126516,126519,1],[126521,126523,2],[126530,126535,5],[126537,126541,2],[126542,126543,1],[126545,126546,1],[126548,126551,3],[126553,126561,2],[126562,126564,2],[126567,126570,1],[126572,126578,1],[126580,126583,1],[126585,126588,1],[126590,126592,2],[126593,126601,1],[126603,126619,1],[126625,126627,1],[126629,126633,1],[126635,126651,1],[131072,173791,1],[173824,177977,1],[177984,178205,1],[178208,183969,1],[183984,191456,1],[194560,195101,1],[196608,201546,1],[201552,205743,1]], LatinOffset : 2};
var Unicode__Mc = { R16 : [[2307,2363,56],[2366,2368,1],[2377,2380,1],[2382,2383,1],[2434,2435,1],[2494,2496,1],[2503,2504,1],[2507,2508,1],[2519,2563,44],[2622,2624,1],[2691,2750,59],[2751,2752,1],[2761,2763,2],[2764,2818,54],[2819,2878,59],[2880,2887,7],[2888,2891,3],[2892,2903,11],[3006,3007,1],[3009,3010,1],[3014,3016,1],[3018,3020,1],[3031,3073,42],[3074,3075,1],[3137,3140,1],[3202,3203,1],[3262,3264,2],[3265,3268,1],[3271,3272,1],[3274,3275,1],[3285,3286,1],[3315,3330,15],[3331,3390,59],[3391,3392,1],[3398,3400,1],[3402,3404,1],[3415,3458,43],[3459,3535,76],[3536,3537,1],[3544,3551,1],[3570,3571,1],[3902,3903,1],[3967,4139,172],[4140,4145,5],[4152,4155,3],[4156,4182,26],[4183,4194,11],[4195,4196,1],[4199,4205,1],[4227,4228,1],[4231,4236,1],[4239,4250,11],[4251,4252,1],[5909,5940,31],[6070,6078,8],[6079,6085,1],[6087,6088,1],[6435,6438,1],[6441,6443,1],[6448,6449,1],[6451,6456,1],[6681,6682,1],[6741,6743,2],[6753,6755,2],[6756,6765,9],[6766,6770,1],[6916,6965,49],[6971,6973,2],[6974,6977,1],[6979,6980,1],[7042,7073,31],[7078,7079,1],[7082,7143,61],[7146,7148,1],[7150,7154,4],[7155,7204,49],[7205,7211,1],[7220,7221,1],[7393,7415,22],[12334,12335,1],[43043,43044,1],[43047,43136,89],[43137,43188,51],[43189,43203,1],[43346,43347,1],[43395,43444,49],[43445,43450,5],[43451,43454,3],[43455,43456,1],[43567,43568,1],[43571,43572,1],[43597,43643,46],[43645,43755,110],[43758,43759,1],[43765,44003,238],[44004,44006,2],[44007,44009,2],[44010,44012,2]], R32 : [[69632,69634,2],[69762,69808,46],[69809,69810,1],[69815,69816,1],[69932,69957,25],[69958,70018,60],[70067,70069,1],[70079,70080,1],[70094,70188,94],[70189,70190,1],[70194,70195,1],[70197,70368,171],[70369,70370,1],[70402,70403,1],[70462,70463,1],[70465,70468,1],[70471,70472,1],[70475,70477,1],[70487,70498,11],[70499,70709,210],[70710,70711,1],[70720,70721,1],[70725,70832,107],[70833,70834,1],[70841,70843,2],[70844,70846,1],[70849,71087,238],[71088,71089,1],[71096,71099,1],[71102,71216,114],[71217,71218,1],[71227,71228,1],[71230,71340,110],[71342,71343,1],[71350,71456,106],[71457,71462,5],[71724,71726,1],[71736,71984,248],[71985,71989,1],[71991,71992,1],[71997,72000,3],[72002,72145,143],[72146,72147,1],[72156,72159,1],[72164,72249,85],[72279,72280,1],[72343,72751,408],[72766,72873,107],[72881,72884,3],[73098,73102,1],[73107,73108,1],[73110,73461,351],[73462,73475,13],[73524,73525,1],[73534,73535,1],[73537,94033,20496],[94034,94087,1],[94192,94193,1],[119141,119142,1],[119149,119154,1]], LatinOffset : 2};
var Unicode__Nl = { R16 : [[5870,5872,1],[8544,8578,1],[8581,8584,1],[12295,12321,26],[12322,12329,1],[12344,12346,1],[42726,42735,1]], R32 : [[65856,65908,1],[66369,66378,9],[66513,66517,1],[74752,74862,1]], LatinOffset : 2};
var Unicode__Pc = { R16 : [[95,8255,8160],[8256,8276,20],[65075,65076,1],[65101,65103,1],[65343,65343,1]], R32 : [], LatinOffset : 2};
var Unicode__Nd = { R16 : [[48,57,1],[1632,1641,1],[1776,1785,1],[1984,1993,1],[2406,2415,1],[2534,2543,1],[2662,2671,1],[2790,2799,1],[2918,2927,1],[3046,3055,1],[3174,3183,1],[3302,3311,1],[3430,3439,1],[3558,3567,1],[3664,3673,1],[3792,3801,1],[3872,3881,1],[4160,4169,1],[4240,4249,1],[6112,6121,1],[6160,6169,1],[6470,6479,1],[6608,6617,1],[6784,6793,1],[6800,6809,1],[6992,7001,1],[7088,7097,1],[7232,7241,1],[7248,7257,1],[42528,42537,1],[43216,43225,1],[43264,43273,1],[43472,43481,1],[43504,43513,1],[43600,43609,1],[44016,44025,1],[65296,65305,1]], R32 : [[66720,66729,1],[68912,68921,1],[69734,69743,1],[69872,69881,1],[69942,69951,1],[70096,70105,1],[70384,70393,1],[70736,70745,1],[70864,70873,1],[71248,71257,1],[71360,71369,1],[71472,71481,1],[71904,71913,1],[72016,72025,1],[72784,72793,1],[73040,73049,1],[73120,73129,1],[73552,73561,1],[92768,92777,1],[92864,92873,1],[93008,93017,1],[120782,120831,1],[123200,123209,1],[123632,123641,1],[124144,124153,1],[125264,125273,1],[130032,130041,1]], LatinOffset : 2};
var Unicode__Mn = { R16 : [[768,879,1],[1155,1159,1],[1425,1469,1],[1471,1473,2],[1474,1476,2],[1477,1479,2],[1552,1562,1],[1611,1631,1],[1648,1750,102],[1751,1756,1],[1759,1764,1],[1767,1768,1],[1770,1773,1],[1809,1840,31],[1841,1866,1],[1958,1968,1],[2027,2035,1],[2045,2070,25],[2071,2073,1],[2075,2083,1],[2085,2087,1],[2089,2093,1],[2137,2139,1],[2200,2207,1],[2250,2273,1],[2275,2306,1],[2362,2364,2],[2369,2376,1],[2381,2385,4],[2386,2391,1],[2402,2403,1],[2433,2492,59],[2497,2500,1],[2509,2530,21],[2531,2558,27],[2561,2562,1],[2620,2625,5],[2626,2631,5],[2632,2635,3],[2636,2637,1],[2641,2672,31],[2673,2677,4],[2689,2690,1],[2748,2753,5],[2754,2757,1],[2759,2760,1],[2765,2786,21],[2787,2810,23],[2811,2815,1],[2817,2876,59],[2879,2881,2],[2882,2884,1],[2893,2901,8],[2902,2914,12],[2915,2946,31],[3008,3021,13],[3072,3076,4],[3132,3134,2],[3135,3136,1],[3142,3144,1],[3146,3149,1],[3157,3158,1],[3170,3171,1],[3201,3260,59],[3263,3270,7],[3276,3277,1],[3298,3299,1],[3328,3329,1],[3387,3388,1],[3393,3396,1],[3405,3426,21],[3427,3457,30],[3530,3538,8],[3539,3540,1],[3542,3633,91],[3636,3642,1],[3655,3662,1],[3761,3764,3],[3765,3772,1],[3784,3790,1],[3864,3865,1],[3893,3897,2],[3953,3966,1],[3968,3972,1],[3974,3975,1],[3981,3991,1],[3993,4028,1],[4038,4141,103],[4142,4144,1],[4146,4151,1],[4153,4154,1],[4157,4158,1],[4184,4185,1],[4190,4192,1],[4209,4212,1],[4226,4229,3],[4230,4237,7],[4253,4957,704],[4958,4959,1],[5906,5908,1],[5938,5939,1],[5970,5971,1],[6002,6003,1],[6068,6069,1],[6071,6077,1],[6086,6089,3],[6090,6099,1],[6109,6155,46],[6156,6157,1],[6159,6277,118],[6278,6313,35],[6432,6434,1],[6439,6440,1],[6450,6457,7],[6458,6459,1],[6679,6680,1],[6683,6742,59],[6744,6750,1],[6752,6754,2],[6757,6764,1],[6771,6780,1],[6783,6832,49],[6833,6845,1],[6847,6862,1],[6912,6915,1],[6964,6966,2],[6967,6970,1],[6972,6978,6],[7019,7027,1],[7040,7041,1],[7074,7077,1],[7080,7081,1],[7083,7085,1],[7142,7144,2],[7145,7149,4],[7151,7153,1],[7212,7219,1],[7222,7223,1],[7376,7378,1],[7380,7392,1],[7394,7400,1],[7405,7412,7],[7416,7417,1],[7616,7679,1],[8400,8412,1],[8417,8421,4],[8422,8432,1],[11503,11505,1],[11647,11744,97],[11745,11775,1],[12330,12333,1],[12441,12442,1],[42607,42612,5],[42613,42621,1],[42654,42655,1],[42736,42737,1],[43010,43014,4],[43019,43045,26],[43046,43052,6],[43204,43205,1],[43232,43249,1],[43263,43302,39],[43303,43309,1],[43335,43345,1],[43392,43394,1],[43443,43446,3],[43447,43449,1],[43452,43453,1],[43493,43561,68],[43562,43566,1],[43569,43570,1],[43573,43574,1],[43587,43596,9],[43644,43696,52],[43698,43700,1],[43703,43704,1],[43710,43711,1],[43713,43756,43],[43757,43766,9],[44005,44008,3],[44013,64286,20273],[65024,65039,1],[65056,65071,1]], R32 : [[66045,66272,227],[66422,66426,1],[68097,68099,1],[68101,68102,1],[68108,68111,1],[68152,68154,1],[68159,68325,166],[68326,68900,574],[68901,68903,1],[69291,69292,1],[69373,69375,1],[69446,69456,1],[69506,69509,1],[69633,69688,55],[69689,69702,1],[69744,69747,3],[69748,69759,11],[69760,69761,1],[69811,69814,1],[69817,69818,1],[69826,69888,62],[69889,69890,1],[69927,69931,1],[69933,69940,1],[70003,70016,13],[70017,70070,53],[70071,70078,1],[70089,70092,1],[70095,70191,96],[70192,70193,1],[70196,70198,2],[70199,70206,7],[70209,70367,158],[70371,70378,1],[70400,70401,1],[70459,70460,1],[70464,70502,38],[70503,70508,1],[70512,70516,1],[70712,70719,1],[70722,70724,1],[70726,70750,24],[70835,70840,1],[70842,70847,5],[70848,70850,2],[70851,71090,239],[71091,71093,1],[71100,71101,1],[71103,71104,1],[71132,71133,1],[71219,71226,1],[71229,71231,2],[71232,71339,107],[71341,71344,3],[71345,71349,1],[71351,71453,102],[71454,71455,1],[71458,71461,1],[71463,71467,1],[71727,71735,1],[71737,71738,1],[71995,71996,1],[71998,72003,5],[72148,72151,1],[72154,72155,1],[72160,72193,33],[72194,72202,1],[72243,72248,1],[72251,72254,1],[72263,72273,10],[72274,72278,1],[72281,72283,1],[72330,72342,1],[72344,72345,1],[72752,72758,1],[72760,72765,1],[72767,72850,83],[72851,72871,1],[72874,72880,1],[72882,72883,1],[72885,72886,1],[73009,73014,1],[73018,73020,2],[73021,73023,2],[73024,73029,1],[73031,73104,73],[73105,73109,4],[73111,73459,348],[73460,73472,12],[73473,73526,53],[73527,73530,1],[73536,73538,2],[78912,78919,7],[78920,78933,1],[92912,92916,1],[92976,92982,1],[94031,94095,64],[94096,94098,1],[94180,113821,19641],[113822,118528,4706],[118529,118573,1],[118576,118598,1],[119143,119145,1],[119163,119170,1],[119173,119179,1],[119210,119213,1],[119362,119364,1],[121344,121398,1],[121403,121452,1],[121461,121476,15],[121499,121503,1],[121505,121519,1],[122880,122886,1],[122888,122904,1],[122907,122913,1],[122915,122916,1],[122918,122922,1],[123023,123184,161],[123185,123190,1],[123566,123628,62],[123629,123631,1],[124140,124143,1],[125136,125142,1],[125252,125258,1],[917760,917999,1]], LatinOffset : 2};
var Unicode__Other_ID_Continue = { R16 : [[183,903,720],[4969,4977,1],[6618,6618,1]], R32 : [], LatinOffset : 2};
var Unicode__Other_ID_Start = { R16 : [[6277,6278,1],[8472,8494,22],[12443,12444,1]], R32 : [], LatinOffset : 2};
var Unicode_L = Unicode__L;
var Unicode_Mc = Unicode__Mc;
var Unicode_Nl = Unicode__Nl;
var Unicode_Pc = Unicode__Pc;
var Unicode_Nd = Unicode__Nd;
var Unicode_Mn = Unicode__Mn;
var Unicode_Other_ID_Continue = Unicode__Other_ID_Continue;
var Unicode_Other_ID_Start = Unicode__Other_ID_Start;
var NovelPeg_nil = null;
var NovelPeg_g = { rules : [{ name : "input", pos : { line : 127, col : 1, offset : 2549}, expr : AllExpr.ActionExpr({ pos : { line : 127, col : 10, offset : 2558}, run : NovelPeg__calloninput1, expr : AllExpr.SeqExpr({ pos : { line : 127, col : 10, offset : 2558}, exprs : [AllExpr.ZeroOrMoreExpr({ pos : { line : 334, col : 20, offset : 8737}, expr : AllExpr.CharClassMatcher({ pos : { line : 334, col : 20, offset : 8737}, val : "[ \\n\\t\\r]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\n",0),HxOverrides.cca("\t",0),HxOverrides.cca("\r",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.LabeledExpr({ pos : { line : 127, col : 13, offset : 2561}, label : "x", expr : AllExpr.ActionExpr({ pos : { line : 131, col : 10, offset : 2618}, run : NovelPeg__calloninput6, expr : AllExpr.LabeledExpr({ pos : { line : 131, col : 10, offset : 2618}, label : "nodes", expr : AllExpr.ZeroOrMoreExpr({ pos : { line : 131, col : 17, offset : 2625}, expr : AllExpr.ChoiceExpr({ pos : { line : 149, col : 9, offset : 3157}, alternatives : [AllExpr.ActionExpr({ pos : { line : 151, col : 14, offset : 3195}, run : NovelPeg__calloninput10, expr : AllExpr.SeqExpr({ pos : { line : 151, col : 14, offset : 3195}, exprs : [AllExpr.LitMatcher({ pos : { line : 151, col : 14, offset : 3195}, val : ":", ignoreCase : false, want : "\":\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 336, col : 11, offset : 8761}, expr : AllExpr.CharClassMatcher({ pos : { line : 336, col : 11, offset : 8761}, val : "[ \\t]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\t",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.LabeledExpr({ pos : { line : 151, col : 25, offset : 3206}, label : "name", expr : AllExpr.ZeroOrOneExpr({ pos : { line : 151, col : 30, offset : 3211}, expr : AllExpr.ActionExpr({ pos : { line : 324, col : 15, offset : 8415}, run : NovelPeg__calloninput17, expr : AllExpr.SeqExpr({ pos : { line : 324, col : 15, offset : 8415}, exprs : [AllExpr.CharClassMatcher({ pos : { line : 329, col : 13, offset : 8521}, val : "[_\\pL\\pOther_ID_Start]", chars : [HxOverrides.cca("_",0)], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start], ignoreCase : false, inverted : false}),AllExpr.ZeroOrMoreExpr({ pos : { line : 324, col : 24, offset : 8424}, expr : AllExpr.CharClassMatcher({ pos : { line : 332, col : 16, offset : 8638}, val : "[\\pL\\pOther_ID_Start\\pNl\\pMn\\pMc\\pNd\\pPc\\pOther_ID_Continue]", chars : [], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start,Unicode_Nl,Unicode_Mn,Unicode_Mc,Unicode_Nd,Unicode_Pc,Unicode_Other_ID_Continue], ignoreCase : false, inverted : false})})]})})})}),AllExpr.ZeroOrMoreExpr({ pos : { line : 336, col : 11, offset : 8761}, expr : AllExpr.CharClassMatcher({ pos : { line : 336, col : 11, offset : 8761}, val : "[ \\t]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\t",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.LabeledExpr({ pos : { line : 151, col : 50, offset : 3231}, label : "cond", expr : AllExpr.ActionExpr({ pos : { line : 146, col : 14, offset : 3015}, run : NovelPeg__calloninput25, expr : AllExpr.SeqExpr({ pos : { line : 146, col : 14, offset : 3015}, exprs : [AllExpr.LitMatcher({ pos : { line : 146, col : 14, offset : 3015}, val : "[", ignoreCase : false, want : "\"[\""}),AllExpr.LabeledExpr({ pos : { line : 146, col : 18, offset : 3019}, label : "cond", expr : AllExpr.ZeroOrOneExpr({ pos : { line : 146, col : 23, offset : 3024}, expr : AllExpr.ActionExpr({ pos : { line : 145, col : 21, offset : 2954}, run : NovelPeg__calloninput30, expr : AllExpr.OneOrMoreExpr({ pos : { line : 145, col : 21, offset : 2954}, expr : AllExpr.CharClassMatcher({ pos : { line : 145, col : 21, offset : 2954}, val : "[^]]", chars : [HxOverrides.cca("]",0)], ranges : [], ignoreCase : false, inverted : true})})})})}),AllExpr.LitMatcher({ pos : { line : 146, col : 41, offset : 3042}, val : "]", ignoreCase : false, want : "\"]\""})]})})}),AllExpr.ZeroOrMoreExpr({ pos : { line : 336, col : 11, offset : 8761}, expr : AllExpr.CharClassMatcher({ pos : { line : 336, col : 11, offset : 8761}, val : "[ \\t]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\t",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.LabeledExpr({ pos : { line : 151, col : 72, offset : 3253}, label : "next", expr : AllExpr.ZeroOrOneExpr({ pos : { line : 151, col : 77, offset : 3258}, expr : AllExpr.ActionExpr({ pos : { line : 147, col : 14, offset : 3091}, run : NovelPeg__calloninput38, expr : AllExpr.SeqExpr({ pos : { line : 147, col : 14, offset : 3091}, exprs : [AllExpr.LitMatcher({ pos : { line : 147, col : 14, offset : 3091}, val : "[", ignoreCase : false, want : "\"[\""}),AllExpr.LabeledExpr({ pos : { line : 147, col : 18, offset : 3095}, label : "name", expr : AllExpr.ActionExpr({ pos : { line : 324, col : 15, offset : 8415}, run : NovelPeg__calloninput42, expr : AllExpr.SeqExpr({ pos : { line : 324, col : 15, offset : 8415}, exprs : [AllExpr.CharClassMatcher({ pos : { line : 329, col : 13, offset : 8521}, val : "[_\\pL\\pOther_ID_Start]", chars : [HxOverrides.cca("_",0)], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start], ignoreCase : false, inverted : false}),AllExpr.ZeroOrMoreExpr({ pos : { line : 324, col : 24, offset : 8424}, expr : AllExpr.CharClassMatcher({ pos : { line : 332, col : 16, offset : 8638}, val : "[\\pL\\pOther_ID_Start\\pNl\\pMn\\pMc\\pNd\\pPc\\pOther_ID_Continue]", chars : [], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start,Unicode_Nl,Unicode_Mn,Unicode_Mc,Unicode_Nd,Unicode_Pc,Unicode_Other_ID_Continue], ignoreCase : false, inverted : false})})]})})}),AllExpr.LitMatcher({ pos : { line : 147, col : 34, offset : 3111}, val : "]", ignoreCase : false, want : "\"]\""})]})})})}),AllExpr.ZeroOrMoreExpr({ pos : { line : 336, col : 11, offset : 8761}, expr : AllExpr.CharClassMatcher({ pos : { line : 336, col : 11, offset : 8761}, val : "[ \\t]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\t",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.CharClassMatcher({ pos : { line : 338, col : 7, offset : 8777}, val : "[\\r\\n]", chars : [HxOverrides.cca("\r",0),HxOverrides.cca("\n",0)], ranges : [], ignoreCase : false, inverted : false}),AllExpr.LabeledExpr({ pos : { line : 151, col : 99, offset : 3280}, label : "lines", expr : AllExpr.ActionExpr({ pos : { line : 215, col : 14, offset : 5003}, run : NovelPeg__calloninput52, expr : AllExpr.SeqExpr({ pos : { line : 215, col : 14, offset : 5003}, exprs : [AllExpr.LabeledExpr({ pos : { line : 215, col : 14, offset : 5003}, label : "lines", expr : AllExpr.ZeroOrMoreExpr({ pos : { line : 215, col : 20, offset : 5009}, expr : AllExpr.ChoiceExpr({ pos : { line : 217, col : 13, offset : 5069}, alternatives : [AllExpr.ActionExpr({ pos : { line : 219, col : 24, offset : 5163}, run : NovelPeg__calloninput57, expr : AllExpr.SeqExpr({ pos : { line : 219, col : 24, offset : 5163}, exprs : [AllExpr.LitMatcher({ pos : { line : 219, col : 24, offset : 5163}, val : "@#", ignoreCase : false, want : "\"@#\""}),AllExpr.OneOrMoreExpr({ pos : { line : 219, col : 32, offset : 5171}, expr : AllExpr.SeqExpr({ pos : { line : 219, col : 33, offset : 5172}, exprs : [AllExpr.NotExpr({ pos : { line : 219, col : 33, offset : 5172}, expr : AllExpr.CharClassMatcher({ pos : { line : 338, col : 7, offset : 8777}, val : "[\\r\\n]", chars : [HxOverrides.cca("\r",0),HxOverrides.cca("\n",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.AnyMatcher({ line : 219, col : 37, offset : 5176})]})}),AllExpr.CharClassMatcher({ pos : { line : 338, col : 7, offset : 8777}, val : "[\\r\\n]", chars : [HxOverrides.cca("\r",0),HxOverrides.cca("\n",0)], ranges : [], ignoreCase : false, inverted : false}),AllExpr.ZeroOrMoreExpr({ pos : { line : 334, col : 20, offset : 8737}, expr : AllExpr.CharClassMatcher({ pos : { line : 334, col : 20, offset : 8737}, val : "[ \\n\\t\\r]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\n",0),HxOverrides.cca("\t",0),HxOverrides.cca("\r",0)], ranges : [], ignoreCase : false, inverted : false})})]})}),AllExpr.ActionExpr({ pos : { line : 221, col : 18, offset : 5236}, run : NovelPeg__calloninput68, expr : AllExpr.SeqExpr({ pos : { line : 221, col : 18, offset : 5236}, exprs : [AllExpr.LitMatcher({ pos : { line : 221, col : 18, offset : 5236}, val : "@", ignoreCase : false, want : "\"@\""}),AllExpr.LabeledExpr({ pos : { line : 221, col : 22, offset : 5240}, label : "name", expr : AllExpr.ActionExpr({ pos : { line : 324, col : 15, offset : 8415}, run : NovelPeg__calloninput72, expr : AllExpr.SeqExpr({ pos : { line : 324, col : 15, offset : 8415}, exprs : [AllExpr.CharClassMatcher({ pos : { line : 329, col : 13, offset : 8521}, val : "[_\\pL\\pOther_ID_Start]", chars : [HxOverrides.cca("_",0)], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start], ignoreCase : false, inverted : false}),AllExpr.ZeroOrMoreExpr({ pos : { line : 324, col : 24, offset : 8424}, expr : AllExpr.CharClassMatcher({ pos : { line : 332, col : 16, offset : 8638}, val : "[\\pL\\pOther_ID_Start\\pNl\\pMn\\pMc\\pNd\\pPc\\pOther_ID_Continue]", chars : [], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start,Unicode_Nl,Unicode_Mn,Unicode_Mc,Unicode_Nd,Unicode_Pc,Unicode_Other_ID_Continue], ignoreCase : false, inverted : false})})]})})}),AllExpr.LabeledExpr({ pos : { line : 221, col : 38, offset : 5256}, label : "params", expr : AllExpr.ChoiceExpr({ pos : { line : 282, col : 15, offset : 6890}, alternatives : [AllExpr.ActionExpr({ pos : { line : 282, col : 15, offset : 6890}, run : NovelPeg__calloninput79, expr : AllExpr.SeqExpr({ pos : { line : 282, col : 15, offset : 6890}, exprs : [AllExpr.LitMatcher({ pos : { line : 282, col : 15, offset : 6890}, val : "(", ignoreCase : false, want : "\"(\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 334, col : 20, offset : 8737}, expr : AllExpr.CharClassMatcher({ pos : { line : 334, col : 20, offset : 8737}, val : "[ \\n\\t\\r]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\n",0),HxOverrides.cca("\t",0),HxOverrides.cca("\r",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.LitMatcher({ pos : { line : 282, col : 22, offset : 6897}, val : ")", ignoreCase : false, want : "\")\""})]})}),AllExpr.ActionExpr({ pos : { line : 283, col : 15, offset : 7023}, run : NovelPeg__calloninput85, expr : AllExpr.SeqExpr({ pos : { line : 283, col : 15, offset : 7023}, exprs : [AllExpr.LitMatcher({ pos : { line : 283, col : 15, offset : 7023}, val : "(", ignoreCase : false, want : "\"(\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 334, col : 20, offset : 8737}, expr : AllExpr.CharClassMatcher({ pos : { line : 334, col : 20, offset : 8737}, val : "[ \\n\\t\\r]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\n",0),HxOverrides.cca("\t",0),HxOverrides.cca("\r",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.LabeledExpr({ pos : { line : 283, col : 22, offset : 7030}, label : "first", expr : AllExpr.ActionExpr({ pos : { line : 288, col : 13, offset : 7288}, run : NovelPeg__calloninput91, expr : AllExpr.ChoiceExpr({ pos : { line : 290, col : 14, offset : 7354}, alternatives : [AllExpr.ActionExpr({ pos : { line : 324, col : 15, offset : 8415}, run : NovelPeg__calloninput93, expr : AllExpr.SeqExpr({ pos : { line : 324, col : 15, offset : 8415}, exprs : [AllExpr.CharClassMatcher({ pos : { line : 329, col : 13, offset : 8521}, val : "[_\\pL\\pOther_ID_Start]", chars : [HxOverrides.cca("_",0)], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start], ignoreCase : false, inverted : false}),AllExpr.ZeroOrMoreExpr({ pos : { line : 324, col : 24, offset : 8424}, expr : AllExpr.CharClassMatcher({ pos : { line : 332, col : 16, offset : 8638}, val : "[\\pL\\pOther_ID_Start\\pNl\\pMn\\pMc\\pNd\\pPc\\pOther_ID_Continue]", chars : [], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start,Unicode_Nl,Unicode_Mn,Unicode_Mc,Unicode_Nd,Unicode_Pc,Unicode_Other_ID_Continue], ignoreCase : false, inverted : false})})]})}),AllExpr.ActionExpr({ pos : { line : 316, col : 12, offset : 8242}, run : NovelPeg__calloninput98, expr : AllExpr.SeqExpr({ pos : { line : 316, col : 12, offset : 8242}, exprs : [AllExpr.ZeroOrOneExpr({ pos : { line : 316, col : 12, offset : 8242}, expr : AllExpr.LitMatcher({ pos : { line : 316, col : 12, offset : 8242}, val : "-", ignoreCase : false, want : "\"-\""})}),AllExpr.OneOrMoreExpr({ pos : { line : 316, col : 17, offset : 8247}, expr : AllExpr.CharClassMatcher({ pos : { line : 316, col : 17, offset : 8247}, val : "[0-9]", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0)], ignoreCase : false, inverted : false})})]})}),AllExpr.SeqExpr({ pos : { line : 292, col : 14, offset : 7401}, exprs : [AllExpr.ZeroOrMoreExpr({ pos : { line : 292, col : 14, offset : 7401}, expr : AllExpr.CharClassMatcher({ pos : { line : 292, col : 14, offset : 7401}, val : "[0-9]", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0)], ignoreCase : false, inverted : false})}),AllExpr.LitMatcher({ pos : { line : 292, col : 21, offset : 7408}, val : ".", ignoreCase : false, want : "\".\""}),AllExpr.OneOrMoreExpr({ pos : { line : 292, col : 25, offset : 7412}, expr : AllExpr.CharClassMatcher({ pos : { line : 292, col : 25, offset : 7412}, val : "[0-9]", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0)], ignoreCase : false, inverted : false})})]}),AllExpr.ActionExpr({ pos : { line : 295, col : 15, offset : 7461}, run : NovelPeg__calloninput110, expr : AllExpr.ChoiceExpr({ pos : { line : 295, col : 16, offset : 7462}, alternatives : [AllExpr.SeqExpr({ pos : { line : 297, col : 14, offset : 7548}, exprs : [AllExpr.LitMatcher({ pos : { line : 297, col : 14, offset : 7548}, val : "\"", ignoreCase : false, want : "\"\\\"\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 297, col : 18, offset : 7552}, expr : AllExpr.ChoiceExpr({ pos : { line : 297, col : 20, offset : 7554}, alternatives : [AllExpr.SeqExpr({ pos : { line : 297, col : 20, offset : 7554}, exprs : [AllExpr.NotExpr({ pos : { line : 297, col : 20, offset : 7554}, expr : AllExpr.CharClassMatcher({ pos : { line : 308, col : 15, offset : 7988}, val : "[\"\\\\\\x00-\\x1f]", chars : [HxOverrides.cca("\"",0),HxOverrides.cca("\\",0)], ranges : [HxOverrides.cca("\x00",0),HxOverrides.cca("\x1F",0)], ignoreCase : false, inverted : false})}),AllExpr.AnyMatcher({ line : 297, col : 33, offset : 7567})]}),AllExpr.SeqExpr({ pos : { line : 297, col : 37, offset : 7571}, exprs : [AllExpr.LitMatcher({ pos : { line : 297, col : 37, offset : 7571}, val : "\\", ignoreCase : false, want : "\"\\\\\""}),AllExpr.ChoiceExpr({ pos : { line : 309, col : 18, offset : 8023}, alternatives : [AllExpr.CharClassMatcher({ pos : { line : 310, col : 20, offset : 8078}, val : "[\"\\\\/bfnrt]", chars : [HxOverrides.cca("\"",0),HxOverrides.cca("\\",0),HxOverrides.cca("/",0),HxOverrides.cca("b",0),HxOverrides.cca("f",0),HxOverrides.cca("n",0),HxOverrides.cca("r",0),HxOverrides.cca("t",0)], ranges : [], ignoreCase : false, inverted : false}),AllExpr.SeqExpr({ pos : { line : 311, col : 17, offset : 8109}, exprs : [AllExpr.LitMatcher({ pos : { line : 311, col : 17, offset : 8109}, val : "u", ignoreCase : false, want : "\"u\""}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false})]})]})]})]})}),AllExpr.LitMatcher({ pos : { line : 297, col : 60, offset : 7594}, val : "\"", ignoreCase : false, want : "\"\\\"\""})]}),AllExpr.SeqExpr({ pos : { line : 298, col : 14, offset : 7612}, exprs : [AllExpr.LitMatcher({ pos : { line : 298, col : 14, offset : 7612}, val : "'", ignoreCase : false, want : "\"'\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 298, col : 19, offset : 7617}, expr : AllExpr.ChoiceExpr({ pos : { line : 298, col : 21, offset : 7619}, alternatives : [AllExpr.SeqExpr({ pos : { line : 298, col : 21, offset : 7619}, exprs : [AllExpr.NotExpr({ pos : { line : 298, col : 21, offset : 7619}, expr : AllExpr.CharClassMatcher({ pos : { line : 300, col : 16, offset : 7686}, val : "[\\\\\\\\x00-\\x1f]", chars : [HxOverrides.cca("'",0),HxOverrides.cca("\\",0)], ranges : [HxOverrides.cca("\x00",0),HxOverrides.cca("\x1F",0)], ignoreCase : false, inverted : false})}),AllExpr.AnyMatcher({ line : 298, col : 35, offset : 7633})]}),AllExpr.SeqExpr({ pos : { line : 298, col : 39, offset : 7637}, exprs : [AllExpr.LitMatcher({ pos : { line : 298, col : 39, offset : 7637}, val : "\\", ignoreCase : false, want : "\"\\\\\""}),AllExpr.ChoiceExpr({ pos : { line : 301, col : 19, offset : 7722}, alternatives : [AllExpr.CharClassMatcher({ pos : { line : 302, col : 21, offset : 7779}, val : "[\\\\\\/bfnrt]", chars : [HxOverrides.cca("'",0),HxOverrides.cca("\\",0),HxOverrides.cca("/",0),HxOverrides.cca("b",0),HxOverrides.cca("f",0),HxOverrides.cca("n",0),HxOverrides.cca("r",0),HxOverrides.cca("t",0)], ranges : [], ignoreCase : false, inverted : false}),AllExpr.SeqExpr({ pos : { line : 311, col : 17, offset : 8109}, exprs : [AllExpr.LitMatcher({ pos : { line : 311, col : 17, offset : 8109}, val : "u", ignoreCase : false, want : "\"u\""}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false})]})]})]})]})}),AllExpr.LitMatcher({ pos : { line : 298, col : 63, offset : 7661}, val : "'", ignoreCase : false, want : "\"'\""})]}),AllExpr.SeqExpr({ pos : { line : 295, col : 29, offset : 7475}, exprs : [AllExpr.LitMatcher({ pos : { line : 295, col : 29, offset : 7475}, val : "`", ignoreCase : false, want : "\"`\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 295, col : 33, offset : 7479}, expr : AllExpr.CharClassMatcher({ pos : { line : 295, col : 33, offset : 7479}, val : "[^`]", chars : [HxOverrides.cca("`",0)], ranges : [], ignoreCase : false, inverted : true})}),AllExpr.LitMatcher({ pos : { line : 295, col : 39, offset : 7485}, val : "`", ignoreCase : false, want : "\"`\""})]})]})})]})})}),AllExpr.LabeledExpr({ pos : { line : 283, col : 37, offset : 7045}, label : "rest", expr : AllExpr.ZeroOrMoreExpr({ pos : { line : 283, col : 43, offset : 7051}, expr : AllExpr.ActionExpr({ pos : { line : 285, col : 26, offset : 7159}, run : NovelPeg__calloninput157, expr : AllExpr.SeqExpr({ pos : { line : 285, col : 26, offset : 7159}, exprs : [AllExpr.ZeroOrMoreExpr({ pos : { line : 334, col : 20, offset : 8737}, expr : AllExpr.CharClassMatcher({ pos : { line : 334, col : 20, offset : 8737}, val : "[ \\n\\t\\r]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\n",0),HxOverrides.cca("\t",0),HxOverrides.cca("\r",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.LitMatcher({ pos : { line : 285, col : 29, offset : 7162}, val : ",", ignoreCase : false, want : "\",\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 334, col : 20, offset : 8737}, expr : AllExpr.CharClassMatcher({ pos : { line : 334, col : 20, offset : 8737}, val : "[ \\n\\t\\r]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\n",0),HxOverrides.cca("\t",0),HxOverrides.cca("\r",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.LabeledExpr({ pos : { line : 285, col : 36, offset : 7169}, label : "e", expr : AllExpr.ActionExpr({ pos : { line : 288, col : 13, offset : 7288}, run : NovelPeg__calloninput165, expr : AllExpr.ChoiceExpr({ pos : { line : 290, col : 14, offset : 7354}, alternatives : [AllExpr.ActionExpr({ pos : { line : 324, col : 15, offset : 8415}, run : NovelPeg__calloninput167, expr : AllExpr.SeqExpr({ pos : { line : 324, col : 15, offset : 8415}, exprs : [AllExpr.CharClassMatcher({ pos : { line : 329, col : 13, offset : 8521}, val : "[_\\pL\\pOther_ID_Start]", chars : [HxOverrides.cca("_",0)], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start], ignoreCase : false, inverted : false}),AllExpr.ZeroOrMoreExpr({ pos : { line : 324, col : 24, offset : 8424}, expr : AllExpr.CharClassMatcher({ pos : { line : 332, col : 16, offset : 8638}, val : "[\\pL\\pOther_ID_Start\\pNl\\pMn\\pMc\\pNd\\pPc\\pOther_ID_Continue]", chars : [], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start,Unicode_Nl,Unicode_Mn,Unicode_Mc,Unicode_Nd,Unicode_Pc,Unicode_Other_ID_Continue], ignoreCase : false, inverted : false})})]})}),AllExpr.ActionExpr({ pos : { line : 316, col : 12, offset : 8242}, run : NovelPeg__calloninput172, expr : AllExpr.SeqExpr({ pos : { line : 316, col : 12, offset : 8242}, exprs : [AllExpr.ZeroOrOneExpr({ pos : { line : 316, col : 12, offset : 8242}, expr : AllExpr.LitMatcher({ pos : { line : 316, col : 12, offset : 8242}, val : "-", ignoreCase : false, want : "\"-\""})}),AllExpr.OneOrMoreExpr({ pos : { line : 316, col : 17, offset : 8247}, expr : AllExpr.CharClassMatcher({ pos : { line : 316, col : 17, offset : 8247}, val : "[0-9]", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0)], ignoreCase : false, inverted : false})})]})}),AllExpr.SeqExpr({ pos : { line : 292, col : 14, offset : 7401}, exprs : [AllExpr.ZeroOrMoreExpr({ pos : { line : 292, col : 14, offset : 7401}, expr : AllExpr.CharClassMatcher({ pos : { line : 292, col : 14, offset : 7401}, val : "[0-9]", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0)], ignoreCase : false, inverted : false})}),AllExpr.LitMatcher({ pos : { line : 292, col : 21, offset : 7408}, val : ".", ignoreCase : false, want : "\".\""}),AllExpr.OneOrMoreExpr({ pos : { line : 292, col : 25, offset : 7412}, expr : AllExpr.CharClassMatcher({ pos : { line : 292, col : 25, offset : 7412}, val : "[0-9]", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0)], ignoreCase : false, inverted : false})})]}),AllExpr.ActionExpr({ pos : { line : 295, col : 15, offset : 7461}, run : NovelPeg__calloninput184, expr : AllExpr.ChoiceExpr({ pos : { line : 295, col : 16, offset : 7462}, alternatives : [AllExpr.SeqExpr({ pos : { line : 297, col : 14, offset : 7548}, exprs : [AllExpr.LitMatcher({ pos : { line : 297, col : 14, offset : 7548}, val : "\"", ignoreCase : false, want : "\"\\\"\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 297, col : 18, offset : 7552}, expr : AllExpr.ChoiceExpr({ pos : { line : 297, col : 20, offset : 7554}, alternatives : [AllExpr.SeqExpr({ pos : { line : 297, col : 20, offset : 7554}, exprs : [AllExpr.NotExpr({ pos : { line : 297, col : 20, offset : 7554}, expr : AllExpr.CharClassMatcher({ pos : { line : 308, col : 15, offset : 7988}, val : "[\"\\\\\\x00-\\x1f]", chars : [HxOverrides.cca("\"",0),HxOverrides.cca("\\",0)], ranges : [HxOverrides.cca("\x00",0),HxOverrides.cca("\x1F",0)], ignoreCase : false, inverted : false})}),AllExpr.AnyMatcher({ line : 297, col : 33, offset : 7567})]}),AllExpr.SeqExpr({ pos : { line : 297, col : 37, offset : 7571}, exprs : [AllExpr.LitMatcher({ pos : { line : 297, col : 37, offset : 7571}, val : "\\", ignoreCase : false, want : "\"\\\\\""}),AllExpr.ChoiceExpr({ pos : { line : 309, col : 18, offset : 8023}, alternatives : [AllExpr.CharClassMatcher({ pos : { line : 310, col : 20, offset : 8078}, val : "[\"\\\\/bfnrt]", chars : [HxOverrides.cca("\"",0),HxOverrides.cca("\\",0),HxOverrides.cca("/",0),HxOverrides.cca("b",0),HxOverrides.cca("f",0),HxOverrides.cca("n",0),HxOverrides.cca("r",0),HxOverrides.cca("t",0)], ranges : [], ignoreCase : false, inverted : false}),AllExpr.SeqExpr({ pos : { line : 311, col : 17, offset : 8109}, exprs : [AllExpr.LitMatcher({ pos : { line : 311, col : 17, offset : 8109}, val : "u", ignoreCase : false, want : "\"u\""}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false})]})]})]})]})}),AllExpr.LitMatcher({ pos : { line : 297, col : 60, offset : 7594}, val : "\"", ignoreCase : false, want : "\"\\\"\""})]}),AllExpr.SeqExpr({ pos : { line : 298, col : 14, offset : 7612}, exprs : [AllExpr.LitMatcher({ pos : { line : 298, col : 14, offset : 7612}, val : "'", ignoreCase : false, want : "\"'\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 298, col : 19, offset : 7617}, expr : AllExpr.ChoiceExpr({ pos : { line : 298, col : 21, offset : 7619}, alternatives : [AllExpr.SeqExpr({ pos : { line : 298, col : 21, offset : 7619}, exprs : [AllExpr.NotExpr({ pos : { line : 298, col : 21, offset : 7619}, expr : AllExpr.CharClassMatcher({ pos : { line : 300, col : 16, offset : 7686}, val : "[\\\\\\\\x00-\\x1f]", chars : [HxOverrides.cca("'",0),HxOverrides.cca("\\",0)], ranges : [HxOverrides.cca("\x00",0),HxOverrides.cca("\x1F",0)], ignoreCase : false, inverted : false})}),AllExpr.AnyMatcher({ line : 298, col : 35, offset : 7633})]}),AllExpr.SeqExpr({ pos : { line : 298, col : 39, offset : 7637}, exprs : [AllExpr.LitMatcher({ pos : { line : 298, col : 39, offset : 7637}, val : "\\", ignoreCase : false, want : "\"\\\\\""}),AllExpr.ChoiceExpr({ pos : { line : 301, col : 19, offset : 7722}, alternatives : [AllExpr.CharClassMatcher({ pos : { line : 302, col : 21, offset : 7779}, val : "[\\\\\\/bfnrt]", chars : [HxOverrides.cca("'",0),HxOverrides.cca("\\",0),HxOverrides.cca("/",0),HxOverrides.cca("b",0),HxOverrides.cca("f",0),HxOverrides.cca("n",0),HxOverrides.cca("r",0),HxOverrides.cca("t",0)], ranges : [], ignoreCase : false, inverted : false}),AllExpr.SeqExpr({ pos : { line : 311, col : 17, offset : 8109}, exprs : [AllExpr.LitMatcher({ pos : { line : 311, col : 17, offset : 8109}, val : "u", ignoreCase : false, want : "\"u\""}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false})]})]})]})]})}),AllExpr.LitMatcher({ pos : { line : 298, col : 63, offset : 7661}, val : "'", ignoreCase : false, want : "\"'\""})]}),AllExpr.SeqExpr({ pos : { line : 295, col : 29, offset : 7475}, exprs : [AllExpr.LitMatcher({ pos : { line : 295, col : 29, offset : 7475}, val : "`", ignoreCase : false, want : "\"`\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 295, col : 33, offset : 7479}, expr : AllExpr.CharClassMatcher({ pos : { line : 295, col : 33, offset : 7479}, val : "[^`]", chars : [HxOverrides.cca("`",0)], ranges : [], ignoreCase : false, inverted : true})}),AllExpr.LitMatcher({ pos : { line : 295, col : 39, offset : 7485}, val : "`", ignoreCase : false, want : "\"`\""})]})]})})]})})})]})})})}),AllExpr.LitMatcher({ pos : { line : 283, col : 67, offset : 7075}, val : ")", ignoreCase : false, want : "\")\""})]})})]})}),AllExpr.ZeroOrMoreExpr({ pos : { line : 334, col : 20, offset : 8737}, expr : AllExpr.CharClassMatcher({ pos : { line : 334, col : 20, offset : 8737}, val : "[ \\n\\t\\r]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\n",0),HxOverrides.cca("\t",0),HxOverrides.cca("\r",0)], ranges : [], ignoreCase : false, inverted : false})})]})}),AllExpr.ActionExpr({ pos : { line : 240, col : 18, offset : 5708}, run : NovelPeg__calloninput232, expr : AllExpr.SeqExpr({ pos : { line : 240, col : 18, offset : 5708}, exprs : [AllExpr.LitMatcher({ pos : { line : 240, col : 18, offset : 5708}, val : "@{", ignoreCase : false, want : "\"@{\""}),AllExpr.LabeledExpr({ pos : { line : 240, col : 23, offset : 5713}, label : "code", expr : AllExpr.ActionExpr({ pos : { line : 280, col : 24, offset : 6808}, run : NovelPeg__calloninput236, expr : AllExpr.ZeroOrMoreExpr({ pos : { line : 280, col : 26, offset : 6810}, expr : AllExpr.SeqExpr({ pos : { line : 280, col : 28, offset : 6812}, exprs : [AllExpr.NotExpr({ pos : { line : 280, col : 28, offset : 6812}, expr : AllExpr.LitMatcher({ pos : { line : 280, col : 29, offset : 6813}, val : "}!", ignoreCase : false, want : "\"}!\""})}),AllExpr.AnyMatcher({ line : 280, col : 34, offset : 6818})]})})})}),AllExpr.LitMatcher({ pos : { line : 240, col : 48, offset : 5738}, val : "}!", ignoreCase : false, want : "\"}!\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 336, col : 11, offset : 8761}, expr : AllExpr.CharClassMatcher({ pos : { line : 336, col : 11, offset : 8761}, val : "[ \\t]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\t",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.CharClassMatcher({ pos : { line : 338, col : 7, offset : 8777}, val : "[\\r\\n]", chars : [HxOverrides.cca("\r",0),HxOverrides.cca("\n",0)], ranges : [], ignoreCase : false, inverted : false})]})}),AllExpr.ActionExpr({ pos : { line : 257, col : 18, offset : 6206}, run : NovelPeg__calloninput246, expr : AllExpr.LabeledExpr({ pos : { line : 257, col : 18, offset : 6206}, label : "text", expr : AllExpr.ActionExpr({ pos : { line : 256, col : 22, offset : 6125}, run : NovelPeg__calloninput248, expr : AllExpr.OneOrMoreExpr({ pos : { line : 256, col : 22, offset : 6125}, expr : AllExpr.SeqExpr({ pos : { line : 256, col : 24, offset : 6127}, exprs : [AllExpr.NotExpr({ pos : { line : 256, col : 24, offset : 6127}, expr : AllExpr.CharClassMatcher({ pos : { line : 256, col : 25, offset : 6128}, val : "[:@]", chars : [HxOverrides.cca(":",0),HxOverrides.cca("@",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.ZeroOrMoreExpr({ pos : { line : 256, col : 30, offset : 6133}, expr : AllExpr.CharClassMatcher({ pos : { line : 256, col : 30, offset : 6133}, val : "[^\\r\\n]", chars : [HxOverrides.cca("\r",0),HxOverrides.cca("\n",0)], ranges : [], ignoreCase : false, inverted : true})}),AllExpr.CharClassMatcher({ pos : { line : 338, col : 7, offset : 8777}, val : "[\\r\\n]", chars : [HxOverrides.cca("\r",0),HxOverrides.cca("\n",0)], ranges : [], ignoreCase : false, inverted : false})]})})})})})]})})}),AllExpr.ZeroOrMoreExpr({ pos : { line : 334, col : 20, offset : 8737}, expr : AllExpr.CharClassMatcher({ pos : { line : 334, col : 20, offset : 8737}, val : "[ \\n\\t\\r]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\n",0),HxOverrides.cca("\t",0),HxOverrides.cca("\r",0)], ranges : [], ignoreCase : false, inverted : false})})]})})})]})}),AllExpr.ActionExpr({ pos : { line : 186, col : 14, offset : 4208}, run : NovelPeg__calloninput258, expr : AllExpr.SeqExpr({ pos : { line : 186, col : 14, offset : 4208}, exprs : [AllExpr.LitMatcher({ pos : { line : 186, col : 14, offset : 4208}, val : ":", ignoreCase : false, want : "\":\""}),AllExpr.LabeledExpr({ pos : { line : 186, col : 18, offset : 4212}, label : "name", expr : AllExpr.ZeroOrOneExpr({ pos : { line : 186, col : 23, offset : 4217}, expr : AllExpr.ActionExpr({ pos : { line : 324, col : 15, offset : 8415}, run : NovelPeg__calloninput263, expr : AllExpr.SeqExpr({ pos : { line : 324, col : 15, offset : 8415}, exprs : [AllExpr.CharClassMatcher({ pos : { line : 329, col : 13, offset : 8521}, val : "[_\\pL\\pOther_ID_Start]", chars : [HxOverrides.cca("_",0)], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start], ignoreCase : false, inverted : false}),AllExpr.ZeroOrMoreExpr({ pos : { line : 324, col : 24, offset : 8424}, expr : AllExpr.CharClassMatcher({ pos : { line : 332, col : 16, offset : 8638}, val : "[\\pL\\pOther_ID_Start\\pNl\\pMn\\pMc\\pNd\\pPc\\pOther_ID_Continue]", chars : [], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start,Unicode_Nl,Unicode_Mn,Unicode_Mc,Unicode_Nd,Unicode_Pc,Unicode_Other_ID_Continue], ignoreCase : false, inverted : false})})]})})})}),AllExpr.ZeroOrMoreExpr({ pos : { line : 336, col : 11, offset : 8761}, expr : AllExpr.CharClassMatcher({ pos : { line : 336, col : 11, offset : 8761}, val : "[ \\t]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\t",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.CharClassMatcher({ pos : { line : 338, col : 7, offset : 8777}, val : "[\\r\\n]", chars : [HxOverrides.cca("\r",0),HxOverrides.cca("\n",0)], ranges : [], ignoreCase : false, inverted : false}),AllExpr.LabeledExpr({ pos : { line : 186, col : 45, offset : 4239}, label : "lines", expr : AllExpr.ActionExpr({ pos : { line : 215, col : 14, offset : 5003}, run : NovelPeg__calloninput272, expr : AllExpr.SeqExpr({ pos : { line : 215, col : 14, offset : 5003}, exprs : [AllExpr.LabeledExpr({ pos : { line : 215, col : 14, offset : 5003}, label : "lines", expr : AllExpr.ZeroOrMoreExpr({ pos : { line : 215, col : 20, offset : 5009}, expr : AllExpr.ChoiceExpr({ pos : { line : 217, col : 13, offset : 5069}, alternatives : [AllExpr.ActionExpr({ pos : { line : 219, col : 24, offset : 5163}, run : NovelPeg__calloninput277, expr : AllExpr.SeqExpr({ pos : { line : 219, col : 24, offset : 5163}, exprs : [AllExpr.LitMatcher({ pos : { line : 219, col : 24, offset : 5163}, val : "@#", ignoreCase : false, want : "\"@#\""}),AllExpr.OneOrMoreExpr({ pos : { line : 219, col : 32, offset : 5171}, expr : AllExpr.SeqExpr({ pos : { line : 219, col : 33, offset : 5172}, exprs : [AllExpr.NotExpr({ pos : { line : 219, col : 33, offset : 5172}, expr : AllExpr.CharClassMatcher({ pos : { line : 338, col : 7, offset : 8777}, val : "[\\r\\n]", chars : [HxOverrides.cca("\r",0),HxOverrides.cca("\n",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.AnyMatcher({ line : 219, col : 37, offset : 5176})]})}),AllExpr.CharClassMatcher({ pos : { line : 338, col : 7, offset : 8777}, val : "[\\r\\n]", chars : [HxOverrides.cca("\r",0),HxOverrides.cca("\n",0)], ranges : [], ignoreCase : false, inverted : false}),AllExpr.ZeroOrMoreExpr({ pos : { line : 334, col : 20, offset : 8737}, expr : AllExpr.CharClassMatcher({ pos : { line : 334, col : 20, offset : 8737}, val : "[ \\n\\t\\r]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\n",0),HxOverrides.cca("\t",0),HxOverrides.cca("\r",0)], ranges : [], ignoreCase : false, inverted : false})})]})}),AllExpr.ActionExpr({ pos : { line : 221, col : 18, offset : 5236}, run : NovelPeg__calloninput288, expr : AllExpr.SeqExpr({ pos : { line : 221, col : 18, offset : 5236}, exprs : [AllExpr.LitMatcher({ pos : { line : 221, col : 18, offset : 5236}, val : "@", ignoreCase : false, want : "\"@\""}),AllExpr.LabeledExpr({ pos : { line : 221, col : 22, offset : 5240}, label : "name", expr : AllExpr.ActionExpr({ pos : { line : 324, col : 15, offset : 8415}, run : NovelPeg__calloninput292, expr : AllExpr.SeqExpr({ pos : { line : 324, col : 15, offset : 8415}, exprs : [AllExpr.CharClassMatcher({ pos : { line : 329, col : 13, offset : 8521}, val : "[_\\pL\\pOther_ID_Start]", chars : [HxOverrides.cca("_",0)], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start], ignoreCase : false, inverted : false}),AllExpr.ZeroOrMoreExpr({ pos : { line : 324, col : 24, offset : 8424}, expr : AllExpr.CharClassMatcher({ pos : { line : 332, col : 16, offset : 8638}, val : "[\\pL\\pOther_ID_Start\\pNl\\pMn\\pMc\\pNd\\pPc\\pOther_ID_Continue]", chars : [], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start,Unicode_Nl,Unicode_Mn,Unicode_Mc,Unicode_Nd,Unicode_Pc,Unicode_Other_ID_Continue], ignoreCase : false, inverted : false})})]})})}),AllExpr.LabeledExpr({ pos : { line : 221, col : 38, offset : 5256}, label : "params", expr : AllExpr.ChoiceExpr({ pos : { line : 282, col : 15, offset : 6890}, alternatives : [AllExpr.ActionExpr({ pos : { line : 282, col : 15, offset : 6890}, run : NovelPeg__calloninput299, expr : AllExpr.SeqExpr({ pos : { line : 282, col : 15, offset : 6890}, exprs : [AllExpr.LitMatcher({ pos : { line : 282, col : 15, offset : 6890}, val : "(", ignoreCase : false, want : "\"(\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 334, col : 20, offset : 8737}, expr : AllExpr.CharClassMatcher({ pos : { line : 334, col : 20, offset : 8737}, val : "[ \\n\\t\\r]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\n",0),HxOverrides.cca("\t",0),HxOverrides.cca("\r",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.LitMatcher({ pos : { line : 282, col : 22, offset : 6897}, val : ")", ignoreCase : false, want : "\")\""})]})}),AllExpr.ActionExpr({ pos : { line : 283, col : 15, offset : 7023}, run : NovelPeg__calloninput305, expr : AllExpr.SeqExpr({ pos : { line : 283, col : 15, offset : 7023}, exprs : [AllExpr.LitMatcher({ pos : { line : 283, col : 15, offset : 7023}, val : "(", ignoreCase : false, want : "\"(\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 334, col : 20, offset : 8737}, expr : AllExpr.CharClassMatcher({ pos : { line : 334, col : 20, offset : 8737}, val : "[ \\n\\t\\r]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\n",0),HxOverrides.cca("\t",0),HxOverrides.cca("\r",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.LabeledExpr({ pos : { line : 283, col : 22, offset : 7030}, label : "first", expr : AllExpr.ActionExpr({ pos : { line : 288, col : 13, offset : 7288}, run : NovelPeg__calloninput311, expr : AllExpr.ChoiceExpr({ pos : { line : 290, col : 14, offset : 7354}, alternatives : [AllExpr.ActionExpr({ pos : { line : 324, col : 15, offset : 8415}, run : NovelPeg__calloninput313, expr : AllExpr.SeqExpr({ pos : { line : 324, col : 15, offset : 8415}, exprs : [AllExpr.CharClassMatcher({ pos : { line : 329, col : 13, offset : 8521}, val : "[_\\pL\\pOther_ID_Start]", chars : [HxOverrides.cca("_",0)], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start], ignoreCase : false, inverted : false}),AllExpr.ZeroOrMoreExpr({ pos : { line : 324, col : 24, offset : 8424}, expr : AllExpr.CharClassMatcher({ pos : { line : 332, col : 16, offset : 8638}, val : "[\\pL\\pOther_ID_Start\\pNl\\pMn\\pMc\\pNd\\pPc\\pOther_ID_Continue]", chars : [], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start,Unicode_Nl,Unicode_Mn,Unicode_Mc,Unicode_Nd,Unicode_Pc,Unicode_Other_ID_Continue], ignoreCase : false, inverted : false})})]})}),AllExpr.ActionExpr({ pos : { line : 316, col : 12, offset : 8242}, run : NovelPeg__calloninput318, expr : AllExpr.SeqExpr({ pos : { line : 316, col : 12, offset : 8242}, exprs : [AllExpr.ZeroOrOneExpr({ pos : { line : 316, col : 12, offset : 8242}, expr : AllExpr.LitMatcher({ pos : { line : 316, col : 12, offset : 8242}, val : "-", ignoreCase : false, want : "\"-\""})}),AllExpr.OneOrMoreExpr({ pos : { line : 316, col : 17, offset : 8247}, expr : AllExpr.CharClassMatcher({ pos : { line : 316, col : 17, offset : 8247}, val : "[0-9]", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0)], ignoreCase : false, inverted : false})})]})}),AllExpr.SeqExpr({ pos : { line : 292, col : 14, offset : 7401}, exprs : [AllExpr.ZeroOrMoreExpr({ pos : { line : 292, col : 14, offset : 7401}, expr : AllExpr.CharClassMatcher({ pos : { line : 292, col : 14, offset : 7401}, val : "[0-9]", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0)], ignoreCase : false, inverted : false})}),AllExpr.LitMatcher({ pos : { line : 292, col : 21, offset : 7408}, val : ".", ignoreCase : false, want : "\".\""}),AllExpr.OneOrMoreExpr({ pos : { line : 292, col : 25, offset : 7412}, expr : AllExpr.CharClassMatcher({ pos : { line : 292, col : 25, offset : 7412}, val : "[0-9]", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0)], ignoreCase : false, inverted : false})})]}),AllExpr.ActionExpr({ pos : { line : 295, col : 15, offset : 7461}, run : NovelPeg__calloninput330, expr : AllExpr.ChoiceExpr({ pos : { line : 295, col : 16, offset : 7462}, alternatives : [AllExpr.SeqExpr({ pos : { line : 297, col : 14, offset : 7548}, exprs : [AllExpr.LitMatcher({ pos : { line : 297, col : 14, offset : 7548}, val : "\"", ignoreCase : false, want : "\"\\\"\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 297, col : 18, offset : 7552}, expr : AllExpr.ChoiceExpr({ pos : { line : 297, col : 20, offset : 7554}, alternatives : [AllExpr.SeqExpr({ pos : { line : 297, col : 20, offset : 7554}, exprs : [AllExpr.NotExpr({ pos : { line : 297, col : 20, offset : 7554}, expr : AllExpr.CharClassMatcher({ pos : { line : 308, col : 15, offset : 7988}, val : "[\"\\\\\\x00-\\x1f]", chars : [HxOverrides.cca("\"",0),HxOverrides.cca("\\",0)], ranges : [HxOverrides.cca("\x00",0),HxOverrides.cca("\x1F",0)], ignoreCase : false, inverted : false})}),AllExpr.AnyMatcher({ line : 297, col : 33, offset : 7567})]}),AllExpr.SeqExpr({ pos : { line : 297, col : 37, offset : 7571}, exprs : [AllExpr.LitMatcher({ pos : { line : 297, col : 37, offset : 7571}, val : "\\", ignoreCase : false, want : "\"\\\\\""}),AllExpr.ChoiceExpr({ pos : { line : 309, col : 18, offset : 8023}, alternatives : [AllExpr.CharClassMatcher({ pos : { line : 310, col : 20, offset : 8078}, val : "[\"\\\\/bfnrt]", chars : [HxOverrides.cca("\"",0),HxOverrides.cca("\\",0),HxOverrides.cca("/",0),HxOverrides.cca("b",0),HxOverrides.cca("f",0),HxOverrides.cca("n",0),HxOverrides.cca("r",0),HxOverrides.cca("t",0)], ranges : [], ignoreCase : false, inverted : false}),AllExpr.SeqExpr({ pos : { line : 311, col : 17, offset : 8109}, exprs : [AllExpr.LitMatcher({ pos : { line : 311, col : 17, offset : 8109}, val : "u", ignoreCase : false, want : "\"u\""}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false})]})]})]})]})}),AllExpr.LitMatcher({ pos : { line : 297, col : 60, offset : 7594}, val : "\"", ignoreCase : false, want : "\"\\\"\""})]}),AllExpr.SeqExpr({ pos : { line : 298, col : 14, offset : 7612}, exprs : [AllExpr.LitMatcher({ pos : { line : 298, col : 14, offset : 7612}, val : "'", ignoreCase : false, want : "\"'\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 298, col : 19, offset : 7617}, expr : AllExpr.ChoiceExpr({ pos : { line : 298, col : 21, offset : 7619}, alternatives : [AllExpr.SeqExpr({ pos : { line : 298, col : 21, offset : 7619}, exprs : [AllExpr.NotExpr({ pos : { line : 298, col : 21, offset : 7619}, expr : AllExpr.CharClassMatcher({ pos : { line : 300, col : 16, offset : 7686}, val : "[\\\\\\\\x00-\\x1f]", chars : [HxOverrides.cca("'",0),HxOverrides.cca("\\",0)], ranges : [HxOverrides.cca("\x00",0),HxOverrides.cca("\x1F",0)], ignoreCase : false, inverted : false})}),AllExpr.AnyMatcher({ line : 298, col : 35, offset : 7633})]}),AllExpr.SeqExpr({ pos : { line : 298, col : 39, offset : 7637}, exprs : [AllExpr.LitMatcher({ pos : { line : 298, col : 39, offset : 7637}, val : "\\", ignoreCase : false, want : "\"\\\\\""}),AllExpr.ChoiceExpr({ pos : { line : 301, col : 19, offset : 7722}, alternatives : [AllExpr.CharClassMatcher({ pos : { line : 302, col : 21, offset : 7779}, val : "[\\\\\\/bfnrt]", chars : [HxOverrides.cca("'",0),HxOverrides.cca("\\",0),HxOverrides.cca("/",0),HxOverrides.cca("b",0),HxOverrides.cca("f",0),HxOverrides.cca("n",0),HxOverrides.cca("r",0),HxOverrides.cca("t",0)], ranges : [], ignoreCase : false, inverted : false}),AllExpr.SeqExpr({ pos : { line : 311, col : 17, offset : 8109}, exprs : [AllExpr.LitMatcher({ pos : { line : 311, col : 17, offset : 8109}, val : "u", ignoreCase : false, want : "\"u\""}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false})]})]})]})]})}),AllExpr.LitMatcher({ pos : { line : 298, col : 63, offset : 7661}, val : "'", ignoreCase : false, want : "\"'\""})]}),AllExpr.SeqExpr({ pos : { line : 295, col : 29, offset : 7475}, exprs : [AllExpr.LitMatcher({ pos : { line : 295, col : 29, offset : 7475}, val : "`", ignoreCase : false, want : "\"`\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 295, col : 33, offset : 7479}, expr : AllExpr.CharClassMatcher({ pos : { line : 295, col : 33, offset : 7479}, val : "[^`]", chars : [HxOverrides.cca("`",0)], ranges : [], ignoreCase : false, inverted : true})}),AllExpr.LitMatcher({ pos : { line : 295, col : 39, offset : 7485}, val : "`", ignoreCase : false, want : "\"`\""})]})]})})]})})}),AllExpr.LabeledExpr({ pos : { line : 283, col : 37, offset : 7045}, label : "rest", expr : AllExpr.ZeroOrMoreExpr({ pos : { line : 283, col : 43, offset : 7051}, expr : AllExpr.ActionExpr({ pos : { line : 285, col : 26, offset : 7159}, run : NovelPeg__calloninput377, expr : AllExpr.SeqExpr({ pos : { line : 285, col : 26, offset : 7159}, exprs : [AllExpr.ZeroOrMoreExpr({ pos : { line : 334, col : 20, offset : 8737}, expr : AllExpr.CharClassMatcher({ pos : { line : 334, col : 20, offset : 8737}, val : "[ \\n\\t\\r]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\n",0),HxOverrides.cca("\t",0),HxOverrides.cca("\r",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.LitMatcher({ pos : { line : 285, col : 29, offset : 7162}, val : ",", ignoreCase : false, want : "\",\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 334, col : 20, offset : 8737}, expr : AllExpr.CharClassMatcher({ pos : { line : 334, col : 20, offset : 8737}, val : "[ \\n\\t\\r]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\n",0),HxOverrides.cca("\t",0),HxOverrides.cca("\r",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.LabeledExpr({ pos : { line : 285, col : 36, offset : 7169}, label : "e", expr : AllExpr.ActionExpr({ pos : { line : 288, col : 13, offset : 7288}, run : NovelPeg__calloninput385, expr : AllExpr.ChoiceExpr({ pos : { line : 290, col : 14, offset : 7354}, alternatives : [AllExpr.ActionExpr({ pos : { line : 324, col : 15, offset : 8415}, run : NovelPeg__calloninput387, expr : AllExpr.SeqExpr({ pos : { line : 324, col : 15, offset : 8415}, exprs : [AllExpr.CharClassMatcher({ pos : { line : 329, col : 13, offset : 8521}, val : "[_\\pL\\pOther_ID_Start]", chars : [HxOverrides.cca("_",0)], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start], ignoreCase : false, inverted : false}),AllExpr.ZeroOrMoreExpr({ pos : { line : 324, col : 24, offset : 8424}, expr : AllExpr.CharClassMatcher({ pos : { line : 332, col : 16, offset : 8638}, val : "[\\pL\\pOther_ID_Start\\pNl\\pMn\\pMc\\pNd\\pPc\\pOther_ID_Continue]", chars : [], ranges : [], classes : [Unicode_L,Unicode_Other_ID_Start,Unicode_Nl,Unicode_Mn,Unicode_Mc,Unicode_Nd,Unicode_Pc,Unicode_Other_ID_Continue], ignoreCase : false, inverted : false})})]})}),AllExpr.ActionExpr({ pos : { line : 316, col : 12, offset : 8242}, run : NovelPeg__calloninput392, expr : AllExpr.SeqExpr({ pos : { line : 316, col : 12, offset : 8242}, exprs : [AllExpr.ZeroOrOneExpr({ pos : { line : 316, col : 12, offset : 8242}, expr : AllExpr.LitMatcher({ pos : { line : 316, col : 12, offset : 8242}, val : "-", ignoreCase : false, want : "\"-\""})}),AllExpr.OneOrMoreExpr({ pos : { line : 316, col : 17, offset : 8247}, expr : AllExpr.CharClassMatcher({ pos : { line : 316, col : 17, offset : 8247}, val : "[0-9]", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0)], ignoreCase : false, inverted : false})})]})}),AllExpr.SeqExpr({ pos : { line : 292, col : 14, offset : 7401}, exprs : [AllExpr.ZeroOrMoreExpr({ pos : { line : 292, col : 14, offset : 7401}, expr : AllExpr.CharClassMatcher({ pos : { line : 292, col : 14, offset : 7401}, val : "[0-9]", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0)], ignoreCase : false, inverted : false})}),AllExpr.LitMatcher({ pos : { line : 292, col : 21, offset : 7408}, val : ".", ignoreCase : false, want : "\".\""}),AllExpr.OneOrMoreExpr({ pos : { line : 292, col : 25, offset : 7412}, expr : AllExpr.CharClassMatcher({ pos : { line : 292, col : 25, offset : 7412}, val : "[0-9]", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0)], ignoreCase : false, inverted : false})})]}),AllExpr.ActionExpr({ pos : { line : 295, col : 15, offset : 7461}, run : NovelPeg__calloninput404, expr : AllExpr.ChoiceExpr({ pos : { line : 295, col : 16, offset : 7462}, alternatives : [AllExpr.SeqExpr({ pos : { line : 297, col : 14, offset : 7548}, exprs : [AllExpr.LitMatcher({ pos : { line : 297, col : 14, offset : 7548}, val : "\"", ignoreCase : false, want : "\"\\\"\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 297, col : 18, offset : 7552}, expr : AllExpr.ChoiceExpr({ pos : { line : 297, col : 20, offset : 7554}, alternatives : [AllExpr.SeqExpr({ pos : { line : 297, col : 20, offset : 7554}, exprs : [AllExpr.NotExpr({ pos : { line : 297, col : 20, offset : 7554}, expr : AllExpr.CharClassMatcher({ pos : { line : 308, col : 15, offset : 7988}, val : "[\"\\\\\\x00-\\x1f]", chars : [HxOverrides.cca("\"",0),HxOverrides.cca("\\",0)], ranges : [HxOverrides.cca("\x00",0),HxOverrides.cca("\x1F",0)], ignoreCase : false, inverted : false})}),AllExpr.AnyMatcher({ line : 297, col : 33, offset : 7567})]}),AllExpr.SeqExpr({ pos : { line : 297, col : 37, offset : 7571}, exprs : [AllExpr.LitMatcher({ pos : { line : 297, col : 37, offset : 7571}, val : "\\", ignoreCase : false, want : "\"\\\\\""}),AllExpr.ChoiceExpr({ pos : { line : 309, col : 18, offset : 8023}, alternatives : [AllExpr.CharClassMatcher({ pos : { line : 310, col : 20, offset : 8078}, val : "[\"\\\\/bfnrt]", chars : [HxOverrides.cca("\"",0),HxOverrides.cca("\\",0),HxOverrides.cca("/",0),HxOverrides.cca("b",0),HxOverrides.cca("f",0),HxOverrides.cca("n",0),HxOverrides.cca("r",0),HxOverrides.cca("t",0)], ranges : [], ignoreCase : false, inverted : false}),AllExpr.SeqExpr({ pos : { line : 311, col : 17, offset : 8109}, exprs : [AllExpr.LitMatcher({ pos : { line : 311, col : 17, offset : 8109}, val : "u", ignoreCase : false, want : "\"u\""}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false})]})]})]})]})}),AllExpr.LitMatcher({ pos : { line : 297, col : 60, offset : 7594}, val : "\"", ignoreCase : false, want : "\"\\\"\""})]}),AllExpr.SeqExpr({ pos : { line : 298, col : 14, offset : 7612}, exprs : [AllExpr.LitMatcher({ pos : { line : 298, col : 14, offset : 7612}, val : "'", ignoreCase : false, want : "\"'\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 298, col : 19, offset : 7617}, expr : AllExpr.ChoiceExpr({ pos : { line : 298, col : 21, offset : 7619}, alternatives : [AllExpr.SeqExpr({ pos : { line : 298, col : 21, offset : 7619}, exprs : [AllExpr.NotExpr({ pos : { line : 298, col : 21, offset : 7619}, expr : AllExpr.CharClassMatcher({ pos : { line : 300, col : 16, offset : 7686}, val : "[\\\\\\\\x00-\\x1f]", chars : [HxOverrides.cca("'",0),HxOverrides.cca("\\",0)], ranges : [HxOverrides.cca("\x00",0),HxOverrides.cca("\x1F",0)], ignoreCase : false, inverted : false})}),AllExpr.AnyMatcher({ line : 298, col : 35, offset : 7633})]}),AllExpr.SeqExpr({ pos : { line : 298, col : 39, offset : 7637}, exprs : [AllExpr.LitMatcher({ pos : { line : 298, col : 39, offset : 7637}, val : "\\", ignoreCase : false, want : "\"\\\\\""}),AllExpr.ChoiceExpr({ pos : { line : 301, col : 19, offset : 7722}, alternatives : [AllExpr.CharClassMatcher({ pos : { line : 302, col : 21, offset : 7779}, val : "[\\\\\\/bfnrt]", chars : [HxOverrides.cca("'",0),HxOverrides.cca("\\",0),HxOverrides.cca("/",0),HxOverrides.cca("b",0),HxOverrides.cca("f",0),HxOverrides.cca("n",0),HxOverrides.cca("r",0),HxOverrides.cca("t",0)], ranges : [], ignoreCase : false, inverted : false}),AllExpr.SeqExpr({ pos : { line : 311, col : 17, offset : 8109}, exprs : [AllExpr.LitMatcher({ pos : { line : 311, col : 17, offset : 8109}, val : "u", ignoreCase : false, want : "\"u\""}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false}),AllExpr.CharClassMatcher({ pos : { line : 314, col : 12, offset : 8218}, val : "[0-9a-f]i", chars : [], ranges : [HxOverrides.cca("0",0),HxOverrides.cca("9",0),HxOverrides.cca("a",0),HxOverrides.cca("f",0)], ignoreCase : true, inverted : false})]})]})]})]})}),AllExpr.LitMatcher({ pos : { line : 298, col : 63, offset : 7661}, val : "'", ignoreCase : false, want : "\"'\""})]}),AllExpr.SeqExpr({ pos : { line : 295, col : 29, offset : 7475}, exprs : [AllExpr.LitMatcher({ pos : { line : 295, col : 29, offset : 7475}, val : "`", ignoreCase : false, want : "\"`\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 295, col : 33, offset : 7479}, expr : AllExpr.CharClassMatcher({ pos : { line : 295, col : 33, offset : 7479}, val : "[^`]", chars : [HxOverrides.cca("`",0)], ranges : [], ignoreCase : false, inverted : true})}),AllExpr.LitMatcher({ pos : { line : 295, col : 39, offset : 7485}, val : "`", ignoreCase : false, want : "\"`\""})]})]})})]})})})]})})})}),AllExpr.LitMatcher({ pos : { line : 283, col : 67, offset : 7075}, val : ")", ignoreCase : false, want : "\")\""})]})})]})}),AllExpr.ZeroOrMoreExpr({ pos : { line : 334, col : 20, offset : 8737}, expr : AllExpr.CharClassMatcher({ pos : { line : 334, col : 20, offset : 8737}, val : "[ \\n\\t\\r]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\n",0),HxOverrides.cca("\t",0),HxOverrides.cca("\r",0)], ranges : [], ignoreCase : false, inverted : false})})]})}),AllExpr.ActionExpr({ pos : { line : 240, col : 18, offset : 5708}, run : NovelPeg__calloninput452, expr : AllExpr.SeqExpr({ pos : { line : 240, col : 18, offset : 5708}, exprs : [AllExpr.LitMatcher({ pos : { line : 240, col : 18, offset : 5708}, val : "@{", ignoreCase : false, want : "\"@{\""}),AllExpr.LabeledExpr({ pos : { line : 240, col : 23, offset : 5713}, label : "code", expr : AllExpr.ActionExpr({ pos : { line : 280, col : 24, offset : 6808}, run : NovelPeg__calloninput456, expr : AllExpr.ZeroOrMoreExpr({ pos : { line : 280, col : 26, offset : 6810}, expr : AllExpr.SeqExpr({ pos : { line : 280, col : 28, offset : 6812}, exprs : [AllExpr.NotExpr({ pos : { line : 280, col : 28, offset : 6812}, expr : AllExpr.LitMatcher({ pos : { line : 280, col : 29, offset : 6813}, val : "}!", ignoreCase : false, want : "\"}!\""})}),AllExpr.AnyMatcher({ line : 280, col : 34, offset : 6818})]})})})}),AllExpr.LitMatcher({ pos : { line : 240, col : 48, offset : 5738}, val : "}!", ignoreCase : false, want : "\"}!\""}),AllExpr.ZeroOrMoreExpr({ pos : { line : 336, col : 11, offset : 8761}, expr : AllExpr.CharClassMatcher({ pos : { line : 336, col : 11, offset : 8761}, val : "[ \\t]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\t",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.CharClassMatcher({ pos : { line : 338, col : 7, offset : 8777}, val : "[\\r\\n]", chars : [HxOverrides.cca("\r",0),HxOverrides.cca("\n",0)], ranges : [], ignoreCase : false, inverted : false})]})}),AllExpr.ActionExpr({ pos : { line : 257, col : 18, offset : 6206}, run : NovelPeg__calloninput466, expr : AllExpr.LabeledExpr({ pos : { line : 257, col : 18, offset : 6206}, label : "text", expr : AllExpr.ActionExpr({ pos : { line : 256, col : 22, offset : 6125}, run : NovelPeg__calloninput468, expr : AllExpr.OneOrMoreExpr({ pos : { line : 256, col : 22, offset : 6125}, expr : AllExpr.SeqExpr({ pos : { line : 256, col : 24, offset : 6127}, exprs : [AllExpr.NotExpr({ pos : { line : 256, col : 24, offset : 6127}, expr : AllExpr.CharClassMatcher({ pos : { line : 256, col : 25, offset : 6128}, val : "[:@]", chars : [HxOverrides.cca(":",0),HxOverrides.cca("@",0)], ranges : [], ignoreCase : false, inverted : false})}),AllExpr.ZeroOrMoreExpr({ pos : { line : 256, col : 30, offset : 6133}, expr : AllExpr.CharClassMatcher({ pos : { line : 256, col : 30, offset : 6133}, val : "[^\\r\\n]", chars : [HxOverrides.cca("\r",0),HxOverrides.cca("\n",0)], ranges : [], ignoreCase : false, inverted : true})}),AllExpr.CharClassMatcher({ pos : { line : 338, col : 7, offset : 8777}, val : "[\\r\\n]", chars : [HxOverrides.cca("\r",0),HxOverrides.cca("\n",0)], ranges : [], ignoreCase : false, inverted : false})]})})})})})]})})}),AllExpr.ZeroOrMoreExpr({ pos : { line : 334, col : 20, offset : 8737}, expr : AllExpr.CharClassMatcher({ pos : { line : 334, col : 20, offset : 8737}, val : "[ \\n\\t\\r]", chars : [HxOverrides.cca(" ",0),HxOverrides.cca("\n",0),HxOverrides.cca("\t",0),HxOverrides.cca("\r",0)], ranges : [], ignoreCase : false, inverted : false})})]})})})]})})]})})})})}),AllExpr.NotExpr({ pos : { line : 127, col : 21, offset : 2569}, expr : AllExpr.AnyMatcher({ line : 127, col : 22, offset : 2570})})]})})}]};
Main_main();
})(exports);
export default exports;
