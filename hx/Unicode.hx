// Auto generated code. DO NOT EDIT.

typedef RangeChar = Array<UInt>; // Lo, Hi, Stride

typedef RangeTable = {
	var R16:Array<RangeChar>;
	var R32:Array<RangeChar>;
	var LatinOffset:Int; // number of entries in R16 with Hi <= MaxLatin1
}

// linearMax is the maximum size table for linear search for non-Latin1 rune.
var linearMax = 18;
var MaxRune = 0x0010FFFF; // Maximum valid Unicode code point.
var ReplacementChar = 0xFFFD; // Represents invalid code points.
var MaxASCII = 0x007F; // maximum ASCII value.
var MaxLatin1 = 0x00FF; // maximum Latin-1 value.

// is16 reports whether r is in the sorted slice of 16-bit ranges.
private function is16(ranges:Array<RangeChar>, r:UInt):Bool {
	if (ranges.length <= linearMax || r <= MaxLatin1) {
		for (i in ranges) {
			if (r < i[0]) {
				return false;
			}
			if (r <= i[1]) {
				return i[2] == 1 || (r - i[0]) % i[2] == 0;
			}
		}
		return false;
	}

	// binary search over ranges
	var lo = 0;
	var hi = ranges.length;
	while (lo < hi) {
		var m = lo + Std.int((hi - lo) / 2);
		var range_ = ranges[m];
		if (range_[0] <= r && r <= range_[1]) {
			return range_[2] == 1 || (r - range_[0]) % range_[2] == 0;
		}
		if (r < range_[0]) {
			hi = m;
		} else {
			lo = m + 1;
		}
	}
	return false;
}

// is32 reports whether r is in the sorted slice of 32-bit ranges.
private function is32(ranges:Array<RangeChar>, r:UInt):Bool {
	if (ranges.length <= linearMax) {
		for (i in ranges) {
			if (r < i[0]) {
				return false;
			}
			if (r <= i[1]) {
				return i[2] == 1 || (r - i[0]) % i[2] == 0;
			}
		}
		return false;
	}

	// binary search over ranges
	var lo = 0;
	var hi = ranges.length;
	while (lo < hi) {
		var m = lo + Std.int((hi - lo) / 2);
		var range_ = ranges[m];
		if (range_[0] <= r && r <= range_[1]) {
			return range_[2] == 1 || (r - range_[0]) % range_[2] == 0;
		}
		if (r < range_[0]) {
			hi = m;
		} else {
			lo = m + 1;
		}
	}
	return false;
}

// Is reports whether the rune is in the specified table of ranges.
function Is(rangeTab:RangeTable, r:UInt):Bool {
	var r16 = rangeTab.R16;
	// Compare as uint32 to correctly handle negative runes.
	if (r16.length > 0 && r < r16[r16.length - 1][1]) {
		return is16(r16, r);
	}

	var r32 = rangeTab.R32;
	if (r32.length > 0 && r >= r32[0][0]) {
		return is32(r32, r);
	}

	return false;
}

private var _P:RangeTable = {
	R16: [
		[0x21, 0x23, 1], [0x25, 0x2a, 1], [0x2c, 0x2f, 1], [0x3a, 0x3b, 1], [0x3f, 0x40, 1], [0x5b, 0x5d, 1], [0x5f, 0x7b, 28], [0x7d, 0xa1, 36],
		[0xa7, 0xab, 4], [0xb6, 0xb7, 1], [0xbb, 0xbf, 4], [0x37e, 0x387, 9], [0x55a, 0x55f, 1], [0x589, 0x58a, 1], [0x5be, 0x5c0, 2], [0x5c3, 0x5c6, 3],
		[0x5f3, 0x5f4, 1], [0x609, 0x60a, 1], [0x60c, 0x60d, 1], [0x61b, 0x61d, 2], [0x61e, 0x61f, 1], [0x66a, 0x66d, 1], [0x6d4, 0x700, 44],
		[0x701, 0x70d, 1], [0x7f7, 0x7f9, 1], [0x830, 0x83e, 1], [0x85e, 0x964, 262], [0x965, 0x970, 11], [0x9fd, 0xa76, 121], [0xaf0, 0xc77, 391],
		[0xc84, 0xdf4, 368], [0xe4f, 0xe5a, 11], [0xe5b, 0xf04, 169], [0xf05, 0xf12, 1], [0xf14, 0xf3a, 38], [0xf3b, 0xf3d, 1], [0xf85, 0xfd0, 75],
		[0xfd1, 0xfd4, 1], [0xfd9, 0xfda, 1], [0x104a, 0x104f, 1], [0x10fb, 0x1360, 613], [0x1361, 0x1368, 1], [0x1400, 0x166e, 622], [0x169b, 0x169c, 1],
		[0x16eb, 0x16ed, 1], [0x1735, 0x1736, 1], [0x17d4, 0x17d6, 1], [0x17d8, 0x17da, 1], [0x1800, 0x180a, 1], [0x1944, 0x1945, 1], [0x1a1e, 0x1a1f, 1],
		[0x1aa0, 0x1aa6, 1], [0x1aa8, 0x1aad, 1], [0x1b5a, 0x1b60, 1], [0x1b7d, 0x1b7e, 1], [0x1bfc, 0x1bff, 1], [0x1c3b, 0x1c3f, 1], [0x1c7e, 0x1c7f, 1],
		[0x1cc0, 0x1cc7, 1], [0x1cd3, 0x2010, 829], [0x2011, 0x2027, 1], [0x2030, 0x2043, 1], [0x2045, 0x2051, 1], [0x2053, 0x205e, 1], [0x207d, 0x207e, 1],
		[0x208d, 0x208e, 1], [0x2308, 0x230b, 1], [0x2329, 0x232a, 1], [0x2768, 0x2775, 1], [0x27c5, 0x27c6, 1], [0x27e6, 0x27ef, 1], [0x2983, 0x2998, 1],
		[0x29d8, 0x29db, 1], [0x29fc, 0x29fd, 1], [0x2cf9, 0x2cfc, 1], [0x2cfe, 0x2cff, 1], [0x2d70, 0x2e00, 144], [0x2e01, 0x2e2e, 1], [0x2e30, 0x2e4f, 1],
		[0x2e52, 0x2e5d, 1], [0x3001, 0x3003, 1], [0x3008, 0x3011, 1], [0x3014, 0x301f, 1], [0x3030, 0x303d, 13], [0x30a0, 0x30fb, 91], [0xa4fe, 0xa4ff, 1],
		[0xa60d, 0xa60f, 1], [0xa673, 0xa67e, 11], [0xa6f2, 0xa6f7, 1], [0xa874, 0xa877, 1], [0xa8ce, 0xa8cf, 1], [0xa8f8, 0xa8fa, 1], [0xa8fc, 0xa92e, 50],
		[0xa92f, 0xa95f, 48], [0xa9c1, 0xa9cd, 1], [0xa9de, 0xa9df, 1], [0xaa5c, 0xaa5f, 1], [0xaade, 0xaadf, 1], [0xaaf0, 0xaaf1, 1],
		[0xabeb, 0xfd3e, 20819], [0xfd3f, 0xfe10, 209], [0xfe11, 0xfe19, 1], [0xfe30, 0xfe52, 1], [0xfe54, 0xfe61, 1], [0xfe63, 0xfe68, 5],
		[0xfe6a, 0xfe6b, 1], [0xff01, 0xff03, 1], [0xff05, 0xff0a, 1], [0xff0c, 0xff0f, 1], [0xff1a, 0xff1b, 1], [0xff1f, 0xff20, 1], [0xff3b, 0xff3d, 1],
		[0xff3f, 0xff5b, 28], [0xff5d, 0xff5f, 2], [0xff60, 0xff65, 1],
	],
	R32: [
		[0x10100, 0x10102, 1], [0x1039f, 0x103d0, 49], [0x1056f, 0x10857, 744], [0x1091f, 0x1093f, 32], [0x10a50, 0x10a58, 1], [0x10a7f, 0x10af0, 113],
		[0x10af1, 0x10af6, 1], [0x10b39, 0x10b3f, 1], [0x10b99, 0x10b9c, 1], [0x10ead, 0x10f55, 168], [0x10f56, 0x10f59, 1], [0x10f86, 0x10f89, 1],
		[0x11047, 0x1104d, 1], [0x110bb, 0x110bc, 1], [0x110be, 0x110c1, 1], [0x11140, 0x11143, 1], [0x11174, 0x11175, 1], [0x111c5, 0x111c8, 1],
		[0x111cd, 0x111db, 14], [0x111dd, 0x111df, 1], [0x11238, 0x1123d, 1], [0x112a9, 0x1144b, 418], [0x1144c, 0x1144f, 1], [0x1145a, 0x1145b, 1],
		[0x1145d, 0x114c6, 105], [0x115c1, 0x115d7, 1], [0x11641, 0x11643, 1], [0x11660, 0x1166c, 1], [0x116b9, 0x1173c, 131], [0x1173d, 0x1173e, 1],
		[0x1183b, 0x11944, 265], [0x11945, 0x11946, 1], [0x119e2, 0x11a3f, 93], [0x11a40, 0x11a46, 1], [0x11a9a, 0x11a9c, 1], [0x11a9e, 0x11aa2, 1],
		[0x11b00, 0x11b09, 1], [0x11c41, 0x11c45, 1], [0x11c70, 0x11c71, 1], [0x11ef7, 0x11ef8, 1], [0x11f43, 0x11f4f, 1], [0x11fff, 0x12470, 1137],
		[0x12471, 0x12474, 1], [0x12ff1, 0x12ff2, 1], [0x16a6e, 0x16a6f, 1], [0x16af5, 0x16b37, 66], [0x16b38, 0x16b3b, 1], [0x16b44, 0x16e97, 851],
		[0x16e98, 0x16e9a, 1], [0x16fe2, 0x1bc9f, 19645], [0x1da87, 0x1da8b, 1], [0x1e95e, 0x1e95f, 1],
	],
	LatinOffset: 2,
}

private var _Pd:RangeTable = {
	R16: [
		[0x2d, 0x58a, 1373], [0x5be, 0x1400, 3650], [0x1806, 0x2010, 2058], [0x2011, 0x2015, 1], [0x2e17, 0x2e1a, 3], [0x2e3a, 0x2e3b, 1],
		[0x2e40, 0x2e5d, 29], [0x301c, 0x3030, 20], [0x30a0, 0xfe31, 52625], [0xfe32, 0xfe58, 38], [0xfe63, 0xff0d, 170],
	],
	R32: [[0x10ead, 0x10ead, 1],],
	LatinOffset: 2,
}

private var _Pi:RangeTable = {
	R16: [
		[0xab, 0x2018, 8045],
		[0x201b, 0x201c, 1],
		[0x201f, 0x2039, 26],
		[0x2e02, 0x2e04, 2],
		[0x2e09, 0x2e0c, 3],
		[0x2e1c, 0x2e20, 4],
	],
	R32: [],
	LatinOffset: 2,
}

private var _M:RangeTable = {
	R16: [
		[0x300, 0x36f, 1], [0x483, 0x489, 1], [0x591, 0x5bd, 1], [0x5bf, 0x5c1, 2], [0x5c2, 0x5c4, 2], [0x5c5, 0x5c7, 2], [0x610, 0x61a, 1],
		[0x64b, 0x65f, 1], [0x670, 0x6d6, 102], [0x6d7, 0x6dc, 1], [0x6df, 0x6e4, 1], [0x6e7, 0x6e8, 1], [0x6ea, 0x6ed, 1], [0x711, 0x730, 31],
		[0x731, 0x74a, 1], [0x7a6, 0x7b0, 1], [0x7eb, 0x7f3, 1], [0x7fd, 0x816, 25], [0x817, 0x819, 1], [0x81b, 0x823, 1], [0x825, 0x827, 1],
		[0x829, 0x82d, 1], [0x859, 0x85b, 1], [0x898, 0x89f, 1], [0x8ca, 0x8e1, 1], [0x8e3, 0x903, 1], [0x93a, 0x93c, 1], [0x93e, 0x94f, 1],
		[0x951, 0x957, 1], [0x962, 0x963, 1], [0x981, 0x983, 1], [0x9bc, 0x9be, 2], [0x9bf, 0x9c4, 1], [0x9c7, 0x9c8, 1], [0x9cb, 0x9cd, 1],
		[0x9d7, 0x9e2, 11], [0x9e3, 0x9fe, 27], [0xa01, 0xa03, 1], [0xa3c, 0xa3e, 2], [0xa3f, 0xa42, 1], [0xa47, 0xa48, 1], [0xa4b, 0xa4d, 1],
		[0xa51, 0xa70, 31], [0xa71, 0xa75, 4], [0xa81, 0xa83, 1], [0xabc, 0xabe, 2], [0xabf, 0xac5, 1], [0xac7, 0xac9, 1], [0xacb, 0xacd, 1],
		[0xae2, 0xae3, 1], [0xafa, 0xaff, 1], [0xb01, 0xb03, 1], [0xb3c, 0xb3e, 2], [0xb3f, 0xb44, 1], [0xb47, 0xb48, 1], [0xb4b, 0xb4d, 1],
		[0xb55, 0xb57, 1], [0xb62, 0xb63, 1], [0xb82, 0xbbe, 60], [0xbbf, 0xbc2, 1], [0xbc6, 0xbc8, 1], [0xbca, 0xbcd, 1], [0xbd7, 0xc00, 41],
		[0xc01, 0xc04, 1], [0xc3c, 0xc3e, 2], [0xc3f, 0xc44, 1], [0xc46, 0xc48, 1], [0xc4a, 0xc4d, 1], [0xc55, 0xc56, 1], [0xc62, 0xc63, 1],
		[0xc81, 0xc83, 1], [0xcbc, 0xcbe, 2], [0xcbf, 0xcc4, 1], [0xcc6, 0xcc8, 1], [0xcca, 0xccd, 1], [0xcd5, 0xcd6, 1], [0xce2, 0xce3, 1],
		[0xcf3, 0xd00, 13], [0xd01, 0xd03, 1], [0xd3b, 0xd3c, 1], [0xd3e, 0xd44, 1], [0xd46, 0xd48, 1], [0xd4a, 0xd4d, 1], [0xd57, 0xd62, 11],
		[0xd63, 0xd81, 30], [0xd82, 0xd83, 1], [0xdca, 0xdcf, 5], [0xdd0, 0xdd4, 1], [0xdd6, 0xdd8, 2], [0xdd9, 0xddf, 1], [0xdf2, 0xdf3, 1],
		[0xe31, 0xe34, 3], [0xe35, 0xe3a, 1], [0xe47, 0xe4e, 1], [0xeb1, 0xeb4, 3], [0xeb5, 0xebc, 1], [0xec8, 0xece, 1], [0xf18, 0xf19, 1],
		[0xf35, 0xf39, 2], [0xf3e, 0xf3f, 1], [0xf71, 0xf84, 1], [0xf86, 0xf87, 1], [0xf8d, 0xf97, 1], [0xf99, 0xfbc, 1], [0xfc6, 0x102b, 101],
		[0x102c, 0x103e, 1], [0x1056, 0x1059, 1], [0x105e, 0x1060, 1], [0x1062, 0x1064, 1], [0x1067, 0x106d, 1], [0x1071, 0x1074, 1], [0x1082, 0x108d, 1],
		[0x108f, 0x109a, 11], [0x109b, 0x109d, 1], [0x135d, 0x135f, 1], [0x1712, 0x1715, 1], [0x1732, 0x1734, 1], [0x1752, 0x1753, 1], [0x1772, 0x1773, 1],
		[0x17b4, 0x17d3, 1], [0x17dd, 0x180b, 46], [0x180c, 0x180d, 1], [0x180f, 0x1885, 118], [0x1886, 0x18a9, 35], [0x1920, 0x192b, 1], [0x1930, 0x193b, 1],
		[0x1a17, 0x1a1b, 1], [0x1a55, 0x1a5e, 1], [0x1a60, 0x1a7c, 1], [0x1a7f, 0x1ab0, 49], [0x1ab1, 0x1ace, 1], [0x1b00, 0x1b04, 1], [0x1b34, 0x1b44, 1],
		[0x1b6b, 0x1b73, 1], [0x1b80, 0x1b82, 1], [0x1ba1, 0x1bad, 1], [0x1be6, 0x1bf3, 1], [0x1c24, 0x1c37, 1], [0x1cd0, 0x1cd2, 1], [0x1cd4, 0x1ce8, 1],
		[0x1ced, 0x1cf4, 7], [0x1cf7, 0x1cf9, 1], [0x1dc0, 0x1dff, 1], [0x20d0, 0x20f0, 1], [0x2cef, 0x2cf1, 1], [0x2d7f, 0x2de0, 97], [0x2de1, 0x2dff, 1],
		[0x302a, 0x302f, 1], [0x3099, 0x309a, 1], [0xa66f, 0xa672, 1], [0xa674, 0xa67d, 1], [0xa69e, 0xa69f, 1], [0xa6f0, 0xa6f1, 1], [0xa802, 0xa806, 4],
		[0xa80b, 0xa823, 24], [0xa824, 0xa827, 1], [0xa82c, 0xa880, 84], [0xa881, 0xa8b4, 51], [0xa8b5, 0xa8c5, 1], [0xa8e0, 0xa8f1, 1], [0xa8ff, 0xa926, 39],
		[0xa927, 0xa92d, 1], [0xa947, 0xa953, 1], [0xa980, 0xa983, 1], [0xa9b3, 0xa9c0, 1], [0xa9e5, 0xaa29, 68], [0xaa2a, 0xaa36, 1], [0xaa43, 0xaa4c, 9],
		[0xaa4d, 0xaa7b, 46], [0xaa7c, 0xaa7d, 1], [0xaab0, 0xaab2, 2], [0xaab3, 0xaab4, 1], [0xaab7, 0xaab8, 1], [0xaabe, 0xaabf, 1], [0xaac1, 0xaaeb, 42],
		[0xaaec, 0xaaef, 1], [0xaaf5, 0xaaf6, 1], [0xabe3, 0xabea, 1], [0xabec, 0xabed, 1], [0xfb1e, 0xfe00, 738], [0xfe01, 0xfe0f, 1], [0xfe20, 0xfe2f, 1],
	],
	R32: [
		[0x101fd, 0x102e0, 227], [0x10376, 0x1037a, 1], [0x10a01, 0x10a03, 1], [0x10a05, 0x10a06, 1], [0x10a0c, 0x10a0f, 1], [0x10a38, 0x10a3a, 1],
		[0x10a3f, 0x10ae5, 166], [0x10ae6, 0x10d24, 574], [0x10d25, 0x10d27, 1], [0x10eab, 0x10eac, 1], [0x10efd, 0x10eff, 1], [0x10f46, 0x10f50, 1],
		[0x10f82, 0x10f85, 1], [0x11000, 0x11002, 1], [0x11038, 0x11046, 1], [0x11070, 0x11073, 3], [0x11074, 0x1107f, 11], [0x11080, 0x11082, 1],
		[0x110b0, 0x110ba, 1], [0x110c2, 0x11100, 62], [0x11101, 0x11102, 1], [0x11127, 0x11134, 1], [0x11145, 0x11146, 1], [0x11173, 0x11180, 13],
		[0x11181, 0x11182, 1], [0x111b3, 0x111c0, 1], [0x111c9, 0x111cc, 1], [0x111ce, 0x111cf, 1], [0x1122c, 0x11237, 1], [0x1123e, 0x11241, 3],
		[0x112df, 0x112ea, 1], [0x11300, 0x11303, 1], [0x1133b, 0x1133c, 1], [0x1133e, 0x11344, 1], [0x11347, 0x11348, 1], [0x1134b, 0x1134d, 1],
		[0x11357, 0x11362, 11], [0x11363, 0x11366, 3], [0x11367, 0x1136c, 1], [0x11370, 0x11374, 1], [0x11435, 0x11446, 1], [0x1145e, 0x114b0, 82],
		[0x114b1, 0x114c3, 1], [0x115af, 0x115b5, 1], [0x115b8, 0x115c0, 1], [0x115dc, 0x115dd, 1], [0x11630, 0x11640, 1], [0x116ab, 0x116b7, 1],
		[0x1171d, 0x1172b, 1], [0x1182c, 0x1183a, 1], [0x11930, 0x11935, 1], [0x11937, 0x11938, 1], [0x1193b, 0x1193e, 1], [0x11940, 0x11942, 2],
		[0x11943, 0x119d1, 142], [0x119d2, 0x119d7, 1], [0x119da, 0x119e0, 1], [0x119e4, 0x11a01, 29], [0x11a02, 0x11a0a, 1], [0x11a33, 0x11a39, 1],
		[0x11a3b, 0x11a3e, 1], [0x11a47, 0x11a51, 10], [0x11a52, 0x11a5b, 1], [0x11a8a, 0x11a99, 1], [0x11c2f, 0x11c36, 1], [0x11c38, 0x11c3f, 1],
		[0x11c92, 0x11ca7, 1], [0x11ca9, 0x11cb6, 1], [0x11d31, 0x11d36, 1], [0x11d3a, 0x11d3c, 2], [0x11d3d, 0x11d3f, 2], [0x11d40, 0x11d45, 1],
		[0x11d47, 0x11d8a, 67], [0x11d8b, 0x11d8e, 1], [0x11d90, 0x11d91, 1], [0x11d93, 0x11d97, 1], [0x11ef3, 0x11ef6, 1], [0x11f00, 0x11f01, 1],
		[0x11f03, 0x11f34, 49], [0x11f35, 0x11f3a, 1], [0x11f3e, 0x11f42, 1], [0x13440, 0x13447, 7], [0x13448, 0x13455, 1], [0x16af0, 0x16af4, 1],
		[0x16b30, 0x16b36, 1], [0x16f4f, 0x16f51, 2], [0x16f52, 0x16f87, 1], [0x16f8f, 0x16f92, 1], [0x16fe4, 0x16ff0, 12], [0x16ff1, 0x1bc9d, 19628],
		[0x1bc9e, 0x1cf00, 4706], [0x1cf01, 0x1cf2d, 1], [0x1cf30, 0x1cf46, 1], [0x1d165, 0x1d169, 1], [0x1d16d, 0x1d172, 1], [0x1d17b, 0x1d182, 1],
		[0x1d185, 0x1d18b, 1], [0x1d1aa, 0x1d1ad, 1], [0x1d242, 0x1d244, 1], [0x1da00, 0x1da36, 1], [0x1da3b, 0x1da6c, 1], [0x1da75, 0x1da84, 15],
		[0x1da9b, 0x1da9f, 1], [0x1daa1, 0x1daaf, 1], [0x1e000, 0x1e006, 1], [0x1e008, 0x1e018, 1], [0x1e01b, 0x1e021, 1], [0x1e023, 0x1e024, 1],
		[0x1e026, 0x1e02a, 1], [0x1e08f, 0x1e130, 161], [0x1e131, 0x1e136, 1], [0x1e2ae, 0x1e2ec, 62], [0x1e2ed, 0x1e2ef, 1], [0x1e4ec, 0x1e4ef, 1],
		[0x1e8d0, 0x1e8d6, 1], [0x1e944, 0x1e94a, 1], [0xe0100, 0xe01ef, 1],
	],
	LatinOffset: 2,
}

private var _Sk:RangeTable = {
	R16: [
		[0x5e, 0x60, 2], [0xa8, 0xaf, 7], [0xb4, 0xb8, 4], [0x2c2, 0x2c5, 1], [0x2d2, 0x2df, 1], [0x2e5, 0x2eb, 1], [0x2ed, 0x2ef, 2], [0x2f0, 0x2ff, 1],
		[0x375, 0x384, 15], [0x385, 0x888, 1283], [0x1fbd, 0x1fbf, 2], [0x1fc0, 0x1fc1, 1], [0x1fcd, 0x1fcf, 1], [0x1fdd, 0x1fdf, 1], [0x1fed, 0x1fef, 1],
		[0x1ffd, 0x1ffe, 1], [0x309b, 0x309c, 1], [0xa700, 0xa716, 1], [0xa720, 0xa721, 1], [0xa789, 0xa78a, 1], [0xab5b, 0xab6a, 15],
		[0xab6b, 0xfbb2, 20551], [0xfbb3, 0xfbc2, 1], [0xff3e, 0xff40, 2], [0xffe3, 0xffe3, 1],
	],
	R32: [[0x1f3fb, 0x1f3ff, 1],],
	LatinOffset: 2,
}

private var _S:RangeTable = {
	R16: [
		[0x24, 0x2b, 7], [0x3c, 0x3e, 1], [0x5e, 0x60, 2], [0x7c, 0x7e, 2], [0xa2, 0xa6, 1], [0xa8, 0xa9, 1], [0xac, 0xae, 2], [0xaf, 0xb1, 1],
		[0xb4, 0xb8, 4], [0xd7, 0xf7, 32], [0x2c2, 0x2c5, 1], [0x2d2, 0x2df, 1], [0x2e5, 0x2eb, 1], [0x2ed, 0x2ef, 2], [0x2f0, 0x2ff, 1], [0x375, 0x384, 15],
		[0x385, 0x3f6, 113], [0x482, 0x58d, 267], [0x58e, 0x58f, 1], [0x606, 0x608, 1], [0x60b, 0x60e, 3], [0x60f, 0x6de, 207], [0x6e9, 0x6fd, 20],
		[0x6fe, 0x7f6, 248], [0x7fe, 0x7ff, 1], [0x888, 0x9f2, 362], [0x9f3, 0x9fa, 7], [0x9fb, 0xaf1, 246], [0xb70, 0xbf3, 131], [0xbf4, 0xbfa, 1],
		[0xc7f, 0xd4f, 208], [0xd79, 0xe3f, 198], [0xf01, 0xf03, 1], [0xf13, 0xf15, 2], [0xf16, 0xf17, 1], [0xf1a, 0xf1f, 1], [0xf34, 0xf38, 2],
		[0xfbe, 0xfc5, 1], [0xfc7, 0xfcc, 1], [0xfce, 0xfcf, 1], [0xfd5, 0xfd8, 1], [0x109e, 0x109f, 1], [0x1390, 0x1399, 1], [0x166d, 0x17db, 366],
		[0x1940, 0x19de, 158], [0x19df, 0x19ff, 1], [0x1b61, 0x1b6a, 1], [0x1b74, 0x1b7c, 1], [0x1fbd, 0x1fbf, 2], [0x1fc0, 0x1fc1, 1], [0x1fcd, 0x1fcf, 1],
		[0x1fdd, 0x1fdf, 1], [0x1fed, 0x1fef, 1], [0x1ffd, 0x1ffe, 1], [0x2044, 0x2052, 14], [0x207a, 0x207c, 1], [0x208a, 0x208c, 1], [0x20a0, 0x20c0, 1],
		[0x2100, 0x2101, 1], [0x2103, 0x2106, 1], [0x2108, 0x2109, 1], [0x2114, 0x2116, 2], [0x2117, 0x2118, 1], [0x211e, 0x2123, 1], [0x2125, 0x2129, 2],
		[0x212e, 0x213a, 12], [0x213b, 0x2140, 5], [0x2141, 0x2144, 1], [0x214a, 0x214d, 1], [0x214f, 0x218a, 59], [0x218b, 0x2190, 5], [0x2191, 0x2307, 1],
		[0x230c, 0x2328, 1], [0x232b, 0x2426, 1], [0x2440, 0x244a, 1], [0x249c, 0x24e9, 1], [0x2500, 0x2767, 1], [0x2794, 0x27c4, 1], [0x27c7, 0x27e5, 1],
		[0x27f0, 0x2982, 1], [0x2999, 0x29d7, 1], [0x29dc, 0x29fb, 1], [0x29fe, 0x2b73, 1], [0x2b76, 0x2b95, 1], [0x2b97, 0x2bff, 1], [0x2ce5, 0x2cea, 1],
		[0x2e50, 0x2e51, 1], [0x2e80, 0x2e99, 1], [0x2e9b, 0x2ef3, 1], [0x2f00, 0x2fd5, 1], [0x2ff0, 0x2ffb, 1], [0x3004, 0x3012, 14], [0x3013, 0x3020, 13],
		[0x3036, 0x3037, 1], [0x303e, 0x303f, 1], [0x309b, 0x309c, 1], [0x3190, 0x3191, 1], [0x3196, 0x319f, 1], [0x31c0, 0x31e3, 1], [0x3200, 0x321e, 1],
		[0x322a, 0x3247, 1], [0x3250, 0x3260, 16], [0x3261, 0x327f, 1], [0x328a, 0x32b0, 1], [0x32c0, 0x33ff, 1], [0x4dc0, 0x4dff, 1], [0xa490, 0xa4c6, 1],
		[0xa700, 0xa716, 1], [0xa720, 0xa721, 1], [0xa789, 0xa78a, 1], [0xa828, 0xa82b, 1], [0xa836, 0xa839, 1], [0xaa77, 0xaa79, 1], [0xab5b, 0xab6a, 15],
		[0xab6b, 0xfb29, 20414], [0xfbb2, 0xfbc2, 1], [0xfd40, 0xfd4f, 1], [0xfdcf, 0xfdfc, 45], [0xfdfd, 0xfdff, 1], [0xfe62, 0xfe64, 2],
		[0xfe65, 0xfe66, 1], [0xfe69, 0xff04, 155], [0xff0b, 0xff1c, 17], [0xff1d, 0xff1e, 1], [0xff3e, 0xff40, 2], [0xff5c, 0xff5e, 2], [0xffe0, 0xffe6, 1],
		[0xffe8, 0xffee, 1], [0xfffc, 0xfffd, 1],
	],
	R32: [
		[0x10137, 0x1013f, 1], [0x10179, 0x10189, 1], [0x1018c, 0x1018e, 1], [0x10190, 0x1019c, 1], [0x101a0, 0x101d0, 48], [0x101d1, 0x101fc, 1],
		[0x10877, 0x10878, 1], [0x10ac8, 0x1173f, 3191], [0x11fd5, 0x11ff1, 1], [0x16b3c, 0x16b3f, 1], [0x16b45, 0x1bc9c, 20823], [0x1cf50, 0x1cfc3, 1],
		[0x1d000, 0x1d0f5, 1], [0x1d100, 0x1d126, 1], [0x1d129, 0x1d164, 1], [0x1d16a, 0x1d16c, 1], [0x1d183, 0x1d184, 1], [0x1d18c, 0x1d1a9, 1],
		[0x1d1ae, 0x1d1ea, 1], [0x1d200, 0x1d241, 1], [0x1d245, 0x1d300, 187], [0x1d301, 0x1d356, 1], [0x1d6c1, 0x1d6db, 26], [0x1d6fb, 0x1d715, 26],
		[0x1d735, 0x1d74f, 26], [0x1d76f, 0x1d789, 26], [0x1d7a9, 0x1d7c3, 26], [0x1d800, 0x1d9ff, 1], [0x1da37, 0x1da3a, 1], [0x1da6d, 0x1da74, 1],
		[0x1da76, 0x1da83, 1], [0x1da85, 0x1da86, 1], [0x1e14f, 0x1e2ff, 432], [0x1ecac, 0x1ecb0, 4], [0x1ed2e, 0x1eef0, 450], [0x1eef1, 0x1f000, 271],
		[0x1f001, 0x1f02b, 1], [0x1f030, 0x1f093, 1], [0x1f0a0, 0x1f0ae, 1], [0x1f0b1, 0x1f0bf, 1], [0x1f0c1, 0x1f0cf, 1], [0x1f0d1, 0x1f0f5, 1],
		[0x1f10d, 0x1f1ad, 1], [0x1f1e6, 0x1f202, 1], [0x1f210, 0x1f23b, 1], [0x1f240, 0x1f248, 1], [0x1f250, 0x1f251, 1], [0x1f260, 0x1f265, 1],
		[0x1f300, 0x1f6d7, 1], [0x1f6dc, 0x1f6ec, 1], [0x1f6f0, 0x1f6fc, 1], [0x1f700, 0x1f776, 1], [0x1f77b, 0x1f7d9, 1], [0x1f7e0, 0x1f7eb, 1],
		[0x1f7f0, 0x1f800, 16], [0x1f801, 0x1f80b, 1], [0x1f810, 0x1f847, 1], [0x1f850, 0x1f859, 1], [0x1f860, 0x1f887, 1], [0x1f890, 0x1f8ad, 1],
		[0x1f8b0, 0x1f8b1, 1], [0x1f900, 0x1fa53, 1], [0x1fa60, 0x1fa6d, 1], [0x1fa70, 0x1fa7c, 1], [0x1fa80, 0x1fa88, 1], [0x1fa90, 0x1fabd, 1],
		[0x1fabf, 0x1fac5, 1], [0x1face, 0x1fadb, 1], [0x1fae0, 0x1fae8, 1], [0x1faf0, 0x1faf8, 1], [0x1fb00, 0x1fb92, 1], [0x1fb94, 0x1fbca, 1],
	],
	LatinOffset: 2,
}

private var _No:RangeTable = {
	R16: [
		[0xb2, 0xb3, 1], [0xb9, 0xbc, 3], [0xbd, 0xbe, 1], [0x9f4, 0x9f9, 1], [0xb72, 0xb77, 1], [0xbf0, 0xbf2, 1], [0xc78, 0xc7e, 1], [0xd58, 0xd5e, 1],
		[0xd70, 0xd78, 1], [0xf2a, 0xf33, 1], [0x1369, 0x137c, 1], [0x17f0, 0x17f9, 1], [0x19da, 0x2070, 1686], [0x2074, 0x2079, 1], [0x2080, 0x2089, 1],
		[0x2150, 0x215f, 1], [0x2189, 0x2460, 727], [0x2461, 0x249b, 1], [0x24ea, 0x24ff, 1], [0x2776, 0x2793, 1], [0x2cfd, 0x3192, 1173],
		[0x3193, 0x3195, 1], [0x3220, 0x3229, 1], [0x3248, 0x324f, 1], [0x3251, 0x325f, 1], [0x3280, 0x3289, 1], [0x32b1, 0x32bf, 1], [0xa830, 0xa835, 1],
	],
	R32: [
		[0x10107, 0x10133, 1], [0x10175, 0x10178, 1], [0x1018a, 0x1018b, 1], [0x102e1, 0x102fb, 1], [0x10320, 0x10323, 1], [0x10858, 0x1085f, 1],
		[0x10879, 0x1087f, 1], [0x108a7, 0x108af, 1], [0x108fb, 0x108ff, 1], [0x10916, 0x1091b, 1], [0x109bc, 0x109bd, 1], [0x109c0, 0x109cf, 1],
		[0x109d2, 0x109ff, 1], [0x10a40, 0x10a48, 1], [0x10a7d, 0x10a7e, 1], [0x10a9d, 0x10a9f, 1], [0x10aeb, 0x10aef, 1], [0x10b58, 0x10b5f, 1],
		[0x10b78, 0x10b7f, 1], [0x10ba9, 0x10baf, 1], [0x10cfa, 0x10cff, 1], [0x10e60, 0x10e7e, 1], [0x10f1d, 0x10f26, 1], [0x10f51, 0x10f54, 1],
		[0x10fc5, 0x10fcb, 1], [0x11052, 0x11065, 1], [0x111e1, 0x111f4, 1], [0x1173a, 0x1173b, 1], [0x118ea, 0x118f2, 1], [0x11c5a, 0x11c6c, 1],
		[0x11fc0, 0x11fd4, 1], [0x16b5b, 0x16b61, 1], [0x16e80, 0x16e96, 1], [0x1d2c0, 0x1d2d3, 1], [0x1d2e0, 0x1d2f3, 1], [0x1d360, 0x1d378, 1],
		[0x1e8c7, 0x1e8cf, 1], [0x1ec71, 0x1ecab, 1], [0x1ecad, 0x1ecaf, 1], [0x1ecb1, 0x1ecb4, 1], [0x1ed01, 0x1ed2d, 1], [0x1ed2f, 0x1ed3d, 1],
		[0x1f100, 0x1f10c, 1],
	],
	LatinOffset: 2,
}

private var _L:RangeTable = {
	R16: [
		[0x41, 0x5a, 1], [0x61, 0x7a, 1], [0xaa, 0xb5, 11], [0xba, 0xc0, 6], [0xc1, 0xd6, 1], [0xd8, 0xf6, 1], [0xf8, 0x2c1, 1], [0x2c6, 0x2d1, 1],
		[0x2e0, 0x2e4, 1], [0x2ec, 0x2ee, 2], [0x370, 0x374, 1], [0x376, 0x377, 1], [0x37a, 0x37d, 1], [0x37f, 0x386, 7], [0x388, 0x38a, 1],
		[0x38c, 0x38e, 2], [0x38f, 0x3a1, 1], [0x3a3, 0x3f5, 1], [0x3f7, 0x481, 1], [0x48a, 0x52f, 1], [0x531, 0x556, 1], [0x559, 0x560, 7],
		[0x561, 0x588, 1], [0x5d0, 0x5ea, 1], [0x5ef, 0x5f2, 1], [0x620, 0x64a, 1], [0x66e, 0x66f, 1], [0x671, 0x6d3, 1], [0x6d5, 0x6e5, 16],
		[0x6e6, 0x6ee, 8], [0x6ef, 0x6fa, 11], [0x6fb, 0x6fc, 1], [0x6ff, 0x710, 17], [0x712, 0x72f, 1], [0x74d, 0x7a5, 1], [0x7b1, 0x7ca, 25],
		[0x7cb, 0x7ea, 1], [0x7f4, 0x7f5, 1], [0x7fa, 0x800, 6], [0x801, 0x815, 1], [0x81a, 0x824, 10], [0x828, 0x840, 24], [0x841, 0x858, 1],
		[0x860, 0x86a, 1], [0x870, 0x887, 1], [0x889, 0x88e, 1], [0x8a0, 0x8c9, 1], [0x904, 0x939, 1], [0x93d, 0x950, 19], [0x958, 0x961, 1],
		[0x971, 0x980, 1], [0x985, 0x98c, 1], [0x98f, 0x990, 1], [0x993, 0x9a8, 1], [0x9aa, 0x9b0, 1], [0x9b2, 0x9b6, 4], [0x9b7, 0x9b9, 1],
		[0x9bd, 0x9ce, 17], [0x9dc, 0x9dd, 1], [0x9df, 0x9e1, 1], [0x9f0, 0x9f1, 1], [0x9fc, 0xa05, 9], [0xa06, 0xa0a, 1], [0xa0f, 0xa10, 1],
		[0xa13, 0xa28, 1], [0xa2a, 0xa30, 1], [0xa32, 0xa33, 1], [0xa35, 0xa36, 1], [0xa38, 0xa39, 1], [0xa59, 0xa5c, 1], [0xa5e, 0xa72, 20],
		[0xa73, 0xa74, 1], [0xa85, 0xa8d, 1], [0xa8f, 0xa91, 1], [0xa93, 0xaa8, 1], [0xaaa, 0xab0, 1], [0xab2, 0xab3, 1], [0xab5, 0xab9, 1],
		[0xabd, 0xad0, 19], [0xae0, 0xae1, 1], [0xaf9, 0xb05, 12], [0xb06, 0xb0c, 1], [0xb0f, 0xb10, 1], [0xb13, 0xb28, 1], [0xb2a, 0xb30, 1],
		[0xb32, 0xb33, 1], [0xb35, 0xb39, 1], [0xb3d, 0xb5c, 31], [0xb5d, 0xb5f, 2], [0xb60, 0xb61, 1], [0xb71, 0xb83, 18], [0xb85, 0xb8a, 1],
		[0xb8e, 0xb90, 1], [0xb92, 0xb95, 1], [0xb99, 0xb9a, 1], [0xb9c, 0xb9e, 2], [0xb9f, 0xba3, 4], [0xba4, 0xba8, 4], [0xba9, 0xbaa, 1],
		[0xbae, 0xbb9, 1], [0xbd0, 0xc05, 53], [0xc06, 0xc0c, 1], [0xc0e, 0xc10, 1], [0xc12, 0xc28, 1], [0xc2a, 0xc39, 1], [0xc3d, 0xc58, 27],
		[0xc59, 0xc5a, 1], [0xc5d, 0xc60, 3], [0xc61, 0xc80, 31], [0xc85, 0xc8c, 1], [0xc8e, 0xc90, 1], [0xc92, 0xca8, 1], [0xcaa, 0xcb3, 1],
		[0xcb5, 0xcb9, 1], [0xcbd, 0xcdd, 32], [0xcde, 0xce0, 2], [0xce1, 0xcf1, 16], [0xcf2, 0xd04, 18], [0xd05, 0xd0c, 1], [0xd0e, 0xd10, 1],
		[0xd12, 0xd3a, 1], [0xd3d, 0xd4e, 17], [0xd54, 0xd56, 1], [0xd5f, 0xd61, 1], [0xd7a, 0xd7f, 1], [0xd85, 0xd96, 1], [0xd9a, 0xdb1, 1],
		[0xdb3, 0xdbb, 1], [0xdbd, 0xdc0, 3], [0xdc1, 0xdc6, 1], [0xe01, 0xe30, 1], [0xe32, 0xe33, 1], [0xe40, 0xe46, 1], [0xe81, 0xe82, 1],
		[0xe84, 0xe86, 2], [0xe87, 0xe8a, 1], [0xe8c, 0xea3, 1], [0xea5, 0xea7, 2], [0xea8, 0xeb0, 1], [0xeb2, 0xeb3, 1], [0xebd, 0xec0, 3],
		[0xec1, 0xec4, 1], [0xec6, 0xedc, 22], [0xedd, 0xedf, 1], [0xf00, 0xf40, 64], [0xf41, 0xf47, 1], [0xf49, 0xf6c, 1], [0xf88, 0xf8c, 1],
		[0x1000, 0x102a, 1], [0x103f, 0x1050, 17], [0x1051, 0x1055, 1], [0x105a, 0x105d, 1], [0x1061, 0x1065, 4], [0x1066, 0x106e, 8], [0x106f, 0x1070, 1],
		[0x1075, 0x1081, 1], [0x108e, 0x10a0, 18], [0x10a1, 0x10c5, 1], [0x10c7, 0x10cd, 6], [0x10d0, 0x10fa, 1], [0x10fc, 0x1248, 1], [0x124a, 0x124d, 1],
		[0x1250, 0x1256, 1], [0x1258, 0x125a, 2], [0x125b, 0x125d, 1], [0x1260, 0x1288, 1], [0x128a, 0x128d, 1], [0x1290, 0x12b0, 1], [0x12b2, 0x12b5, 1],
		[0x12b8, 0x12be, 1], [0x12c0, 0x12c2, 2], [0x12c3, 0x12c5, 1], [0x12c8, 0x12d6, 1], [0x12d8, 0x1310, 1], [0x1312, 0x1315, 1], [0x1318, 0x135a, 1],
		[0x1380, 0x138f, 1], [0x13a0, 0x13f5, 1], [0x13f8, 0x13fd, 1], [0x1401, 0x166c, 1], [0x166f, 0x167f, 1], [0x1681, 0x169a, 1], [0x16a0, 0x16ea, 1],
		[0x16f1, 0x16f8, 1], [0x1700, 0x1711, 1], [0x171f, 0x1731, 1], [0x1740, 0x1751, 1], [0x1760, 0x176c, 1], [0x176e, 0x1770, 1], [0x1780, 0x17b3, 1],
		[0x17d7, 0x17dc, 5], [0x1820, 0x1878, 1], [0x1880, 0x1884, 1], [0x1887, 0x18a8, 1], [0x18aa, 0x18b0, 6], [0x18b1, 0x18f5, 1], [0x1900, 0x191e, 1],
		[0x1950, 0x196d, 1], [0x1970, 0x1974, 1], [0x1980, 0x19ab, 1], [0x19b0, 0x19c9, 1], [0x1a00, 0x1a16, 1], [0x1a20, 0x1a54, 1], [0x1aa7, 0x1b05, 94],
		[0x1b06, 0x1b33, 1], [0x1b45, 0x1b4c, 1], [0x1b83, 0x1ba0, 1], [0x1bae, 0x1baf, 1], [0x1bba, 0x1be5, 1], [0x1c00, 0x1c23, 1], [0x1c4d, 0x1c4f, 1],
		[0x1c5a, 0x1c7d, 1], [0x1c80, 0x1c88, 1], [0x1c90, 0x1cba, 1], [0x1cbd, 0x1cbf, 1], [0x1ce9, 0x1cec, 1], [0x1cee, 0x1cf3, 1], [0x1cf5, 0x1cf6, 1],
		[0x1cfa, 0x1d00, 6], [0x1d01, 0x1dbf, 1], [0x1e00, 0x1f15, 1], [0x1f18, 0x1f1d, 1], [0x1f20, 0x1f45, 1], [0x1f48, 0x1f4d, 1], [0x1f50, 0x1f57, 1],
		[0x1f59, 0x1f5f, 2], [0x1f60, 0x1f7d, 1], [0x1f80, 0x1fb4, 1], [0x1fb6, 0x1fbc, 1], [0x1fbe, 0x1fc2, 4], [0x1fc3, 0x1fc4, 1], [0x1fc6, 0x1fcc, 1],
		[0x1fd0, 0x1fd3, 1], [0x1fd6, 0x1fdb, 1], [0x1fe0, 0x1fec, 1], [0x1ff2, 0x1ff4, 1], [0x1ff6, 0x1ffc, 1], [0x2071, 0x207f, 14], [0x2090, 0x209c, 1],
		[0x2102, 0x2107, 5], [0x210a, 0x2113, 1], [0x2115, 0x2119, 4], [0x211a, 0x211d, 1], [0x2124, 0x212a, 2], [0x212b, 0x212d, 1], [0x212f, 0x2139, 1],
		[0x213c, 0x213f, 1], [0x2145, 0x2149, 1], [0x214e, 0x2183, 53], [0x2184, 0x2c00, 2684], [0x2c01, 0x2ce4, 1], [0x2ceb, 0x2cee, 1], [0x2cf2, 0x2cf3, 1],
		[0x2d00, 0x2d25, 1], [0x2d27, 0x2d2d, 6], [0x2d30, 0x2d67, 1], [0x2d6f, 0x2d80, 17], [0x2d81, 0x2d96, 1], [0x2da0, 0x2da6, 1], [0x2da8, 0x2dae, 1],
		[0x2db0, 0x2db6, 1], [0x2db8, 0x2dbe, 1], [0x2dc0, 0x2dc6, 1], [0x2dc8, 0x2dce, 1], [0x2dd0, 0x2dd6, 1], [0x2dd8, 0x2dde, 1], [0x2e2f, 0x3005, 470],
		[0x3006, 0x3031, 43], [0x3032, 0x3035, 1], [0x303b, 0x303c, 1], [0x3041, 0x3096, 1], [0x309d, 0x309f, 1], [0x30a1, 0x30fa, 1], [0x30fc, 0x30ff, 1],
		[0x3105, 0x312f, 1], [0x3131, 0x318e, 1], [0x31a0, 0x31bf, 1], [0x31f0, 0x31ff, 1], [0x3400, 0x4dbf, 1], [0x4e00, 0xa48c, 1], [0xa4d0, 0xa4fd, 1],
		[0xa500, 0xa60c, 1], [0xa610, 0xa61f, 1], [0xa62a, 0xa62b, 1], [0xa640, 0xa66e, 1], [0xa67f, 0xa69d, 1], [0xa6a0, 0xa6e5, 1], [0xa717, 0xa71f, 1],
		[0xa722, 0xa788, 1], [0xa78b, 0xa7ca, 1], [0xa7d0, 0xa7d1, 1], [0xa7d3, 0xa7d5, 2], [0xa7d6, 0xa7d9, 1], [0xa7f2, 0xa801, 1], [0xa803, 0xa805, 1],
		[0xa807, 0xa80a, 1], [0xa80c, 0xa822, 1], [0xa840, 0xa873, 1], [0xa882, 0xa8b3, 1], [0xa8f2, 0xa8f7, 1], [0xa8fb, 0xa8fd, 2], [0xa8fe, 0xa90a, 12],
		[0xa90b, 0xa925, 1], [0xa930, 0xa946, 1], [0xa960, 0xa97c, 1], [0xa984, 0xa9b2, 1], [0xa9cf, 0xa9e0, 17], [0xa9e1, 0xa9e4, 1], [0xa9e6, 0xa9ef, 1],
		[0xa9fa, 0xa9fe, 1], [0xaa00, 0xaa28, 1], [0xaa40, 0xaa42, 1], [0xaa44, 0xaa4b, 1], [0xaa60, 0xaa76, 1], [0xaa7a, 0xaa7e, 4], [0xaa7f, 0xaaaf, 1],
		[0xaab1, 0xaab5, 4], [0xaab6, 0xaab9, 3], [0xaaba, 0xaabd, 1], [0xaac0, 0xaac2, 2], [0xaadb, 0xaadd, 1], [0xaae0, 0xaaea, 1], [0xaaf2, 0xaaf4, 1],
		[0xab01, 0xab06, 1], [0xab09, 0xab0e, 1], [0xab11, 0xab16, 1], [0xab20, 0xab26, 1], [0xab28, 0xab2e, 1], [0xab30, 0xab5a, 1], [0xab5c, 0xab69, 1],
		[0xab70, 0xabe2, 1], [0xac00, 0xd7a3, 1], [0xd7b0, 0xd7c6, 1], [0xd7cb, 0xd7fb, 1], [0xf900, 0xfa6d, 1], [0xfa70, 0xfad9, 1], [0xfb00, 0xfb06, 1],
		[0xfb13, 0xfb17, 1], [0xfb1d, 0xfb1f, 2], [0xfb20, 0xfb28, 1], [0xfb2a, 0xfb36, 1], [0xfb38, 0xfb3c, 1], [0xfb3e, 0xfb40, 2], [0xfb41, 0xfb43, 2],
		[0xfb44, 0xfb46, 2], [0xfb47, 0xfbb1, 1], [0xfbd3, 0xfd3d, 1], [0xfd50, 0xfd8f, 1], [0xfd92, 0xfdc7, 1], [0xfdf0, 0xfdfb, 1], [0xfe70, 0xfe74, 1],
		[0xfe76, 0xfefc, 1], [0xff21, 0xff3a, 1], [0xff41, 0xff5a, 1], [0xff66, 0xffbe, 1], [0xffc2, 0xffc7, 1], [0xffca, 0xffcf, 1], [0xffd2, 0xffd7, 1],
		[0xffda, 0xffdc, 1],
	],
	R32: [
		[0x10000, 0x1000b, 1], [0x1000d, 0x10026, 1], [0x10028, 0x1003a, 1], [0x1003c, 0x1003d, 1], [0x1003f, 0x1004d, 1], [0x10050, 0x1005d, 1],
		[0x10080, 0x100fa, 1], [0x10280, 0x1029c, 1], [0x102a0, 0x102d0, 1], [0x10300, 0x1031f, 1], [0x1032d, 0x10340, 1], [0x10342, 0x10349, 1],
		[0x10350, 0x10375, 1], [0x10380, 0x1039d, 1], [0x103a0, 0x103c3, 1], [0x103c8, 0x103cf, 1], [0x10400, 0x1049d, 1], [0x104b0, 0x104d3, 1],
		[0x104d8, 0x104fb, 1], [0x10500, 0x10527, 1], [0x10530, 0x10563, 1], [0x10570, 0x1057a, 1], [0x1057c, 0x1058a, 1], [0x1058c, 0x10592, 1],
		[0x10594, 0x10595, 1], [0x10597, 0x105a1, 1], [0x105a3, 0x105b1, 1], [0x105b3, 0x105b9, 1], [0x105bb, 0x105bc, 1], [0x10600, 0x10736, 1],
		[0x10740, 0x10755, 1], [0x10760, 0x10767, 1], [0x10780, 0x10785, 1], [0x10787, 0x107b0, 1], [0x107b2, 0x107ba, 1], [0x10800, 0x10805, 1],
		[0x10808, 0x1080a, 2], [0x1080b, 0x10835, 1], [0x10837, 0x10838, 1], [0x1083c, 0x1083f, 3], [0x10840, 0x10855, 1], [0x10860, 0x10876, 1],
		[0x10880, 0x1089e, 1], [0x108e0, 0x108f2, 1], [0x108f4, 0x108f5, 1], [0x10900, 0x10915, 1], [0x10920, 0x10939, 1], [0x10980, 0x109b7, 1],
		[0x109be, 0x109bf, 1], [0x10a00, 0x10a10, 16], [0x10a11, 0x10a13, 1], [0x10a15, 0x10a17, 1], [0x10a19, 0x10a35, 1], [0x10a60, 0x10a7c, 1],
		[0x10a80, 0x10a9c, 1], [0x10ac0, 0x10ac7, 1], [0x10ac9, 0x10ae4, 1], [0x10b00, 0x10b35, 1], [0x10b40, 0x10b55, 1], [0x10b60, 0x10b72, 1],
		[0x10b80, 0x10b91, 1], [0x10c00, 0x10c48, 1], [0x10c80, 0x10cb2, 1], [0x10cc0, 0x10cf2, 1], [0x10d00, 0x10d23, 1], [0x10e80, 0x10ea9, 1],
		[0x10eb0, 0x10eb1, 1], [0x10f00, 0x10f1c, 1], [0x10f27, 0x10f30, 9], [0x10f31, 0x10f45, 1], [0x10f70, 0x10f81, 1], [0x10fb0, 0x10fc4, 1],
		[0x10fe0, 0x10ff6, 1], [0x11003, 0x11037, 1], [0x11071, 0x11072, 1], [0x11075, 0x11083, 14], [0x11084, 0x110af, 1], [0x110d0, 0x110e8, 1],
		[0x11103, 0x11126, 1], [0x11144, 0x11147, 3], [0x11150, 0x11172, 1], [0x11176, 0x11183, 13], [0x11184, 0x111b2, 1], [0x111c1, 0x111c4, 1],
		[0x111da, 0x111dc, 2], [0x11200, 0x11211, 1], [0x11213, 0x1122b, 1], [0x1123f, 0x11240, 1], [0x11280, 0x11286, 1], [0x11288, 0x1128a, 2],
		[0x1128b, 0x1128d, 1], [0x1128f, 0x1129d, 1], [0x1129f, 0x112a8, 1], [0x112b0, 0x112de, 1], [0x11305, 0x1130c, 1], [0x1130f, 0x11310, 1],
		[0x11313, 0x11328, 1], [0x1132a, 0x11330, 1], [0x11332, 0x11333, 1], [0x11335, 0x11339, 1], [0x1133d, 0x11350, 19], [0x1135d, 0x11361, 1],
		[0x11400, 0x11434, 1], [0x11447, 0x1144a, 1], [0x1145f, 0x11461, 1], [0x11480, 0x114af, 1], [0x114c4, 0x114c5, 1], [0x114c7, 0x11580, 185],
		[0x11581, 0x115ae, 1], [0x115d8, 0x115db, 1], [0x11600, 0x1162f, 1], [0x11644, 0x11680, 60], [0x11681, 0x116aa, 1], [0x116b8, 0x11700, 72],
		[0x11701, 0x1171a, 1], [0x11740, 0x11746, 1], [0x11800, 0x1182b, 1], [0x118a0, 0x118df, 1], [0x118ff, 0x11906, 1], [0x11909, 0x1190c, 3],
		[0x1190d, 0x11913, 1], [0x11915, 0x11916, 1], [0x11918, 0x1192f, 1], [0x1193f, 0x11941, 2], [0x119a0, 0x119a7, 1], [0x119aa, 0x119d0, 1],
		[0x119e1, 0x119e3, 2], [0x11a00, 0x11a0b, 11], [0x11a0c, 0x11a32, 1], [0x11a3a, 0x11a50, 22], [0x11a5c, 0x11a89, 1], [0x11a9d, 0x11ab0, 19],
		[0x11ab1, 0x11af8, 1], [0x11c00, 0x11c08, 1], [0x11c0a, 0x11c2e, 1], [0x11c40, 0x11c72, 50], [0x11c73, 0x11c8f, 1], [0x11d00, 0x11d06, 1],
		[0x11d08, 0x11d09, 1], [0x11d0b, 0x11d30, 1], [0x11d46, 0x11d60, 26], [0x11d61, 0x11d65, 1], [0x11d67, 0x11d68, 1], [0x11d6a, 0x11d89, 1],
		[0x11d98, 0x11ee0, 328], [0x11ee1, 0x11ef2, 1], [0x11f02, 0x11f04, 2], [0x11f05, 0x11f10, 1], [0x11f12, 0x11f33, 1], [0x11fb0, 0x12000, 80],
		[0x12001, 0x12399, 1], [0x12480, 0x12543, 1], [0x12f90, 0x12ff0, 1], [0x13000, 0x1342f, 1], [0x13441, 0x13446, 1], [0x14400, 0x14646, 1],
		[0x16800, 0x16a38, 1], [0x16a40, 0x16a5e, 1], [0x16a70, 0x16abe, 1], [0x16ad0, 0x16aed, 1], [0x16b00, 0x16b2f, 1], [0x16b40, 0x16b43, 1],
		[0x16b63, 0x16b77, 1], [0x16b7d, 0x16b8f, 1], [0x16e40, 0x16e7f, 1], [0x16f00, 0x16f4a, 1], [0x16f50, 0x16f93, 67], [0x16f94, 0x16f9f, 1],
		[0x16fe0, 0x16fe1, 1], [0x16fe3, 0x17000, 29], [0x17001, 0x187f7, 1], [0x18800, 0x18cd5, 1], [0x18d00, 0x18d08, 1], [0x1aff0, 0x1aff3, 1],
		[0x1aff5, 0x1affb, 1], [0x1affd, 0x1affe, 1], [0x1b000, 0x1b122, 1], [0x1b132, 0x1b150, 30], [0x1b151, 0x1b152, 1], [0x1b155, 0x1b164, 15],
		[0x1b165, 0x1b167, 1], [0x1b170, 0x1b2fb, 1], [0x1bc00, 0x1bc6a, 1], [0x1bc70, 0x1bc7c, 1], [0x1bc80, 0x1bc88, 1], [0x1bc90, 0x1bc99, 1],
		[0x1d400, 0x1d454, 1], [0x1d456, 0x1d49c, 1], [0x1d49e, 0x1d49f, 1], [0x1d4a2, 0x1d4a5, 3], [0x1d4a6, 0x1d4a9, 3], [0x1d4aa, 0x1d4ac, 1],
		[0x1d4ae, 0x1d4b9, 1], [0x1d4bb, 0x1d4bd, 2], [0x1d4be, 0x1d4c3, 1], [0x1d4c5, 0x1d505, 1], [0x1d507, 0x1d50a, 1], [0x1d50d, 0x1d514, 1],
		[0x1d516, 0x1d51c, 1], [0x1d51e, 0x1d539, 1], [0x1d53b, 0x1d53e, 1], [0x1d540, 0x1d544, 1], [0x1d546, 0x1d54a, 4], [0x1d54b, 0x1d550, 1],
		[0x1d552, 0x1d6a5, 1], [0x1d6a8, 0x1d6c0, 1], [0x1d6c2, 0x1d6da, 1], [0x1d6dc, 0x1d6fa, 1], [0x1d6fc, 0x1d714, 1], [0x1d716, 0x1d734, 1],
		[0x1d736, 0x1d74e, 1], [0x1d750, 0x1d76e, 1], [0x1d770, 0x1d788, 1], [0x1d78a, 0x1d7a8, 1], [0x1d7aa, 0x1d7c2, 1], [0x1d7c4, 0x1d7cb, 1],
		[0x1df00, 0x1df1e, 1], [0x1df25, 0x1df2a, 1], [0x1e030, 0x1e06d, 1], [0x1e100, 0x1e12c, 1], [0x1e137, 0x1e13d, 1], [0x1e14e, 0x1e290, 322],
		[0x1e291, 0x1e2ad, 1], [0x1e2c0, 0x1e2eb, 1], [0x1e4d0, 0x1e4eb, 1], [0x1e7e0, 0x1e7e6, 1], [0x1e7e8, 0x1e7eb, 1], [0x1e7ed, 0x1e7ee, 1],
		[0x1e7f0, 0x1e7fe, 1], [0x1e800, 0x1e8c4, 1], [0x1e900, 0x1e943, 1], [0x1e94b, 0x1ee00, 1205], [0x1ee01, 0x1ee03, 1], [0x1ee05, 0x1ee1f, 1],
		[0x1ee21, 0x1ee22, 1], [0x1ee24, 0x1ee27, 3], [0x1ee29, 0x1ee32, 1], [0x1ee34, 0x1ee37, 1], [0x1ee39, 0x1ee3b, 2], [0x1ee42, 0x1ee47, 5],
		[0x1ee49, 0x1ee4d, 2], [0x1ee4e, 0x1ee4f, 1], [0x1ee51, 0x1ee52, 1], [0x1ee54, 0x1ee57, 3], [0x1ee59, 0x1ee61, 2], [0x1ee62, 0x1ee64, 2],
		[0x1ee67, 0x1ee6a, 1], [0x1ee6c, 0x1ee72, 1], [0x1ee74, 0x1ee77, 1], [0x1ee79, 0x1ee7c, 1], [0x1ee7e, 0x1ee80, 2], [0x1ee81, 0x1ee89, 1],
		[0x1ee8b, 0x1ee9b, 1], [0x1eea1, 0x1eea3, 1], [0x1eea5, 0x1eea9, 1], [0x1eeab, 0x1eebb, 1], [0x20000, 0x2a6df, 1], [0x2a700, 0x2b739, 1],
		[0x2b740, 0x2b81d, 1], [0x2b820, 0x2cea1, 1], [0x2ceb0, 0x2ebe0, 1], [0x2f800, 0x2fa1d, 1], [0x30000, 0x3134a, 1], [0x31350, 0x323af, 1],
	],
	LatinOffset: 2,
}

private var _Lo:RangeTable = {
	R16: [
		[0xaa, 0xba, 16], [0x1bb, 0x1c0, 5], [0x1c1, 0x1c3, 1], [0x294, 0x5d0, 828], [0x5d1, 0x5ea, 1], [0x5ef, 0x5f2, 1], [0x620, 0x63f, 1],
		[0x641, 0x64a, 1], [0x66e, 0x66f, 1], [0x671, 0x6d3, 1], [0x6d5, 0x6ee, 25], [0x6ef, 0x6fa, 11], [0x6fb, 0x6fc, 1], [0x6ff, 0x710, 17],
		[0x712, 0x72f, 1], [0x74d, 0x7a5, 1], [0x7b1, 0x7ca, 25], [0x7cb, 0x7ea, 1], [0x800, 0x815, 1], [0x840, 0x858, 1], [0x860, 0x86a, 1],
		[0x870, 0x887, 1], [0x889, 0x88e, 1], [0x8a0, 0x8c8, 1], [0x904, 0x939, 1], [0x93d, 0x950, 19], [0x958, 0x961, 1], [0x972, 0x980, 1],
		[0x985, 0x98c, 1], [0x98f, 0x990, 1], [0x993, 0x9a8, 1], [0x9aa, 0x9b0, 1], [0x9b2, 0x9b6, 4], [0x9b7, 0x9b9, 1], [0x9bd, 0x9ce, 17],
		[0x9dc, 0x9dd, 1], [0x9df, 0x9e1, 1], [0x9f0, 0x9f1, 1], [0x9fc, 0xa05, 9], [0xa06, 0xa0a, 1], [0xa0f, 0xa10, 1], [0xa13, 0xa28, 1],
		[0xa2a, 0xa30, 1], [0xa32, 0xa33, 1], [0xa35, 0xa36, 1], [0xa38, 0xa39, 1], [0xa59, 0xa5c, 1], [0xa5e, 0xa72, 20], [0xa73, 0xa74, 1],
		[0xa85, 0xa8d, 1], [0xa8f, 0xa91, 1], [0xa93, 0xaa8, 1], [0xaaa, 0xab0, 1], [0xab2, 0xab3, 1], [0xab5, 0xab9, 1], [0xabd, 0xad0, 19],
		[0xae0, 0xae1, 1], [0xaf9, 0xb05, 12], [0xb06, 0xb0c, 1], [0xb0f, 0xb10, 1], [0xb13, 0xb28, 1], [0xb2a, 0xb30, 1], [0xb32, 0xb33, 1],
		[0xb35, 0xb39, 1], [0xb3d, 0xb5c, 31], [0xb5d, 0xb5f, 2], [0xb60, 0xb61, 1], [0xb71, 0xb83, 18], [0xb85, 0xb8a, 1], [0xb8e, 0xb90, 1],
		[0xb92, 0xb95, 1], [0xb99, 0xb9a, 1], [0xb9c, 0xb9e, 2], [0xb9f, 0xba3, 4], [0xba4, 0xba8, 4], [0xba9, 0xbaa, 1], [0xbae, 0xbb9, 1],
		[0xbd0, 0xc05, 53], [0xc06, 0xc0c, 1], [0xc0e, 0xc10, 1], [0xc12, 0xc28, 1], [0xc2a, 0xc39, 1], [0xc3d, 0xc58, 27], [0xc59, 0xc5a, 1],
		[0xc5d, 0xc60, 3], [0xc61, 0xc80, 31], [0xc85, 0xc8c, 1], [0xc8e, 0xc90, 1], [0xc92, 0xca8, 1], [0xcaa, 0xcb3, 1], [0xcb5, 0xcb9, 1],
		[0xcbd, 0xcdd, 32], [0xcde, 0xce0, 2], [0xce1, 0xcf1, 16], [0xcf2, 0xd04, 18], [0xd05, 0xd0c, 1], [0xd0e, 0xd10, 1], [0xd12, 0xd3a, 1],
		[0xd3d, 0xd4e, 17], [0xd54, 0xd56, 1], [0xd5f, 0xd61, 1], [0xd7a, 0xd7f, 1], [0xd85, 0xd96, 1], [0xd9a, 0xdb1, 1], [0xdb3, 0xdbb, 1],
		[0xdbd, 0xdc0, 3], [0xdc1, 0xdc6, 1], [0xe01, 0xe30, 1], [0xe32, 0xe33, 1], [0xe40, 0xe45, 1], [0xe81, 0xe82, 1], [0xe84, 0xe86, 2],
		[0xe87, 0xe8a, 1], [0xe8c, 0xea3, 1], [0xea5, 0xea7, 2], [0xea8, 0xeb0, 1], [0xeb2, 0xeb3, 1], [0xebd, 0xec0, 3], [0xec1, 0xec4, 1],
		[0xedc, 0xedf, 1], [0xf00, 0xf40, 64], [0xf41, 0xf47, 1], [0xf49, 0xf6c, 1], [0xf88, 0xf8c, 1], [0x1000, 0x102a, 1], [0x103f, 0x1050, 17],
		[0x1051, 0x1055, 1], [0x105a, 0x105d, 1], [0x1061, 0x1065, 4], [0x1066, 0x106e, 8], [0x106f, 0x1070, 1], [0x1075, 0x1081, 1], [0x108e, 0x1100, 114],
		[0x1101, 0x1248, 1], [0x124a, 0x124d, 1], [0x1250, 0x1256, 1], [0x1258, 0x125a, 2], [0x125b, 0x125d, 1], [0x1260, 0x1288, 1], [0x128a, 0x128d, 1],
		[0x1290, 0x12b0, 1], [0x12b2, 0x12b5, 1], [0x12b8, 0x12be, 1], [0x12c0, 0x12c2, 2], [0x12c3, 0x12c5, 1], [0x12c8, 0x12d6, 1], [0x12d8, 0x1310, 1],
		[0x1312, 0x1315, 1], [0x1318, 0x135a, 1], [0x1380, 0x138f, 1], [0x1401, 0x166c, 1], [0x166f, 0x167f, 1], [0x1681, 0x169a, 1], [0x16a0, 0x16ea, 1],
		[0x16f1, 0x16f8, 1], [0x1700, 0x1711, 1], [0x171f, 0x1731, 1], [0x1740, 0x1751, 1], [0x1760, 0x176c, 1], [0x176e, 0x1770, 1], [0x1780, 0x17b3, 1],
		[0x17dc, 0x1820, 68], [0x1821, 0x1842, 1], [0x1844, 0x1878, 1], [0x1880, 0x1884, 1], [0x1887, 0x18a8, 1], [0x18aa, 0x18b0, 6], [0x18b1, 0x18f5, 1],
		[0x1900, 0x191e, 1], [0x1950, 0x196d, 1], [0x1970, 0x1974, 1], [0x1980, 0x19ab, 1], [0x19b0, 0x19c9, 1], [0x1a00, 0x1a16, 1], [0x1a20, 0x1a54, 1],
		[0x1b05, 0x1b33, 1], [0x1b45, 0x1b4c, 1], [0x1b83, 0x1ba0, 1], [0x1bae, 0x1baf, 1], [0x1bba, 0x1be5, 1], [0x1c00, 0x1c23, 1], [0x1c4d, 0x1c4f, 1],
		[0x1c5a, 0x1c77, 1], [0x1ce9, 0x1cec, 1], [0x1cee, 0x1cf3, 1], [0x1cf5, 0x1cf6, 1], [0x1cfa, 0x2135, 1083], [0x2136, 0x2138, 1], [0x2d30, 0x2d67, 1],
		[0x2d80, 0x2d96, 1], [0x2da0, 0x2da6, 1], [0x2da8, 0x2dae, 1], [0x2db0, 0x2db6, 1], [0x2db8, 0x2dbe, 1], [0x2dc0, 0x2dc6, 1], [0x2dc8, 0x2dce, 1],
		[0x2dd0, 0x2dd6, 1], [0x2dd8, 0x2dde, 1], [0x3006, 0x303c, 54], [0x3041, 0x3096, 1], [0x309f, 0x30a1, 2], [0x30a2, 0x30fa, 1], [0x30ff, 0x3105, 6],
		[0x3106, 0x312f, 1], [0x3131, 0x318e, 1], [0x31a0, 0x31bf, 1], [0x31f0, 0x31ff, 1], [0x3400, 0x4dbf, 1], [0x4e00, 0xa014, 1], [0xa016, 0xa48c, 1],
		[0xa4d0, 0xa4f7, 1], [0xa500, 0xa60b, 1], [0xa610, 0xa61f, 1], [0xa62a, 0xa62b, 1], [0xa66e, 0xa6a0, 50], [0xa6a1, 0xa6e5, 1], [0xa78f, 0xa7f7, 104],
		[0xa7fb, 0xa801, 1], [0xa803, 0xa805, 1], [0xa807, 0xa80a, 1], [0xa80c, 0xa822, 1], [0xa840, 0xa873, 1], [0xa882, 0xa8b3, 1], [0xa8f2, 0xa8f7, 1],
		[0xa8fb, 0xa8fd, 2], [0xa8fe, 0xa90a, 12], [0xa90b, 0xa925, 1], [0xa930, 0xa946, 1], [0xa960, 0xa97c, 1], [0xa984, 0xa9b2, 1], [0xa9e0, 0xa9e4, 1],
		[0xa9e7, 0xa9ef, 1], [0xa9fa, 0xa9fe, 1], [0xaa00, 0xaa28, 1], [0xaa40, 0xaa42, 1], [0xaa44, 0xaa4b, 1], [0xaa60, 0xaa6f, 1], [0xaa71, 0xaa76, 1],
		[0xaa7a, 0xaa7e, 4], [0xaa7f, 0xaaaf, 1], [0xaab1, 0xaab5, 4], [0xaab6, 0xaab9, 3], [0xaaba, 0xaabd, 1], [0xaac0, 0xaac2, 2], [0xaadb, 0xaadc, 1],
		[0xaae0, 0xaaea, 1], [0xaaf2, 0xab01, 15], [0xab02, 0xab06, 1], [0xab09, 0xab0e, 1], [0xab11, 0xab16, 1], [0xab20, 0xab26, 1], [0xab28, 0xab2e, 1],
		[0xabc0, 0xabe2, 1], [0xac00, 0xd7a3, 1], [0xd7b0, 0xd7c6, 1], [0xd7cb, 0xd7fb, 1], [0xf900, 0xfa6d, 1], [0xfa70, 0xfad9, 1], [0xfb1d, 0xfb1f, 2],
		[0xfb20, 0xfb28, 1], [0xfb2a, 0xfb36, 1], [0xfb38, 0xfb3c, 1], [0xfb3e, 0xfb40, 2], [0xfb41, 0xfb43, 2], [0xfb44, 0xfb46, 2], [0xfb47, 0xfbb1, 1],
		[0xfbd3, 0xfd3d, 1], [0xfd50, 0xfd8f, 1], [0xfd92, 0xfdc7, 1], [0xfdf0, 0xfdfb, 1], [0xfe70, 0xfe74, 1], [0xfe76, 0xfefc, 1], [0xff66, 0xff6f, 1],
		[0xff71, 0xff9d, 1], [0xffa0, 0xffbe, 1], [0xffc2, 0xffc7, 1], [0xffca, 0xffcf, 1], [0xffd2, 0xffd7, 1], [0xffda, 0xffdc, 1],
	],
	R32: [
		[0x10000, 0x1000b, 1], [0x1000d, 0x10026, 1], [0x10028, 0x1003a, 1], [0x1003c, 0x1003d, 1], [0x1003f, 0x1004d, 1], [0x10050, 0x1005d, 1],
		[0x10080, 0x100fa, 1], [0x10280, 0x1029c, 1], [0x102a0, 0x102d0, 1], [0x10300, 0x1031f, 1], [0x1032d, 0x10340, 1], [0x10342, 0x10349, 1],
		[0x10350, 0x10375, 1], [0x10380, 0x1039d, 1], [0x103a0, 0x103c3, 1], [0x103c8, 0x103cf, 1], [0x10450, 0x1049d, 1], [0x10500, 0x10527, 1],
		[0x10530, 0x10563, 1], [0x10600, 0x10736, 1], [0x10740, 0x10755, 1], [0x10760, 0x10767, 1], [0x10800, 0x10805, 1], [0x10808, 0x1080a, 2],
		[0x1080b, 0x10835, 1], [0x10837, 0x10838, 1], [0x1083c, 0x1083f, 3], [0x10840, 0x10855, 1], [0x10860, 0x10876, 1], [0x10880, 0x1089e, 1],
		[0x108e0, 0x108f2, 1], [0x108f4, 0x108f5, 1], [0x10900, 0x10915, 1], [0x10920, 0x10939, 1], [0x10980, 0x109b7, 1], [0x109be, 0x109bf, 1],
		[0x10a00, 0x10a10, 16], [0x10a11, 0x10a13, 1], [0x10a15, 0x10a17, 1], [0x10a19, 0x10a35, 1], [0x10a60, 0x10a7c, 1], [0x10a80, 0x10a9c, 1],
		[0x10ac0, 0x10ac7, 1], [0x10ac9, 0x10ae4, 1], [0x10b00, 0x10b35, 1], [0x10b40, 0x10b55, 1], [0x10b60, 0x10b72, 1], [0x10b80, 0x10b91, 1],
		[0x10c00, 0x10c48, 1], [0x10d00, 0x10d23, 1], [0x10e80, 0x10ea9, 1], [0x10eb0, 0x10eb1, 1], [0x10f00, 0x10f1c, 1], [0x10f27, 0x10f30, 9],
		[0x10f31, 0x10f45, 1], [0x10f70, 0x10f81, 1], [0x10fb0, 0x10fc4, 1], [0x10fe0, 0x10ff6, 1], [0x11003, 0x11037, 1], [0x11071, 0x11072, 1],
		[0x11075, 0x11083, 14], [0x11084, 0x110af, 1], [0x110d0, 0x110e8, 1], [0x11103, 0x11126, 1], [0x11144, 0x11147, 3], [0x11150, 0x11172, 1],
		[0x11176, 0x11183, 13], [0x11184, 0x111b2, 1], [0x111c1, 0x111c4, 1], [0x111da, 0x111dc, 2], [0x11200, 0x11211, 1], [0x11213, 0x1122b, 1],
		[0x1123f, 0x11240, 1], [0x11280, 0x11286, 1], [0x11288, 0x1128a, 2], [0x1128b, 0x1128d, 1], [0x1128f, 0x1129d, 1], [0x1129f, 0x112a8, 1],
		[0x112b0, 0x112de, 1], [0x11305, 0x1130c, 1], [0x1130f, 0x11310, 1], [0x11313, 0x11328, 1], [0x1132a, 0x11330, 1], [0x11332, 0x11333, 1],
		[0x11335, 0x11339, 1], [0x1133d, 0x11350, 19], [0x1135d, 0x11361, 1], [0x11400, 0x11434, 1], [0x11447, 0x1144a, 1], [0x1145f, 0x11461, 1],
		[0x11480, 0x114af, 1], [0x114c4, 0x114c5, 1], [0x114c7, 0x11580, 185], [0x11581, 0x115ae, 1], [0x115d8, 0x115db, 1], [0x11600, 0x1162f, 1],
		[0x11644, 0x11680, 60], [0x11681, 0x116aa, 1], [0x116b8, 0x11700, 72], [0x11701, 0x1171a, 1], [0x11740, 0x11746, 1], [0x11800, 0x1182b, 1],
		[0x118ff, 0x11906, 1], [0x11909, 0x1190c, 3], [0x1190d, 0x11913, 1], [0x11915, 0x11916, 1], [0x11918, 0x1192f, 1], [0x1193f, 0x11941, 2],
		[0x119a0, 0x119a7, 1], [0x119aa, 0x119d0, 1], [0x119e1, 0x119e3, 2], [0x11a00, 0x11a0b, 11], [0x11a0c, 0x11a32, 1], [0x11a3a, 0x11a50, 22],
		[0x11a5c, 0x11a89, 1], [0x11a9d, 0x11ab0, 19], [0x11ab1, 0x11af8, 1], [0x11c00, 0x11c08, 1], [0x11c0a, 0x11c2e, 1], [0x11c40, 0x11c72, 50],
		[0x11c73, 0x11c8f, 1], [0x11d00, 0x11d06, 1], [0x11d08, 0x11d09, 1], [0x11d0b, 0x11d30, 1], [0x11d46, 0x11d60, 26], [0x11d61, 0x11d65, 1],
		[0x11d67, 0x11d68, 1], [0x11d6a, 0x11d89, 1], [0x11d98, 0x11ee0, 328], [0x11ee1, 0x11ef2, 1], [0x11f02, 0x11f04, 2], [0x11f05, 0x11f10, 1],
		[0x11f12, 0x11f33, 1], [0x11fb0, 0x12000, 80], [0x12001, 0x12399, 1], [0x12480, 0x12543, 1], [0x12f90, 0x12ff0, 1], [0x13000, 0x1342f, 1],
		[0x13441, 0x13446, 1], [0x14400, 0x14646, 1], [0x16800, 0x16a38, 1], [0x16a40, 0x16a5e, 1], [0x16a70, 0x16abe, 1], [0x16ad0, 0x16aed, 1],
		[0x16b00, 0x16b2f, 1], [0x16b63, 0x16b77, 1], [0x16b7d, 0x16b8f, 1], [0x16f00, 0x16f4a, 1], [0x16f50, 0x17000, 176], [0x17001, 0x187f7, 1],
		[0x18800, 0x18cd5, 1], [0x18d00, 0x18d08, 1], [0x1b000, 0x1b122, 1], [0x1b132, 0x1b150, 30], [0x1b151, 0x1b152, 1], [0x1b155, 0x1b164, 15],
		[0x1b165, 0x1b167, 1], [0x1b170, 0x1b2fb, 1], [0x1bc00, 0x1bc6a, 1], [0x1bc70, 0x1bc7c, 1], [0x1bc80, 0x1bc88, 1], [0x1bc90, 0x1bc99, 1],
		[0x1df0a, 0x1e100, 502], [0x1e101, 0x1e12c, 1], [0x1e14e, 0x1e290, 322], [0x1e291, 0x1e2ad, 1], [0x1e2c0, 0x1e2eb, 1], [0x1e4d0, 0x1e4ea, 1],
		[0x1e7e0, 0x1e7e6, 1], [0x1e7e8, 0x1e7eb, 1], [0x1e7ed, 0x1e7ee, 1], [0x1e7f0, 0x1e7fe, 1], [0x1e800, 0x1e8c4, 1], [0x1ee00, 0x1ee03, 1],
		[0x1ee05, 0x1ee1f, 1], [0x1ee21, 0x1ee22, 1], [0x1ee24, 0x1ee27, 3], [0x1ee29, 0x1ee32, 1], [0x1ee34, 0x1ee37, 1], [0x1ee39, 0x1ee3b, 2],
		[0x1ee42, 0x1ee47, 5], [0x1ee49, 0x1ee4d, 2], [0x1ee4e, 0x1ee4f, 1], [0x1ee51, 0x1ee52, 1], [0x1ee54, 0x1ee57, 3], [0x1ee59, 0x1ee61, 2],
		[0x1ee62, 0x1ee64, 2], [0x1ee67, 0x1ee6a, 1], [0x1ee6c, 0x1ee72, 1], [0x1ee74, 0x1ee77, 1], [0x1ee79, 0x1ee7c, 1], [0x1ee7e, 0x1ee80, 2],
		[0x1ee81, 0x1ee89, 1], [0x1ee8b, 0x1ee9b, 1], [0x1eea1, 0x1eea3, 1], [0x1eea5, 0x1eea9, 1], [0x1eeab, 0x1eebb, 1], [0x20000, 0x2a6df, 1],
		[0x2a700, 0x2b739, 1], [0x2b740, 0x2b81d, 1], [0x2b820, 0x2cea1, 1], [0x2ceb0, 0x2ebe0, 1], [0x2f800, 0x2fa1d, 1], [0x30000, 0x3134a, 1],
		[0x31350, 0x323af, 1],
	],
	LatinOffset: 2,
}

private var _Mc:RangeTable = {
	R16: [
		[0x903, 0x93b, 56], [0x93e, 0x940, 1], [0x949, 0x94c, 1], [0x94e, 0x94f, 1], [0x982, 0x983, 1], [0x9be, 0x9c0, 1], [0x9c7, 0x9c8, 1],
		[0x9cb, 0x9cc, 1], [0x9d7, 0xa03, 44], [0xa3e, 0xa40, 1], [0xa83, 0xabe, 59], [0xabf, 0xac0, 1], [0xac9, 0xacb, 2], [0xacc, 0xb02, 54],
		[0xb03, 0xb3e, 59], [0xb40, 0xb47, 7], [0xb48, 0xb4b, 3], [0xb4c, 0xb57, 11], [0xbbe, 0xbbf, 1], [0xbc1, 0xbc2, 1], [0xbc6, 0xbc8, 1],
		[0xbca, 0xbcc, 1], [0xbd7, 0xc01, 42], [0xc02, 0xc03, 1], [0xc41, 0xc44, 1], [0xc82, 0xc83, 1], [0xcbe, 0xcc0, 2], [0xcc1, 0xcc4, 1],
		[0xcc7, 0xcc8, 1], [0xcca, 0xccb, 1], [0xcd5, 0xcd6, 1], [0xcf3, 0xd02, 15], [0xd03, 0xd3e, 59], [0xd3f, 0xd40, 1], [0xd46, 0xd48, 1],
		[0xd4a, 0xd4c, 1], [0xd57, 0xd82, 43], [0xd83, 0xdcf, 76], [0xdd0, 0xdd1, 1], [0xdd8, 0xddf, 1], [0xdf2, 0xdf3, 1], [0xf3e, 0xf3f, 1],
		[0xf7f, 0x102b, 172], [0x102c, 0x1031, 5], [0x1038, 0x103b, 3], [0x103c, 0x1056, 26], [0x1057, 0x1062, 11], [0x1063, 0x1064, 1], [0x1067, 0x106d, 1],
		[0x1083, 0x1084, 1], [0x1087, 0x108c, 1], [0x108f, 0x109a, 11], [0x109b, 0x109c, 1], [0x1715, 0x1734, 31], [0x17b6, 0x17be, 8], [0x17bf, 0x17c5, 1],
		[0x17c7, 0x17c8, 1], [0x1923, 0x1926, 1], [0x1929, 0x192b, 1], [0x1930, 0x1931, 1], [0x1933, 0x1938, 1], [0x1a19, 0x1a1a, 1], [0x1a55, 0x1a57, 2],
		[0x1a61, 0x1a63, 2], [0x1a64, 0x1a6d, 9], [0x1a6e, 0x1a72, 1], [0x1b04, 0x1b35, 49], [0x1b3b, 0x1b3d, 2], [0x1b3e, 0x1b41, 1], [0x1b43, 0x1b44, 1],
		[0x1b82, 0x1ba1, 31], [0x1ba6, 0x1ba7, 1], [0x1baa, 0x1be7, 61], [0x1bea, 0x1bec, 1], [0x1bee, 0x1bf2, 4], [0x1bf3, 0x1c24, 49], [0x1c25, 0x1c2b, 1],
		[0x1c34, 0x1c35, 1], [0x1ce1, 0x1cf7, 22], [0x302e, 0x302f, 1], [0xa823, 0xa824, 1], [0xa827, 0xa880, 89], [0xa881, 0xa8b4, 51], [0xa8b5, 0xa8c3, 1],
		[0xa952, 0xa953, 1], [0xa983, 0xa9b4, 49], [0xa9b5, 0xa9ba, 5], [0xa9bb, 0xa9be, 3], [0xa9bf, 0xa9c0, 1], [0xaa2f, 0xaa30, 1], [0xaa33, 0xaa34, 1],
		[0xaa4d, 0xaa7b, 46], [0xaa7d, 0xaaeb, 110], [0xaaee, 0xaaef, 1], [0xaaf5, 0xabe3, 238], [0xabe4, 0xabe6, 2], [0xabe7, 0xabe9, 2], [0xabea, 0xabec, 2],
	],
	R32: [
		[0x11000, 0x11002, 2], [0x11082, 0x110b0, 46], [0x110b1, 0x110b2, 1], [0x110b7, 0x110b8, 1], [0x1112c, 0x11145, 25], [0x11146, 0x11182, 60],
		[0x111b3, 0x111b5, 1], [0x111bf, 0x111c0, 1], [0x111ce, 0x1122c, 94], [0x1122d, 0x1122e, 1], [0x11232, 0x11233, 1], [0x11235, 0x112e0, 171],
		[0x112e1, 0x112e2, 1], [0x11302, 0x11303, 1], [0x1133e, 0x1133f, 1], [0x11341, 0x11344, 1], [0x11347, 0x11348, 1], [0x1134b, 0x1134d, 1],
		[0x11357, 0x11362, 11], [0x11363, 0x11435, 210], [0x11436, 0x11437, 1], [0x11440, 0x11441, 1], [0x11445, 0x114b0, 107], [0x114b1, 0x114b2, 1],
		[0x114b9, 0x114bb, 2], [0x114bc, 0x114be, 1], [0x114c1, 0x115af, 238], [0x115b0, 0x115b1, 1], [0x115b8, 0x115bb, 1], [0x115be, 0x11630, 114],
		[0x11631, 0x11632, 1], [0x1163b, 0x1163c, 1], [0x1163e, 0x116ac, 110], [0x116ae, 0x116af, 1], [0x116b6, 0x11720, 106], [0x11721, 0x11726, 5],
		[0x1182c, 0x1182e, 1], [0x11838, 0x11930, 248], [0x11931, 0x11935, 1], [0x11937, 0x11938, 1], [0x1193d, 0x11940, 3], [0x11942, 0x119d1, 143],
		[0x119d2, 0x119d3, 1], [0x119dc, 0x119df, 1], [0x119e4, 0x11a39, 85], [0x11a57, 0x11a58, 1], [0x11a97, 0x11c2f, 408], [0x11c3e, 0x11ca9, 107],
		[0x11cb1, 0x11cb4, 3], [0x11d8a, 0x11d8e, 1], [0x11d93, 0x11d94, 1], [0x11d96, 0x11ef5, 351], [0x11ef6, 0x11f03, 13], [0x11f34, 0x11f35, 1],
		[0x11f3e, 0x11f3f, 1], [0x11f41, 0x16f51, 20496], [0x16f52, 0x16f87, 1], [0x16ff0, 0x16ff1, 1], [0x1d165, 0x1d166, 1], [0x1d16d, 0x1d172, 1],
	],
	LatinOffset: 2,
}

private var _Me:RangeTable = {
	R16: [
		[0x488, 0x489, 1],
		[0x1abe, 0x20dd, 1567],
		[0x20de, 0x20e0, 1],
		[0x20e2, 0x20e4, 1],
		[0xa670, 0xa672, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Nl:RangeTable = {
	R16: [
		[0x16ee, 0x16f0, 1],
		[0x2160, 0x2182, 1],
		[0x2185, 0x2188, 1],
		[0x3007, 0x3021, 26],
		[0x3022, 0x3029, 1],
		[0x3038, 0x303a, 1],
		[0xa6e6, 0xa6ef, 1],
	],
	R32: [
		[0x10140, 0x10174, 1],
		[0x10341, 0x1034a, 9],
		[0x103d1, 0x103d5, 1],
		[0x12400, 0x1246e, 1],
	],
	LatinOffset: 2,
}

private var _Zs:RangeTable = {
	R16: [
		[0x20, 0xa0, 128],
		[0x1680, 0x2000, 2432],
		[0x2001, 0x200a, 1],
		[0x202f, 0x205f, 48],
		[0x3000, 0x3000, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Cc:RangeTable = {
	R16: [[0x0, 0x1f, 1], [0x7f, 0x9f, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Lu:RangeTable = {
	R16: [
		[0x41, 0x5a, 1], [0xc0, 0xd6, 1], [0xd8, 0xde, 1], [0x100, 0x136, 2], [0x139, 0x147, 2], [0x14a, 0x178, 2], [0x179, 0x17d, 2], [0x181, 0x182, 1],
		[0x184, 0x186, 2], [0x187, 0x189, 2], [0x18a, 0x18b, 1], [0x18e, 0x191, 1], [0x193, 0x194, 1], [0x196, 0x198, 1], [0x19c, 0x19d, 1],
		[0x19f, 0x1a0, 1], [0x1a2, 0x1a6, 2], [0x1a7, 0x1a9, 2], [0x1ac, 0x1ae, 2], [0x1af, 0x1b1, 2], [0x1b2, 0x1b3, 1], [0x1b5, 0x1b7, 2],
		[0x1b8, 0x1bc, 4], [0x1c4, 0x1cd, 3], [0x1cf, 0x1db, 2], [0x1de, 0x1ee, 2], [0x1f1, 0x1f4, 3], [0x1f6, 0x1f8, 1], [0x1fa, 0x232, 2],
		[0x23a, 0x23b, 1], [0x23d, 0x23e, 1], [0x241, 0x243, 2], [0x244, 0x246, 1], [0x248, 0x24e, 2], [0x370, 0x372, 2], [0x376, 0x37f, 9],
		[0x386, 0x388, 2], [0x389, 0x38a, 1], [0x38c, 0x38e, 2], [0x38f, 0x391, 2], [0x392, 0x3a1, 1], [0x3a3, 0x3ab, 1], [0x3cf, 0x3d2, 3],
		[0x3d3, 0x3d4, 1], [0x3d8, 0x3ee, 2], [0x3f4, 0x3f7, 3], [0x3f9, 0x3fa, 1], [0x3fd, 0x42f, 1], [0x460, 0x480, 2], [0x48a, 0x4c0, 2],
		[0x4c1, 0x4cd, 2], [0x4d0, 0x52e, 2], [0x531, 0x556, 1], [0x10a0, 0x10c5, 1], [0x10c7, 0x10cd, 6], [0x13a0, 0x13f5, 1], [0x1c90, 0x1cba, 1],
		[0x1cbd, 0x1cbf, 1], [0x1e00, 0x1e94, 2], [0x1e9e, 0x1efe, 2], [0x1f08, 0x1f0f, 1], [0x1f18, 0x1f1d, 1], [0x1f28, 0x1f2f, 1], [0x1f38, 0x1f3f, 1],
		[0x1f48, 0x1f4d, 1], [0x1f59, 0x1f5f, 2], [0x1f68, 0x1f6f, 1], [0x1fb8, 0x1fbb, 1], [0x1fc8, 0x1fcb, 1], [0x1fd8, 0x1fdb, 1], [0x1fe8, 0x1fec, 1],
		[0x1ff8, 0x1ffb, 1], [0x2102, 0x2107, 5], [0x210b, 0x210d, 1], [0x2110, 0x2112, 1], [0x2115, 0x2119, 4], [0x211a, 0x211d, 1], [0x2124, 0x212a, 2],
		[0x212b, 0x212d, 1], [0x2130, 0x2133, 1], [0x213e, 0x213f, 1], [0x2145, 0x2183, 62], [0x2c00, 0x2c2f, 1], [0x2c60, 0x2c62, 2], [0x2c63, 0x2c64, 1],
		[0x2c67, 0x2c6d, 2], [0x2c6e, 0x2c70, 1], [0x2c72, 0x2c75, 3], [0x2c7e, 0x2c80, 1], [0x2c82, 0x2ce2, 2], [0x2ceb, 0x2ced, 2], [0x2cf2, 0xa640, 31054],
		[0xa642, 0xa66c, 2], [0xa680, 0xa69a, 2], [0xa722, 0xa72e, 2], [0xa732, 0xa76e, 2], [0xa779, 0xa77d, 2], [0xa77e, 0xa786, 2], [0xa78b, 0xa78d, 2],
		[0xa790, 0xa792, 2], [0xa796, 0xa7aa, 2], [0xa7ab, 0xa7ae, 1], [0xa7b0, 0xa7b4, 1], [0xa7b6, 0xa7c4, 2], [0xa7c5, 0xa7c7, 1], [0xa7c9, 0xa7d0, 7],
		[0xa7d6, 0xa7d8, 2], [0xa7f5, 0xff21, 22316], [0xff22, 0xff3a, 1],
	],
	R32: [
		[0x10400, 0x10427, 1], [0x104b0, 0x104d3, 1], [0x10570, 0x1057a, 1], [0x1057c, 0x1058a, 1], [0x1058c, 0x10592, 1], [0x10594, 0x10595, 1],
		[0x10c80, 0x10cb2, 1], [0x118a0, 0x118bf, 1], [0x16e40, 0x16e5f, 1], [0x1d400, 0x1d419, 1], [0x1d434, 0x1d44d, 1], [0x1d468, 0x1d481, 1],
		[0x1d49c, 0x1d49e, 2], [0x1d49f, 0x1d4a5, 3], [0x1d4a6, 0x1d4a9, 3], [0x1d4aa, 0x1d4ac, 1], [0x1d4ae, 0x1d4b5, 1], [0x1d4d0, 0x1d4e9, 1],
		[0x1d504, 0x1d505, 1], [0x1d507, 0x1d50a, 1], [0x1d50d, 0x1d514, 1], [0x1d516, 0x1d51c, 1], [0x1d538, 0x1d539, 1], [0x1d53b, 0x1d53e, 1],
		[0x1d540, 0x1d544, 1], [0x1d546, 0x1d54a, 4], [0x1d54b, 0x1d550, 1], [0x1d56c, 0x1d585, 1], [0x1d5a0, 0x1d5b9, 1], [0x1d5d4, 0x1d5ed, 1],
		[0x1d608, 0x1d621, 1], [0x1d63c, 0x1d655, 1], [0x1d670, 0x1d689, 1], [0x1d6a8, 0x1d6c0, 1], [0x1d6e2, 0x1d6fa, 1], [0x1d71c, 0x1d734, 1],
		[0x1d756, 0x1d76e, 1], [0x1d790, 0x1d7a8, 1], [0x1d7ca, 0x1e900, 4406], [0x1e901, 0x1e921, 1],
	],
	LatinOffset: 2,
}

private var _Sm:RangeTable = {
	R16: [
		[0x2b, 0x3c, 17], [0x3d, 0x3e, 1], [0x7c, 0x7e, 2], [0xac, 0xb1, 5], [0xd7, 0xf7, 32], [0x3f6, 0x606, 528], [0x607, 0x608, 1], [0x2044, 0x2052, 14],
		[0x207a, 0x207c, 1], [0x208a, 0x208c, 1], [0x2118, 0x2140, 40], [0x2141, 0x2144, 1], [0x214b, 0x2190, 69], [0x2191, 0x2194, 1], [0x219a, 0x219b, 1],
		[0x21a0, 0x21a6, 3], [0x21ae, 0x21ce, 32], [0x21cf, 0x21d2, 3], [0x21d4, 0x21f4, 32], [0x21f5, 0x22ff, 1], [0x2320, 0x2321, 1], [0x237c, 0x239b, 31],
		[0x239c, 0x23b3, 1], [0x23dc, 0x23e1, 1], [0x25b7, 0x25c1, 10], [0x25f8, 0x25ff, 1], [0x266f, 0x27c0, 337], [0x27c1, 0x27c4, 1], [0x27c7, 0x27e5, 1],
		[0x27f0, 0x27ff, 1], [0x2900, 0x2982, 1], [0x2999, 0x29d7, 1], [0x29dc, 0x29fb, 1], [0x29fe, 0x2aff, 1], [0x2b30, 0x2b44, 1], [0x2b47, 0x2b4c, 1],
		[0xfb29, 0xfe62, 825], [0xfe64, 0xfe66, 1], [0xff0b, 0xff1c, 17], [0xff1d, 0xff1e, 1], [0xff5c, 0xff5e, 2], [0xffe2, 0xffe9, 7], [0xffea, 0xffec, 1],
	],
	R32: [
		[0x1d6c1, 0x1d6db, 26],
		[0x1d6fb, 0x1d715, 26],
		[0x1d735, 0x1d74f, 26],
		[0x1d76f, 0x1d789, 26],
		[0x1d7a9, 0x1d7c3, 26],
		[0x1eef0, 0x1eef1, 1],
	],
	LatinOffset: 2,
}

private var _Cs:RangeTable = {
	R16: [[0xd800, 0xdfff, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _N:RangeTable = {
	R16: [
		[0x30, 0x39, 1], [0xb2, 0xb3, 1], [0xb9, 0xbc, 3], [0xbd, 0xbe, 1], [0x660, 0x669, 1], [0x6f0, 0x6f9, 1], [0x7c0, 0x7c9, 1], [0x966, 0x96f, 1],
		[0x9e6, 0x9ef, 1], [0x9f4, 0x9f9, 1], [0xa66, 0xa6f, 1], [0xae6, 0xaef, 1], [0xb66, 0xb6f, 1], [0xb72, 0xb77, 1], [0xbe6, 0xbf2, 1],
		[0xc66, 0xc6f, 1], [0xc78, 0xc7e, 1], [0xce6, 0xcef, 1], [0xd58, 0xd5e, 1], [0xd66, 0xd78, 1], [0xde6, 0xdef, 1], [0xe50, 0xe59, 1],
		[0xed0, 0xed9, 1], [0xf20, 0xf33, 1], [0x1040, 0x1049, 1], [0x1090, 0x1099, 1], [0x1369, 0x137c, 1], [0x16ee, 0x16f0, 1], [0x17e0, 0x17e9, 1],
		[0x17f0, 0x17f9, 1], [0x1810, 0x1819, 1], [0x1946, 0x194f, 1], [0x19d0, 0x19da, 1], [0x1a80, 0x1a89, 1], [0x1a90, 0x1a99, 1], [0x1b50, 0x1b59, 1],
		[0x1bb0, 0x1bb9, 1], [0x1c40, 0x1c49, 1], [0x1c50, 0x1c59, 1], [0x2070, 0x2074, 4], [0x2075, 0x2079, 1], [0x2080, 0x2089, 1], [0x2150, 0x2182, 1],
		[0x2185, 0x2189, 1], [0x2460, 0x249b, 1], [0x24ea, 0x24ff, 1], [0x2776, 0x2793, 1], [0x2cfd, 0x3007, 778], [0x3021, 0x3029, 1], [0x3038, 0x303a, 1],
		[0x3192, 0x3195, 1], [0x3220, 0x3229, 1], [0x3248, 0x324f, 1], [0x3251, 0x325f, 1], [0x3280, 0x3289, 1], [0x32b1, 0x32bf, 1], [0xa620, 0xa629, 1],
		[0xa6e6, 0xa6ef, 1], [0xa830, 0xa835, 1], [0xa8d0, 0xa8d9, 1], [0xa900, 0xa909, 1], [0xa9d0, 0xa9d9, 1], [0xa9f0, 0xa9f9, 1], [0xaa50, 0xaa59, 1],
		[0xabf0, 0xabf9, 1], [0xff10, 0xff19, 1],
	],
	R32: [
		[0x10107, 0x10133, 1], [0x10140, 0x10178, 1], [0x1018a, 0x1018b, 1], [0x102e1, 0x102fb, 1], [0x10320, 0x10323, 1], [0x10341, 0x1034a, 9],
		[0x103d1, 0x103d5, 1], [0x104a0, 0x104a9, 1], [0x10858, 0x1085f, 1], [0x10879, 0x1087f, 1], [0x108a7, 0x108af, 1], [0x108fb, 0x108ff, 1],
		[0x10916, 0x1091b, 1], [0x109bc, 0x109bd, 1], [0x109c0, 0x109cf, 1], [0x109d2, 0x109ff, 1], [0x10a40, 0x10a48, 1], [0x10a7d, 0x10a7e, 1],
		[0x10a9d, 0x10a9f, 1], [0x10aeb, 0x10aef, 1], [0x10b58, 0x10b5f, 1], [0x10b78, 0x10b7f, 1], [0x10ba9, 0x10baf, 1], [0x10cfa, 0x10cff, 1],
		[0x10d30, 0x10d39, 1], [0x10e60, 0x10e7e, 1], [0x10f1d, 0x10f26, 1], [0x10f51, 0x10f54, 1], [0x10fc5, 0x10fcb, 1], [0x11052, 0x1106f, 1],
		[0x110f0, 0x110f9, 1], [0x11136, 0x1113f, 1], [0x111d0, 0x111d9, 1], [0x111e1, 0x111f4, 1], [0x112f0, 0x112f9, 1], [0x11450, 0x11459, 1],
		[0x114d0, 0x114d9, 1], [0x11650, 0x11659, 1], [0x116c0, 0x116c9, 1], [0x11730, 0x1173b, 1], [0x118e0, 0x118f2, 1], [0x11950, 0x11959, 1],
		[0x11c50, 0x11c6c, 1], [0x11d50, 0x11d59, 1], [0x11da0, 0x11da9, 1], [0x11f50, 0x11f59, 1], [0x11fc0, 0x11fd4, 1], [0x12400, 0x1246e, 1],
		[0x16a60, 0x16a69, 1], [0x16ac0, 0x16ac9, 1], [0x16b50, 0x16b59, 1], [0x16b5b, 0x16b61, 1], [0x16e80, 0x16e96, 1], [0x1d2c0, 0x1d2d3, 1],
		[0x1d2e0, 0x1d2f3, 1], [0x1d360, 0x1d378, 1], [0x1d7ce, 0x1d7ff, 1], [0x1e140, 0x1e149, 1], [0x1e2f0, 0x1e2f9, 1], [0x1e4f0, 0x1e4f9, 1],
		[0x1e8c7, 0x1e8cf, 1], [0x1e950, 0x1e959, 1], [0x1ec71, 0x1ecab, 1], [0x1ecad, 0x1ecaf, 1], [0x1ecb1, 0x1ecb4, 1], [0x1ed01, 0x1ed2d, 1],
		[0x1ed2f, 0x1ed3d, 1], [0x1f100, 0x1f10c, 1], [0x1fbf0, 0x1fbf9, 1],
	],
	LatinOffset: 2,
}

private var _Pc:RangeTable = {
	R16: [
		[0x5f, 0x203f, 8160],
		[0x2040, 0x2054, 20],
		[0xfe33, 0xfe34, 1],
		[0xfe4d, 0xfe4f, 1],
		[0xff3f, 0xff3f, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Po:RangeTable = {
	R16: [
		[0x21, 0x23, 1], [0x25, 0x27, 1], [0x2a, 0x2e, 2], [0x2f, 0x3a, 11], [0x3b, 0x3f, 4], [0x40, 0x5c, 28], [0xa1, 0xa7, 6], [0xb6, 0xb7, 1],
		[0xbf, 0x37e, 703], [0x387, 0x55a, 467], [0x55b, 0x55f, 1], [0x589, 0x5c0, 55], [0x5c3, 0x5c6, 3], [0x5f3, 0x5f4, 1], [0x609, 0x60a, 1],
		[0x60c, 0x60d, 1], [0x61b, 0x61d, 2], [0x61e, 0x61f, 1], [0x66a, 0x66d, 1], [0x6d4, 0x700, 44], [0x701, 0x70d, 1], [0x7f7, 0x7f9, 1],
		[0x830, 0x83e, 1], [0x85e, 0x964, 262], [0x965, 0x970, 11], [0x9fd, 0xa76, 121], [0xaf0, 0xc77, 391], [0xc84, 0xdf4, 368], [0xe4f, 0xe5a, 11],
		[0xe5b, 0xf04, 169], [0xf05, 0xf12, 1], [0xf14, 0xf85, 113], [0xfd0, 0xfd4, 1], [0xfd9, 0xfda, 1], [0x104a, 0x104f, 1], [0x10fb, 0x1360, 613],
		[0x1361, 0x1368, 1], [0x166e, 0x16eb, 125], [0x16ec, 0x16ed, 1], [0x1735, 0x1736, 1], [0x17d4, 0x17d6, 1], [0x17d8, 0x17da, 1], [0x1800, 0x1805, 1],
		[0x1807, 0x180a, 1], [0x1944, 0x1945, 1], [0x1a1e, 0x1a1f, 1], [0x1aa0, 0x1aa6, 1], [0x1aa8, 0x1aad, 1], [0x1b5a, 0x1b60, 1], [0x1b7d, 0x1b7e, 1],
		[0x1bfc, 0x1bff, 1], [0x1c3b, 0x1c3f, 1], [0x1c7e, 0x1c7f, 1], [0x1cc0, 0x1cc7, 1], [0x1cd3, 0x2016, 835], [0x2017, 0x2020, 9], [0x2021, 0x2027, 1],
		[0x2030, 0x2038, 1], [0x203b, 0x203e, 1], [0x2041, 0x2043, 1], [0x2047, 0x2051, 1], [0x2053, 0x2055, 2], [0x2056, 0x205e, 1], [0x2cf9, 0x2cfc, 1],
		[0x2cfe, 0x2cff, 1], [0x2d70, 0x2e00, 144], [0x2e01, 0x2e06, 5], [0x2e07, 0x2e08, 1], [0x2e0b, 0x2e0e, 3], [0x2e0f, 0x2e16, 1], [0x2e18, 0x2e19, 1],
		[0x2e1b, 0x2e1e, 3], [0x2e1f, 0x2e2a, 11], [0x2e2b, 0x2e2e, 1], [0x2e30, 0x2e39, 1], [0x2e3c, 0x2e3f, 1], [0x2e41, 0x2e43, 2], [0x2e44, 0x2e4f, 1],
		[0x2e52, 0x2e54, 1], [0x3001, 0x3003, 1], [0x303d, 0x30fb, 190], [0xa4fe, 0xa4ff, 1], [0xa60d, 0xa60f, 1], [0xa673, 0xa67e, 11], [0xa6f2, 0xa6f7, 1],
		[0xa874, 0xa877, 1], [0xa8ce, 0xa8cf, 1], [0xa8f8, 0xa8fa, 1], [0xa8fc, 0xa92e, 50], [0xa92f, 0xa95f, 48], [0xa9c1, 0xa9cd, 1], [0xa9de, 0xa9df, 1],
		[0xaa5c, 0xaa5f, 1], [0xaade, 0xaadf, 1], [0xaaf0, 0xaaf1, 1], [0xabeb, 0xfe10, 21029], [0xfe11, 0xfe16, 1], [0xfe19, 0xfe30, 23],
		[0xfe45, 0xfe46, 1], [0xfe49, 0xfe4c, 1], [0xfe50, 0xfe52, 1], [0xfe54, 0xfe57, 1], [0xfe5f, 0xfe61, 1], [0xfe68, 0xfe6a, 2], [0xfe6b, 0xff01, 150],
		[0xff02, 0xff03, 1], [0xff05, 0xff07, 1], [0xff0a, 0xff0e, 2], [0xff0f, 0xff1a, 11], [0xff1b, 0xff1f, 4], [0xff20, 0xff3c, 28], [0xff61, 0xff64, 3],
		[0xff65, 0xff65, 1],
	],
	R32: [
		[0x10100, 0x10102, 1], [0x1039f, 0x103d0, 49], [0x1056f, 0x10857, 744], [0x1091f, 0x1093f, 32], [0x10a50, 0x10a58, 1], [0x10a7f, 0x10af0, 113],
		[0x10af1, 0x10af6, 1], [0x10b39, 0x10b3f, 1], [0x10b99, 0x10b9c, 1], [0x10f55, 0x10f59, 1], [0x10f86, 0x10f89, 1], [0x11047, 0x1104d, 1],
		[0x110bb, 0x110bc, 1], [0x110be, 0x110c1, 1], [0x11140, 0x11143, 1], [0x11174, 0x11175, 1], [0x111c5, 0x111c8, 1], [0x111cd, 0x111db, 14],
		[0x111dd, 0x111df, 1], [0x11238, 0x1123d, 1], [0x112a9, 0x1144b, 418], [0x1144c, 0x1144f, 1], [0x1145a, 0x1145b, 1], [0x1145d, 0x114c6, 105],
		[0x115c1, 0x115d7, 1], [0x11641, 0x11643, 1], [0x11660, 0x1166c, 1], [0x116b9, 0x1173c, 131], [0x1173d, 0x1173e, 1], [0x1183b, 0x11944, 265],
		[0x11945, 0x11946, 1], [0x119e2, 0x11a3f, 93], [0x11a40, 0x11a46, 1], [0x11a9a, 0x11a9c, 1], [0x11a9e, 0x11aa2, 1], [0x11b00, 0x11b09, 1],
		[0x11c41, 0x11c45, 1], [0x11c70, 0x11c71, 1], [0x11ef7, 0x11ef8, 1], [0x11f43, 0x11f4f, 1], [0x11fff, 0x12470, 1137], [0x12471, 0x12474, 1],
		[0x12ff1, 0x12ff2, 1], [0x16a6e, 0x16a6f, 1], [0x16af5, 0x16b37, 66], [0x16b38, 0x16b3b, 1], [0x16b44, 0x16e97, 851], [0x16e98, 0x16e9a, 1],
		[0x16fe2, 0x1bc9f, 19645], [0x1da87, 0x1da8b, 1], [0x1e95e, 0x1e95f, 1],
	],
	LatinOffset: 2,
}

private var _Zp:RangeTable = {
	R16: [[0x2029, 0x2029, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Co:RangeTable = {
	R16: [[0xe000, 0xf8ff, 1],],
	R32: [[0xf0000, 0xffffd, 1], [0x100000, 0x10fffd, 1],],
	LatinOffset: 2,
}

private var _Lt:RangeTable = {
	R16: [
		[0x1c5, 0x1cb, 3],
		[0x1f2, 0x1f88, 7574],
		[0x1f89, 0x1f8f, 1],
		[0x1f98, 0x1f9f, 1],
		[0x1fa8, 0x1faf, 1],
		[0x1fbc, 0x1fcc, 16],
		[0x1ffc, 0x1ffc, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Nd:RangeTable = {
	R16: [
		[0x30, 0x39, 1], [0x660, 0x669, 1], [0x6f0, 0x6f9, 1], [0x7c0, 0x7c9, 1], [0x966, 0x96f, 1], [0x9e6, 0x9ef, 1], [0xa66, 0xa6f, 1], [0xae6, 0xaef, 1],
		[0xb66, 0xb6f, 1], [0xbe6, 0xbef, 1], [0xc66, 0xc6f, 1], [0xce6, 0xcef, 1], [0xd66, 0xd6f, 1], [0xde6, 0xdef, 1], [0xe50, 0xe59, 1],
		[0xed0, 0xed9, 1], [0xf20, 0xf29, 1], [0x1040, 0x1049, 1], [0x1090, 0x1099, 1], [0x17e0, 0x17e9, 1], [0x1810, 0x1819, 1], [0x1946, 0x194f, 1],
		[0x19d0, 0x19d9, 1], [0x1a80, 0x1a89, 1], [0x1a90, 0x1a99, 1], [0x1b50, 0x1b59, 1], [0x1bb0, 0x1bb9, 1], [0x1c40, 0x1c49, 1], [0x1c50, 0x1c59, 1],
		[0xa620, 0xa629, 1], [0xa8d0, 0xa8d9, 1], [0xa900, 0xa909, 1], [0xa9d0, 0xa9d9, 1], [0xa9f0, 0xa9f9, 1], [0xaa50, 0xaa59, 1], [0xabf0, 0xabf9, 1],
		[0xff10, 0xff19, 1],
	],
	R32: [
		[0x104a0, 0x104a9, 1], [0x10d30, 0x10d39, 1], [0x11066, 0x1106f, 1], [0x110f0, 0x110f9, 1], [0x11136, 0x1113f, 1], [0x111d0, 0x111d9, 1],
		[0x112f0, 0x112f9, 1], [0x11450, 0x11459, 1], [0x114d0, 0x114d9, 1], [0x11650, 0x11659, 1], [0x116c0, 0x116c9, 1], [0x11730, 0x11739, 1],
		[0x118e0, 0x118e9, 1], [0x11950, 0x11959, 1], [0x11c50, 0x11c59, 1], [0x11d50, 0x11d59, 1], [0x11da0, 0x11da9, 1], [0x11f50, 0x11f59, 1],
		[0x16a60, 0x16a69, 1], [0x16ac0, 0x16ac9, 1], [0x16b50, 0x16b59, 1], [0x1d7ce, 0x1d7ff, 1], [0x1e140, 0x1e149, 1], [0x1e2f0, 0x1e2f9, 1],
		[0x1e4f0, 0x1e4f9, 1], [0x1e950, 0x1e959, 1], [0x1fbf0, 0x1fbf9, 1],
	],
	LatinOffset: 2,
}

private var _Pe:RangeTable = {
	R16: [
		[0x29, 0x5d, 52], [0x7d, 0xf3b, 3774], [0xf3d, 0x169c, 1887], [0x2046, 0x207e, 56], [0x208e, 0x2309, 635], [0x230b, 0x232a, 31], [0x2769, 0x2775, 2],
		[0x27c6, 0x27e7, 33], [0x27e9, 0x27ef, 2], [0x2984, 0x2998, 2], [0x29d9, 0x29db, 2], [0x29fd, 0x2e23, 1062], [0x2e25, 0x2e29, 2], [0x2e56, 0x2e5c, 2],
		[0x3009, 0x3011, 2], [0x3015, 0x301b, 2], [0x301e, 0x301f, 1], [0xfd3e, 0xfe18, 218], [0xfe36, 0xfe44, 2], [0xfe48, 0xfe5a, 18], [0xfe5c, 0xfe5e, 2],
		[0xff09, 0xff3d, 52], [0xff5d, 0xff63, 3],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Ps:RangeTable = {
	R16: [
		[0x28, 0x5b, 51], [0x7b, 0xf3a, 3775], [0xf3c, 0x169b, 1887], [0x201a, 0x201e, 4], [0x2045, 0x207d, 56], [0x208d, 0x2308, 635], [0x230a, 0x2329, 31],
		[0x2768, 0x2774, 2], [0x27c5, 0x27e6, 33], [0x27e8, 0x27ee, 2], [0x2983, 0x2997, 2], [0x29d8, 0x29da, 2], [0x29fc, 0x2e22, 1062], [0x2e24, 0x2e28, 2],
		[0x2e42, 0x2e55, 19], [0x2e57, 0x2e5b, 2], [0x3008, 0x3010, 2], [0x3014, 0x301a, 2], [0x301d, 0xfd3f, 52514], [0xfe17, 0xfe35, 30],
		[0xfe37, 0xfe43, 2], [0xfe47, 0xfe59, 18], [0xfe5b, 0xfe5d, 2], [0xff08, 0xff3b, 51], [0xff5b, 0xff5f, 4], [0xff62, 0xff62, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Z:RangeTable = {
	R16: [
		[0x20, 0xa0, 128],
		[0x1680, 0x2000, 2432],
		[0x2001, 0x200a, 1],
		[0x2028, 0x2029, 1],
		[0x202f, 0x205f, 48],
		[0x3000, 0x3000, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Zl:RangeTable = {
	R16: [[0x2028, 0x2028, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Cf:RangeTable = {
	R16: [
		[0xad, 0x600, 1363], [0x601, 0x605, 1], [0x61c, 0x6dd, 193], [0x70f, 0x890, 385], [0x891, 0x8e2, 81], [0x180e, 0x200b, 2045], [0x200c, 0x200f, 1],
		[0x202a, 0x202e, 1], [0x2060, 0x2064, 1], [0x2066, 0x206f, 1], [0xfeff, 0xfff9, 250], [0xfffa, 0xfffb, 1],
	],
	R32: [
		[0x110bd, 0x110cd, 16],
		[0x13430, 0x1343f, 1],
		[0x1bca0, 0x1bca3, 1],
		[0x1d173, 0x1d17a, 1],
		[0xe0001, 0xe0020, 31],
		[0xe0021, 0xe007f, 1],
	],
	LatinOffset: 2,
}

private var _Ll:RangeTable = {
	R16: [
		[0x61, 0x7a, 1], [0xb5, 0xdf, 42], [0xe0, 0xf6, 1], [0xf8, 0xff, 1], [0x101, 0x137, 2], [0x138, 0x148, 2], [0x149, 0x177, 2], [0x17a, 0x17e, 2],
		[0x17f, 0x180, 1], [0x183, 0x185, 2], [0x188, 0x18c, 4], [0x18d, 0x192, 5], [0x195, 0x199, 4], [0x19a, 0x19b, 1], [0x19e, 0x1a1, 3],
		[0x1a3, 0x1a5, 2], [0x1a8, 0x1aa, 2], [0x1ab, 0x1ad, 2], [0x1b0, 0x1b4, 4], [0x1b6, 0x1b9, 3], [0x1ba, 0x1bd, 3], [0x1be, 0x1bf, 1],
		[0x1c6, 0x1cc, 3], [0x1ce, 0x1dc, 2], [0x1dd, 0x1ef, 2], [0x1f0, 0x1f3, 3], [0x1f5, 0x1f9, 4], [0x1fb, 0x233, 2], [0x234, 0x239, 1],
		[0x23c, 0x23f, 3], [0x240, 0x242, 2], [0x247, 0x24f, 2], [0x250, 0x293, 1], [0x295, 0x2af, 1], [0x371, 0x373, 2], [0x377, 0x37b, 4],
		[0x37c, 0x37d, 1], [0x390, 0x3ac, 28], [0x3ad, 0x3ce, 1], [0x3d0, 0x3d1, 1], [0x3d5, 0x3d7, 1], [0x3d9, 0x3ef, 2], [0x3f0, 0x3f3, 1],
		[0x3f5, 0x3fb, 3], [0x3fc, 0x430, 52], [0x431, 0x45f, 1], [0x461, 0x481, 2], [0x48b, 0x4bf, 2], [0x4c2, 0x4ce, 2], [0x4cf, 0x52f, 2],
		[0x560, 0x588, 1], [0x10d0, 0x10fa, 1], [0x10fd, 0x10ff, 1], [0x13f8, 0x13fd, 1], [0x1c80, 0x1c88, 1], [0x1d00, 0x1d2b, 1], [0x1d6b, 0x1d77, 1],
		[0x1d79, 0x1d9a, 1], [0x1e01, 0x1e95, 2], [0x1e96, 0x1e9d, 1], [0x1e9f, 0x1eff, 2], [0x1f00, 0x1f07, 1], [0x1f10, 0x1f15, 1], [0x1f20, 0x1f27, 1],
		[0x1f30, 0x1f37, 1], [0x1f40, 0x1f45, 1], [0x1f50, 0x1f57, 1], [0x1f60, 0x1f67, 1], [0x1f70, 0x1f7d, 1], [0x1f80, 0x1f87, 1], [0x1f90, 0x1f97, 1],
		[0x1fa0, 0x1fa7, 1], [0x1fb0, 0x1fb4, 1], [0x1fb6, 0x1fb7, 1], [0x1fbe, 0x1fc2, 4], [0x1fc3, 0x1fc4, 1], [0x1fc6, 0x1fc7, 1], [0x1fd0, 0x1fd3, 1],
		[0x1fd6, 0x1fd7, 1], [0x1fe0, 0x1fe7, 1], [0x1ff2, 0x1ff4, 1], [0x1ff6, 0x1ff7, 1], [0x210a, 0x210e, 4], [0x210f, 0x2113, 4], [0x212f, 0x2139, 5],
		[0x213c, 0x213d, 1], [0x2146, 0x2149, 1], [0x214e, 0x2184, 54], [0x2c30, 0x2c5f, 1], [0x2c61, 0x2c65, 4], [0x2c66, 0x2c6c, 2], [0x2c71, 0x2c73, 2],
		[0x2c74, 0x2c76, 2], [0x2c77, 0x2c7b, 1], [0x2c81, 0x2ce3, 2], [0x2ce4, 0x2cec, 8], [0x2cee, 0x2cf3, 5], [0x2d00, 0x2d25, 1], [0x2d27, 0x2d2d, 6],
		[0xa641, 0xa66d, 2], [0xa681, 0xa69b, 2], [0xa723, 0xa72f, 2], [0xa730, 0xa731, 1], [0xa733, 0xa771, 2], [0xa772, 0xa778, 1], [0xa77a, 0xa77c, 2],
		[0xa77f, 0xa787, 2], [0xa78c, 0xa78e, 2], [0xa791, 0xa793, 2], [0xa794, 0xa795, 1], [0xa797, 0xa7a9, 2], [0xa7af, 0xa7b5, 6], [0xa7b7, 0xa7c3, 2],
		[0xa7c8, 0xa7ca, 2], [0xa7d1, 0xa7d9, 2], [0xa7f6, 0xa7fa, 4], [0xab30, 0xab5a, 1], [0xab60, 0xab68, 1], [0xab70, 0xabbf, 1], [0xfb00, 0xfb06, 1],
		[0xfb13, 0xfb17, 1], [0xff41, 0xff5a, 1],
	],
	R32: [
		[0x10428, 0x1044f, 1], [0x104d8, 0x104fb, 1], [0x10597, 0x105a1, 1], [0x105a3, 0x105b1, 1], [0x105b3, 0x105b9, 1], [0x105bb, 0x105bc, 1],
		[0x10cc0, 0x10cf2, 1], [0x118c0, 0x118df, 1], [0x16e60, 0x16e7f, 1], [0x1d41a, 0x1d433, 1], [0x1d44e, 0x1d454, 1], [0x1d456, 0x1d467, 1],
		[0x1d482, 0x1d49b, 1], [0x1d4b6, 0x1d4b9, 1], [0x1d4bb, 0x1d4bd, 2], [0x1d4be, 0x1d4c3, 1], [0x1d4c5, 0x1d4cf, 1], [0x1d4ea, 0x1d503, 1],
		[0x1d51e, 0x1d537, 1], [0x1d552, 0x1d56b, 1], [0x1d586, 0x1d59f, 1], [0x1d5ba, 0x1d5d3, 1], [0x1d5ee, 0x1d607, 1], [0x1d622, 0x1d63b, 1],
		[0x1d656, 0x1d66f, 1], [0x1d68a, 0x1d6a5, 1], [0x1d6c2, 0x1d6da, 1], [0x1d6dc, 0x1d6e1, 1], [0x1d6fc, 0x1d714, 1], [0x1d716, 0x1d71b, 1],
		[0x1d736, 0x1d74e, 1], [0x1d750, 0x1d755, 1], [0x1d770, 0x1d788, 1], [0x1d78a, 0x1d78f, 1], [0x1d7aa, 0x1d7c2, 1], [0x1d7c4, 0x1d7c9, 1],
		[0x1d7cb, 0x1df00, 1845], [0x1df01, 0x1df09, 1], [0x1df0b, 0x1df1e, 1], [0x1df25, 0x1df2a, 1], [0x1e922, 0x1e943, 1],
	],
	LatinOffset: 2,
}

private var _Lm:RangeTable = {
	R16: [
		[0x2b0, 0x2c1, 1], [0x2c6, 0x2d1, 1], [0x2e0, 0x2e4, 1], [0x2ec, 0x2ee, 2], [0x374, 0x37a, 6], [0x559, 0x640, 231], [0x6e5, 0x6e6, 1],
		[0x7f4, 0x7f5, 1], [0x7fa, 0x81a, 32], [0x824, 0x828, 4], [0x8c9, 0x971, 168], [0xe46, 0xec6, 128], [0x10fc, 0x17d7, 1755], [0x1843, 0x1aa7, 612],
		[0x1c78, 0x1c7d, 1], [0x1d2c, 0x1d6a, 1], [0x1d78, 0x1d9b, 35], [0x1d9c, 0x1dbf, 1], [0x2071, 0x207f, 14], [0x2090, 0x209c, 1], [0x2c7c, 0x2c7d, 1],
		[0x2d6f, 0x2e2f, 192], [0x3005, 0x3031, 44], [0x3032, 0x3035, 1], [0x303b, 0x309d, 98], [0x309e, 0x30fc, 94], [0x30fd, 0x30fe, 1],
		[0xa015, 0xa4f8, 1251], [0xa4f9, 0xa4fd, 1], [0xa60c, 0xa67f, 115], [0xa69c, 0xa69d, 1], [0xa717, 0xa71f, 1], [0xa770, 0xa788, 24],
		[0xa7f2, 0xa7f4, 1], [0xa7f8, 0xa7f9, 1], [0xa9cf, 0xa9e6, 23], [0xaa70, 0xaadd, 109], [0xaaf3, 0xaaf4, 1], [0xab5c, 0xab5f, 1],
		[0xab69, 0xff70, 21511], [0xff9e, 0xff9f, 1],
	],
	R32: [
		[0x10780, 0x10785, 1], [0x10787, 0x107b0, 1], [0x107b2, 0x107ba, 1], [0x16b40, 0x16b43, 1], [0x16f93, 0x16f9f, 1], [0x16fe0, 0x16fe1, 1],
		[0x16fe3, 0x1aff0, 16397], [0x1aff1, 0x1aff3, 1], [0x1aff5, 0x1affb, 1], [0x1affd, 0x1affe, 1], [0x1e030, 0x1e06d, 1], [0x1e137, 0x1e13d, 1],
		[0x1e4eb, 0x1e94b, 1120],
	],
	LatinOffset: 2,
}

private var _Mn:RangeTable = {
	R16: [
		[0x300, 0x36f, 1], [0x483, 0x487, 1], [0x591, 0x5bd, 1], [0x5bf, 0x5c1, 2], [0x5c2, 0x5c4, 2], [0x5c5, 0x5c7, 2], [0x610, 0x61a, 1],
		[0x64b, 0x65f, 1], [0x670, 0x6d6, 102], [0x6d7, 0x6dc, 1], [0x6df, 0x6e4, 1], [0x6e7, 0x6e8, 1], [0x6ea, 0x6ed, 1], [0x711, 0x730, 31],
		[0x731, 0x74a, 1], [0x7a6, 0x7b0, 1], [0x7eb, 0x7f3, 1], [0x7fd, 0x816, 25], [0x817, 0x819, 1], [0x81b, 0x823, 1], [0x825, 0x827, 1],
		[0x829, 0x82d, 1], [0x859, 0x85b, 1], [0x898, 0x89f, 1], [0x8ca, 0x8e1, 1], [0x8e3, 0x902, 1], [0x93a, 0x93c, 2], [0x941, 0x948, 1],
		[0x94d, 0x951, 4], [0x952, 0x957, 1], [0x962, 0x963, 1], [0x981, 0x9bc, 59], [0x9c1, 0x9c4, 1], [0x9cd, 0x9e2, 21], [0x9e3, 0x9fe, 27],
		[0xa01, 0xa02, 1], [0xa3c, 0xa41, 5], [0xa42, 0xa47, 5], [0xa48, 0xa4b, 3], [0xa4c, 0xa4d, 1], [0xa51, 0xa70, 31], [0xa71, 0xa75, 4],
		[0xa81, 0xa82, 1], [0xabc, 0xac1, 5], [0xac2, 0xac5, 1], [0xac7, 0xac8, 1], [0xacd, 0xae2, 21], [0xae3, 0xafa, 23], [0xafb, 0xaff, 1],
		[0xb01, 0xb3c, 59], [0xb3f, 0xb41, 2], [0xb42, 0xb44, 1], [0xb4d, 0xb55, 8], [0xb56, 0xb62, 12], [0xb63, 0xb82, 31], [0xbc0, 0xbcd, 13],
		[0xc00, 0xc04, 4], [0xc3c, 0xc3e, 2], [0xc3f, 0xc40, 1], [0xc46, 0xc48, 1], [0xc4a, 0xc4d, 1], [0xc55, 0xc56, 1], [0xc62, 0xc63, 1],
		[0xc81, 0xcbc, 59], [0xcbf, 0xcc6, 7], [0xccc, 0xccd, 1], [0xce2, 0xce3, 1], [0xd00, 0xd01, 1], [0xd3b, 0xd3c, 1], [0xd41, 0xd44, 1],
		[0xd4d, 0xd62, 21], [0xd63, 0xd81, 30], [0xdca, 0xdd2, 8], [0xdd3, 0xdd4, 1], [0xdd6, 0xe31, 91], [0xe34, 0xe3a, 1], [0xe47, 0xe4e, 1],
		[0xeb1, 0xeb4, 3], [0xeb5, 0xebc, 1], [0xec8, 0xece, 1], [0xf18, 0xf19, 1], [0xf35, 0xf39, 2], [0xf71, 0xf7e, 1], [0xf80, 0xf84, 1],
		[0xf86, 0xf87, 1], [0xf8d, 0xf97, 1], [0xf99, 0xfbc, 1], [0xfc6, 0x102d, 103], [0x102e, 0x1030, 1], [0x1032, 0x1037, 1], [0x1039, 0x103a, 1],
		[0x103d, 0x103e, 1], [0x1058, 0x1059, 1], [0x105e, 0x1060, 1], [0x1071, 0x1074, 1], [0x1082, 0x1085, 3], [0x1086, 0x108d, 7], [0x109d, 0x135d, 704],
		[0x135e, 0x135f, 1], [0x1712, 0x1714, 1], [0x1732, 0x1733, 1], [0x1752, 0x1753, 1], [0x1772, 0x1773, 1], [0x17b4, 0x17b5, 1], [0x17b7, 0x17bd, 1],
		[0x17c6, 0x17c9, 3], [0x17ca, 0x17d3, 1], [0x17dd, 0x180b, 46], [0x180c, 0x180d, 1], [0x180f, 0x1885, 118], [0x1886, 0x18a9, 35], [0x1920, 0x1922, 1],
		[0x1927, 0x1928, 1], [0x1932, 0x1939, 7], [0x193a, 0x193b, 1], [0x1a17, 0x1a18, 1], [0x1a1b, 0x1a56, 59], [0x1a58, 0x1a5e, 1], [0x1a60, 0x1a62, 2],
		[0x1a65, 0x1a6c, 1], [0x1a73, 0x1a7c, 1], [0x1a7f, 0x1ab0, 49], [0x1ab1, 0x1abd, 1], [0x1abf, 0x1ace, 1], [0x1b00, 0x1b03, 1], [0x1b34, 0x1b36, 2],
		[0x1b37, 0x1b3a, 1], [0x1b3c, 0x1b42, 6], [0x1b6b, 0x1b73, 1], [0x1b80, 0x1b81, 1], [0x1ba2, 0x1ba5, 1], [0x1ba8, 0x1ba9, 1], [0x1bab, 0x1bad, 1],
		[0x1be6, 0x1be8, 2], [0x1be9, 0x1bed, 4], [0x1bef, 0x1bf1, 1], [0x1c2c, 0x1c33, 1], [0x1c36, 0x1c37, 1], [0x1cd0, 0x1cd2, 1], [0x1cd4, 0x1ce0, 1],
		[0x1ce2, 0x1ce8, 1], [0x1ced, 0x1cf4, 7], [0x1cf8, 0x1cf9, 1], [0x1dc0, 0x1dff, 1], [0x20d0, 0x20dc, 1], [0x20e1, 0x20e5, 4], [0x20e6, 0x20f0, 1],
		[0x2cef, 0x2cf1, 1], [0x2d7f, 0x2de0, 97], [0x2de1, 0x2dff, 1], [0x302a, 0x302d, 1], [0x3099, 0x309a, 1], [0xa66f, 0xa674, 5], [0xa675, 0xa67d, 1],
		[0xa69e, 0xa69f, 1], [0xa6f0, 0xa6f1, 1], [0xa802, 0xa806, 4], [0xa80b, 0xa825, 26], [0xa826, 0xa82c, 6], [0xa8c4, 0xa8c5, 1], [0xa8e0, 0xa8f1, 1],
		[0xa8ff, 0xa926, 39], [0xa927, 0xa92d, 1], [0xa947, 0xa951, 1], [0xa980, 0xa982, 1], [0xa9b3, 0xa9b6, 3], [0xa9b7, 0xa9b9, 1], [0xa9bc, 0xa9bd, 1],
		[0xa9e5, 0xaa29, 68], [0xaa2a, 0xaa2e, 1], [0xaa31, 0xaa32, 1], [0xaa35, 0xaa36, 1], [0xaa43, 0xaa4c, 9], [0xaa7c, 0xaab0, 52], [0xaab2, 0xaab4, 1],
		[0xaab7, 0xaab8, 1], [0xaabe, 0xaabf, 1], [0xaac1, 0xaaec, 43], [0xaaed, 0xaaf6, 9], [0xabe5, 0xabe8, 3], [0xabed, 0xfb1e, 20273],
		[0xfe00, 0xfe0f, 1], [0xfe20, 0xfe2f, 1],
	],
	R32: [
		[0x101fd, 0x102e0, 227], [0x10376, 0x1037a, 1], [0x10a01, 0x10a03, 1], [0x10a05, 0x10a06, 1], [0x10a0c, 0x10a0f, 1], [0x10a38, 0x10a3a, 1],
		[0x10a3f, 0x10ae5, 166], [0x10ae6, 0x10d24, 574], [0x10d25, 0x10d27, 1], [0x10eab, 0x10eac, 1], [0x10efd, 0x10eff, 1], [0x10f46, 0x10f50, 1],
		[0x10f82, 0x10f85, 1], [0x11001, 0x11038, 55], [0x11039, 0x11046, 1], [0x11070, 0x11073, 3], [0x11074, 0x1107f, 11], [0x11080, 0x11081, 1],
		[0x110b3, 0x110b6, 1], [0x110b9, 0x110ba, 1], [0x110c2, 0x11100, 62], [0x11101, 0x11102, 1], [0x11127, 0x1112b, 1], [0x1112d, 0x11134, 1],
		[0x11173, 0x11180, 13], [0x11181, 0x111b6, 53], [0x111b7, 0x111be, 1], [0x111c9, 0x111cc, 1], [0x111cf, 0x1122f, 96], [0x11230, 0x11231, 1],
		[0x11234, 0x11236, 2], [0x11237, 0x1123e, 7], [0x11241, 0x112df, 158], [0x112e3, 0x112ea, 1], [0x11300, 0x11301, 1], [0x1133b, 0x1133c, 1],
		[0x11340, 0x11366, 38], [0x11367, 0x1136c, 1], [0x11370, 0x11374, 1], [0x11438, 0x1143f, 1], [0x11442, 0x11444, 1], [0x11446, 0x1145e, 24],
		[0x114b3, 0x114b8, 1], [0x114ba, 0x114bf, 5], [0x114c0, 0x114c2, 2], [0x114c3, 0x115b2, 239], [0x115b3, 0x115b5, 1], [0x115bc, 0x115bd, 1],
		[0x115bf, 0x115c0, 1], [0x115dc, 0x115dd, 1], [0x11633, 0x1163a, 1], [0x1163d, 0x1163f, 2], [0x11640, 0x116ab, 107], [0x116ad, 0x116b0, 3],
		[0x116b1, 0x116b5, 1], [0x116b7, 0x1171d, 102], [0x1171e, 0x1171f, 1], [0x11722, 0x11725, 1], [0x11727, 0x1172b, 1], [0x1182f, 0x11837, 1],
		[0x11839, 0x1183a, 1], [0x1193b, 0x1193c, 1], [0x1193e, 0x11943, 5], [0x119d4, 0x119d7, 1], [0x119da, 0x119db, 1], [0x119e0, 0x11a01, 33],
		[0x11a02, 0x11a0a, 1], [0x11a33, 0x11a38, 1], [0x11a3b, 0x11a3e, 1], [0x11a47, 0x11a51, 10], [0x11a52, 0x11a56, 1], [0x11a59, 0x11a5b, 1],
		[0x11a8a, 0x11a96, 1], [0x11a98, 0x11a99, 1], [0x11c30, 0x11c36, 1], [0x11c38, 0x11c3d, 1], [0x11c3f, 0x11c92, 83], [0x11c93, 0x11ca7, 1],
		[0x11caa, 0x11cb0, 1], [0x11cb2, 0x11cb3, 1], [0x11cb5, 0x11cb6, 1], [0x11d31, 0x11d36, 1], [0x11d3a, 0x11d3c, 2], [0x11d3d, 0x11d3f, 2],
		[0x11d40, 0x11d45, 1], [0x11d47, 0x11d90, 73], [0x11d91, 0x11d95, 4], [0x11d97, 0x11ef3, 348], [0x11ef4, 0x11f00, 12], [0x11f01, 0x11f36, 53],
		[0x11f37, 0x11f3a, 1], [0x11f40, 0x11f42, 2], [0x13440, 0x13447, 7], [0x13448, 0x13455, 1], [0x16af0, 0x16af4, 1], [0x16b30, 0x16b36, 1],
		[0x16f4f, 0x16f8f, 64], [0x16f90, 0x16f92, 1], [0x16fe4, 0x1bc9d, 19641], [0x1bc9e, 0x1cf00, 4706], [0x1cf01, 0x1cf2d, 1], [0x1cf30, 0x1cf46, 1],
		[0x1d167, 0x1d169, 1], [0x1d17b, 0x1d182, 1], [0x1d185, 0x1d18b, 1], [0x1d1aa, 0x1d1ad, 1], [0x1d242, 0x1d244, 1], [0x1da00, 0x1da36, 1],
		[0x1da3b, 0x1da6c, 1], [0x1da75, 0x1da84, 15], [0x1da9b, 0x1da9f, 1], [0x1daa1, 0x1daaf, 1], [0x1e000, 0x1e006, 1], [0x1e008, 0x1e018, 1],
		[0x1e01b, 0x1e021, 1], [0x1e023, 0x1e024, 1], [0x1e026, 0x1e02a, 1], [0x1e08f, 0x1e130, 161], [0x1e131, 0x1e136, 1], [0x1e2ae, 0x1e2ec, 62],
		[0x1e2ed, 0x1e2ef, 1], [0x1e4ec, 0x1e4ef, 1], [0x1e8d0, 0x1e8d6, 1], [0x1e944, 0x1e94a, 1], [0xe0100, 0xe01ef, 1],
	],
	LatinOffset: 2,
}

private var _Pf:RangeTable = {
	R16: [
		[0xbb, 0x2019, 8030],
		[0x201d, 0x203a, 29],
		[0x2e03, 0x2e05, 2],
		[0x2e0a, 0x2e0d, 3],
		[0x2e1d, 0x2e21, 4],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Sc:RangeTable = {
	R16: [
		[0x24, 0xa2, 126], [0xa3, 0xa5, 1], [0x58f, 0x60b, 124], [0x7fe, 0x7ff, 1], [0x9f2, 0x9f3, 1], [0x9fb, 0xaf1, 246], [0xbf9, 0xe3f, 582],
		[0x17db, 0x20a0, 2245], [0x20a1, 0x20c0, 1], [0xa838, 0xfdfc, 21956], [0xfe69, 0xff04, 155], [0xffe0, 0xffe1, 1], [0xffe5, 0xffe6, 1],
	],
	R32: [[0x11fdd, 0x11fe0, 1], [0x1e2ff, 0x1ecb0, 2481],],
	LatinOffset: 2,
}

private var _So:RangeTable = {
	R16: [
		[0xa6, 0xa9, 3], [0xae, 0xb0, 2], [0x482, 0x58d, 267], [0x58e, 0x60e, 128], [0x60f, 0x6de, 207], [0x6e9, 0x6fd, 20], [0x6fe, 0x7f6, 248],
		[0x9fa, 0xb70, 374], [0xbf3, 0xbf8, 1], [0xbfa, 0xc7f, 133], [0xd4f, 0xd79, 42], [0xf01, 0xf03, 1], [0xf13, 0xf15, 2], [0xf16, 0xf17, 1],
		[0xf1a, 0xf1f, 1], [0xf34, 0xf38, 2], [0xfbe, 0xfc5, 1], [0xfc7, 0xfcc, 1], [0xfce, 0xfcf, 1], [0xfd5, 0xfd8, 1], [0x109e, 0x109f, 1],
		[0x1390, 0x1399, 1], [0x166d, 0x1940, 723], [0x19de, 0x19ff, 1], [0x1b61, 0x1b6a, 1], [0x1b74, 0x1b7c, 1], [0x2100, 0x2101, 1], [0x2103, 0x2106, 1],
		[0x2108, 0x2109, 1], [0x2114, 0x2116, 2], [0x2117, 0x211e, 7], [0x211f, 0x2123, 1], [0x2125, 0x2129, 2], [0x212e, 0x213a, 12], [0x213b, 0x214a, 15],
		[0x214c, 0x214d, 1], [0x214f, 0x218a, 59], [0x218b, 0x2195, 10], [0x2196, 0x2199, 1], [0x219c, 0x219f, 1], [0x21a1, 0x21a2, 1], [0x21a4, 0x21a5, 1],
		[0x21a7, 0x21ad, 1], [0x21af, 0x21cd, 1], [0x21d0, 0x21d1, 1], [0x21d3, 0x21d5, 2], [0x21d6, 0x21f3, 1], [0x2300, 0x2307, 1], [0x230c, 0x231f, 1],
		[0x2322, 0x2328, 1], [0x232b, 0x237b, 1], [0x237d, 0x239a, 1], [0x23b4, 0x23db, 1], [0x23e2, 0x2426, 1], [0x2440, 0x244a, 1], [0x249c, 0x24e9, 1],
		[0x2500, 0x25b6, 1], [0x25b8, 0x25c0, 1], [0x25c2, 0x25f7, 1], [0x2600, 0x266e, 1], [0x2670, 0x2767, 1], [0x2794, 0x27bf, 1], [0x2800, 0x28ff, 1],
		[0x2b00, 0x2b2f, 1], [0x2b45, 0x2b46, 1], [0x2b4d, 0x2b73, 1], [0x2b76, 0x2b95, 1], [0x2b97, 0x2bff, 1], [0x2ce5, 0x2cea, 1], [0x2e50, 0x2e51, 1],
		[0x2e80, 0x2e99, 1], [0x2e9b, 0x2ef3, 1], [0x2f00, 0x2fd5, 1], [0x2ff0, 0x2ffb, 1], [0x3004, 0x3012, 14], [0x3013, 0x3020, 13], [0x3036, 0x3037, 1],
		[0x303e, 0x303f, 1], [0x3190, 0x3191, 1], [0x3196, 0x319f, 1], [0x31c0, 0x31e3, 1], [0x3200, 0x321e, 1], [0x322a, 0x3247, 1], [0x3250, 0x3260, 16],
		[0x3261, 0x327f, 1], [0x328a, 0x32b0, 1], [0x32c0, 0x33ff, 1], [0x4dc0, 0x4dff, 1], [0xa490, 0xa4c6, 1], [0xa828, 0xa82b, 1], [0xa836, 0xa837, 1],
		[0xa839, 0xaa77, 574], [0xaa78, 0xaa79, 1], [0xfd40, 0xfd4f, 1], [0xfdcf, 0xfdfd, 46], [0xfdfe, 0xfdff, 1], [0xffe4, 0xffe8, 4], [0xffed, 0xffee, 1],
		[0xfffc, 0xfffd, 1],
	],
	R32: [
		[0x10137, 0x1013f, 1], [0x10179, 0x10189, 1], [0x1018c, 0x1018e, 1], [0x10190, 0x1019c, 1], [0x101a0, 0x101d0, 48], [0x101d1, 0x101fc, 1],
		[0x10877, 0x10878, 1], [0x10ac8, 0x1173f, 3191], [0x11fd5, 0x11fdc, 1], [0x11fe1, 0x11ff1, 1], [0x16b3c, 0x16b3f, 1], [0x16b45, 0x1bc9c, 20823],
		[0x1cf50, 0x1cfc3, 1], [0x1d000, 0x1d0f5, 1], [0x1d100, 0x1d126, 1], [0x1d129, 0x1d164, 1], [0x1d16a, 0x1d16c, 1], [0x1d183, 0x1d184, 1],
		[0x1d18c, 0x1d1a9, 1], [0x1d1ae, 0x1d1ea, 1], [0x1d200, 0x1d241, 1], [0x1d245, 0x1d300, 187], [0x1d301, 0x1d356, 1], [0x1d800, 0x1d9ff, 1],
		[0x1da37, 0x1da3a, 1], [0x1da6d, 0x1da74, 1], [0x1da76, 0x1da83, 1], [0x1da85, 0x1da86, 1], [0x1e14f, 0x1ecac, 2909], [0x1ed2e, 0x1f000, 722],
		[0x1f001, 0x1f02b, 1], [0x1f030, 0x1f093, 1], [0x1f0a0, 0x1f0ae, 1], [0x1f0b1, 0x1f0bf, 1], [0x1f0c1, 0x1f0cf, 1], [0x1f0d1, 0x1f0f5, 1],
		[0x1f10d, 0x1f1ad, 1], [0x1f1e6, 0x1f202, 1], [0x1f210, 0x1f23b, 1], [0x1f240, 0x1f248, 1], [0x1f250, 0x1f251, 1], [0x1f260, 0x1f265, 1],
		[0x1f300, 0x1f3fa, 1], [0x1f400, 0x1f6d7, 1], [0x1f6dc, 0x1f6ec, 1], [0x1f6f0, 0x1f6fc, 1], [0x1f700, 0x1f776, 1], [0x1f77b, 0x1f7d9, 1],
		[0x1f7e0, 0x1f7eb, 1], [0x1f7f0, 0x1f800, 16], [0x1f801, 0x1f80b, 1], [0x1f810, 0x1f847, 1], [0x1f850, 0x1f859, 1], [0x1f860, 0x1f887, 1],
		[0x1f890, 0x1f8ad, 1], [0x1f8b0, 0x1f8b1, 1], [0x1f900, 0x1fa53, 1], [0x1fa60, 0x1fa6d, 1], [0x1fa70, 0x1fa7c, 1], [0x1fa80, 0x1fa88, 1],
		[0x1fa90, 0x1fabd, 1], [0x1fabf, 0x1fac5, 1], [0x1face, 0x1fadb, 1], [0x1fae0, 0x1fae8, 1], [0x1faf0, 0x1faf8, 1], [0x1fb00, 0x1fb92, 1],
		[0x1fb94, 0x1fbca, 1],
	],
	LatinOffset: 2,
}

private var _C:RangeTable = {
	R16: [
		[0x0, 0x1f, 1], [0x7f, 0x9f, 1], [0xad, 0x600, 1363], [0x601, 0x605, 1], [0x61c, 0x6dd, 193], [0x70f, 0x890, 385], [0x891, 0x8e2, 81],
		[0x180e, 0x200b, 2045], [0x200c, 0x200f, 1], [0x202a, 0x202e, 1], [0x2060, 0x2064, 1], [0x2066, 0x206f, 1], [0xd800, 0xf8ff, 1],
		[0xfeff, 0xfff9, 250], [0xfffa, 0xfffb, 1],
	],
	R32: [
		[0x110bd, 0x110cd, 16],
		[0x13430, 0x1343f, 1],
		[0x1bca0, 0x1bca3, 1],
		[0x1d173, 0x1d17a, 1],
		[0xe0001, 0xe0020, 31],
		[0xe0021, 0xe007f, 1],
		[0xf0000, 0xffffd, 1],
		[0x100000, 0x10fffd, 1],
	],
	LatinOffset: 2,
}

private var _Pattern_White_Space:RangeTable = {
	R16: [[0x9, 0xd, 1], [0x20, 0x85, 101], [0x200e, 0x200f, 1], [0x2028, 0x2029, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Terminal_Punctuation:RangeTable = {
	R16: [
		[0x21, 0x2c, 11], [0x2e, 0x3a, 12], [0x3b, 0x3f, 4], [0x37e, 0x387, 9], [0x589, 0x5c3, 58], [0x60c, 0x61b, 15], [0x61d, 0x61f, 1], [0x6d4, 0x700, 44],
		[0x701, 0x70a, 1], [0x70c, 0x7f8, 236], [0x7f9, 0x830, 55], [0x831, 0x83e, 1], [0x85e, 0x964, 262], [0x965, 0xe5a, 1269], [0xe5b, 0xf08, 173],
		[0xf0d, 0xf12, 1], [0x104a, 0x104b, 1], [0x1361, 0x1368, 1], [0x166e, 0x16eb, 125], [0x16ec, 0x16ed, 1], [0x1735, 0x1736, 1], [0x17d4, 0x17d6, 1],
		[0x17da, 0x1802, 40], [0x1803, 0x1805, 1], [0x1808, 0x1809, 1], [0x1944, 0x1945, 1], [0x1aa8, 0x1aab, 1], [0x1b5a, 0x1b5b, 1], [0x1b5d, 0x1b5f, 1],
		[0x1b7d, 0x1b7e, 1], [0x1c3b, 0x1c3f, 1], [0x1c7e, 0x1c7f, 1], [0x203c, 0x203d, 1], [0x2047, 0x2049, 1], [0x2e2e, 0x2e3c, 14], [0x2e41, 0x2e4c, 11],
		[0x2e4e, 0x2e4f, 1], [0x2e53, 0x2e54, 1], [0x3001, 0x3002, 1], [0xa4fe, 0xa4ff, 1], [0xa60d, 0xa60f, 1], [0xa6f3, 0xa6f7, 1], [0xa876, 0xa877, 1],
		[0xa8ce, 0xa8cf, 1], [0xa92f, 0xa9c7, 152], [0xa9c8, 0xa9c9, 1], [0xaa5d, 0xaa5f, 1], [0xaadf, 0xaaf0, 17], [0xaaf1, 0xabeb, 250],
		[0xfe50, 0xfe52, 1], [0xfe54, 0xfe57, 1], [0xff01, 0xff0c, 11], [0xff0e, 0xff1a, 12], [0xff1b, 0xff1f, 4], [0xff61, 0xff64, 3],
	],
	R32: [
		[0x1039f, 0x103d0, 49], [0x10857, 0x1091f, 200], [0x10a56, 0x10a57, 1], [0x10af0, 0x10af5, 1], [0x10b3a, 0x10b3f, 1], [0x10b99, 0x10b9c, 1],
		[0x10f55, 0x10f59, 1], [0x10f86, 0x10f89, 1], [0x11047, 0x1104d, 1], [0x110be, 0x110c1, 1], [0x11141, 0x11143, 1], [0x111c5, 0x111c6, 1],
		[0x111cd, 0x111de, 17], [0x111df, 0x11238, 89], [0x11239, 0x1123c, 1], [0x112a9, 0x1144b, 418], [0x1144c, 0x1144d, 1], [0x1145a, 0x1145b, 1],
		[0x115c2, 0x115c5, 1], [0x115c9, 0x115d7, 1], [0x11641, 0x11642, 1], [0x1173c, 0x1173e, 1], [0x11944, 0x11946, 2], [0x11a42, 0x11a43, 1],
		[0x11a9b, 0x11a9c, 1], [0x11aa1, 0x11aa2, 1], [0x11c41, 0x11c43, 1], [0x11c71, 0x11ef7, 646], [0x11ef8, 0x11f43, 75], [0x11f44, 0x12470, 1324],
		[0x12471, 0x12474, 1], [0x16a6e, 0x16a6f, 1], [0x16af5, 0x16b37, 66], [0x16b38, 0x16b39, 1], [0x16b44, 0x16e97, 851], [0x16e98, 0x1bc9f, 19975],
		[0x1da87, 0x1da8a, 1],
	],
	LatinOffset: 2,
}

private var _Variation_Selector:RangeTable = {
	R16: [[0x180b, 0x180d, 1], [0x180f, 0xfe00, 58865], [0xfe01, 0xfe0f, 1],],
	R32: [[0xe0100, 0xe01ef, 1],],
	LatinOffset: 2,
}

private var _Dash:RangeTable = {
	R16: [
		[0x2d, 0x58a, 1373], [0x5be, 0x1400, 3650], [0x1806, 0x2010, 2058], [0x2011, 0x2015, 1], [0x2053, 0x207b, 40], [0x208b, 0x2212, 391],
		[0x2e17, 0x2e1a, 3], [0x2e3a, 0x2e3b, 1], [0x2e40, 0x2e5d, 29], [0x301c, 0x3030, 20], [0x30a0, 0xfe31, 52625], [0xfe32, 0xfe58, 38],
		[0xfe63, 0xff0d, 170],
	],
	R32: [[0x10ead, 0x10ead, 1],],
	LatinOffset: 2,
}

private var _IDS_Binary_Operator:RangeTable = {
	R16: [[0x2ff0, 0x2ff1, 1], [0x2ff4, 0x2ffb, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Ideographic:RangeTable = {
	R16: [
		[0x3006, 0x3007, 1],
		[0x3021, 0x3029, 1],
		[0x3038, 0x303a, 1],
		[0x3400, 0x4dbf, 1],
		[0x4e00, 0x9fff, 1],
		[0xf900, 0xfa6d, 1],
		[0xfa70, 0xfad9, 1],
	],
	R32: [
		[0x16fe4, 0x17000, 28], [0x17001, 0x187f7, 1], [0x18800, 0x18cd5, 1], [0x18d00, 0x18d08, 1], [0x1b170, 0x1b2fb, 1], [0x20000, 0x2a6df, 1],
		[0x2a700, 0x2b739, 1], [0x2b740, 0x2b81d, 1], [0x2b820, 0x2cea1, 1], [0x2ceb0, 0x2ebe0, 1], [0x2f800, 0x2fa1d, 1], [0x30000, 0x3134a, 1],
		[0x31350, 0x323af, 1],
	],
	LatinOffset: 2,
}

private var _Logical_Order_Exception:RangeTable = {
	R16: [
		[0xe40, 0xe44, 1],
		[0xec0, 0xec4, 1],
		[0x19b5, 0x19b7, 1],
		[0x19ba, 0xaab5, 37115],
		[0xaab6, 0xaab9, 3],
		[0xaabb, 0xaabc, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Other_Lowercase:RangeTable = {
	R16: [
		[0xaa, 0xba, 16], [0x2b0, 0x2b8, 1], [0x2c0, 0x2c1, 1], [0x2e0, 0x2e4, 1], [0x345, 0x37a, 53], [0x10fc, 0x1d2c, 3120], [0x1d2d, 0x1d6a, 1],
		[0x1d78, 0x1d9b, 35], [0x1d9c, 0x1dbf, 1], [0x2071, 0x207f, 14], [0x2090, 0x209c, 1], [0x2170, 0x217f, 1], [0x24d0, 0x24e9, 1], [0x2c7c, 0x2c7d, 1],
		[0xa69c, 0xa69d, 1], [0xa770, 0xa7f2, 130], [0xa7f3, 0xa7f4, 1], [0xa7f8, 0xa7f9, 1], [0xab5c, 0xab5f, 1], [0xab69, 0xab69, 1],
	],
	R32: [
		[0x10780, 0x10783, 3],
		[0x10784, 0x10785, 1],
		[0x10787, 0x107b0, 1],
		[0x107b2, 0x107ba, 1],
		[0x1e030, 0x1e06d, 1],
	],
	LatinOffset: 2,
}

private var _White_Space:RangeTable = {
	R16: [
		[0x9, 0xd, 1],
		[0x20, 0x85, 101],
		[0xa0, 0x1680, 5600],
		[0x2000, 0x200a, 1],
		[0x2028, 0x2029, 1],
		[0x202f, 0x205f, 48],
		[0x3000, 0x3000, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Extender:RangeTable = {
	R16: [
		[0xb7, 0x2d0, 537], [0x2d1, 0x640, 879], [0x7fa, 0xb55, 859], [0xe46, 0xec6, 128], [0x180a, 0x1843, 57], [0x1aa7, 0x1c36, 399],
		[0x1c7b, 0x3005, 5002], [0x3031, 0x3035, 1], [0x309d, 0x309e, 1], [0x30fc, 0x30fe, 1], [0xa015, 0xa60c, 1527], [0xa9cf, 0xa9e6, 23],
		[0xaa70, 0xaadd, 109], [0xaaf3, 0xaaf4, 1], [0xff70, 0xff70, 1],
	],
	R32: [
		[0x10781, 0x10782, 1],
		[0x1135d, 0x115c6, 617],
		[0x115c7, 0x115c8, 1],
		[0x11a98, 0x16b42, 20650],
		[0x16b43, 0x16fe0, 1181],
		[0x16fe1, 0x16fe3, 2],
		[0x1e13c, 0x1e13d, 1],
		[0x1e944, 0x1e946, 1],
	],
	LatinOffset: 2,
}

private var _Join_Control:RangeTable = {
	R16: [[0x200c, 0x200d, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Other_Grapheme_Extend:RangeTable = {
	R16: [
		[0x9be, 0x9d7, 25], [0xb3e, 0xb57, 25], [0xbbe, 0xbd7, 25], [0xcc2, 0xcd5, 19], [0xcd6, 0xd3e, 104], [0xd57, 0xdcf, 120], [0xddf, 0x1b35, 3414],
		[0x200c, 0x302e, 4130], [0x302f, 0xff9e, 53103], [0xff9f, 0xff9f, 1],
	],
	R32: [
		[0x1133e, 0x11357, 25],
		[0x114b0, 0x114bd, 13],
		[0x115af, 0x11930, 897],
		[0x1d165, 0x1d16e, 9],
		[0x1d16f, 0x1d172, 1],
		[0xe0020, 0xe007f, 1],
	],
	LatinOffset: 2,
}

private var _Pattern_Syntax:RangeTable = {
	R16: [
		[0x21, 0x2f, 1], [0x3a, 0x40, 1], [0x5b, 0x5e, 1], [0x60, 0x7b, 27], [0x7c, 0x7e, 1], [0xa1, 0xa7, 1], [0xa9, 0xab, 2], [0xac, 0xb0, 2],
		[0xb1, 0xbb, 5], [0xbf, 0xd7, 24], [0xf7, 0x2010, 7961], [0x2011, 0x2027, 1], [0x2030, 0x203e, 1], [0x2041, 0x2053, 1], [0x2055, 0x205e, 1],
		[0x2190, 0x245f, 1], [0x2500, 0x2775, 1], [0x2794, 0x2bff, 1], [0x2e00, 0x2e7f, 1], [0x3001, 0x3003, 1], [0x3008, 0x3020, 1], [0x3030, 0xfd3e, 52494],
		[0xfd3f, 0xfe45, 262], [0xfe46, 0xfe46, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Quotation_Mark:RangeTable = {
	R16: [
		[0x22, 0x27, 5], [0xab, 0xbb, 16], [0x2018, 0x201f, 1], [0x2039, 0x203a, 1], [0x2e42, 0x300c, 458], [0x300d, 0x300f, 1], [0x301d, 0x301f, 1],
		[0xfe41, 0xfe44, 1], [0xff02, 0xff07, 5], [0xff62, 0xff63, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Sentence_Terminal:RangeTable = {
	R16: [
		[0x21, 0x2e, 13], [0x3f, 0x589, 1354], [0x61d, 0x61f, 1], [0x6d4, 0x700, 44], [0x701, 0x702, 1], [0x7f9, 0x837, 62], [0x839, 0x83d, 4],
		[0x83e, 0x964, 294], [0x965, 0x104a, 1765], [0x104b, 0x1362, 791], [0x1367, 0x1368, 1], [0x166e, 0x1735, 199], [0x1736, 0x1803, 205],
		[0x1809, 0x1944, 315], [0x1945, 0x1aa8, 355], [0x1aa9, 0x1aab, 1], [0x1b5a, 0x1b5b, 1], [0x1b5e, 0x1b5f, 1], [0x1b7d, 0x1b7e, 1], [0x1c3b, 0x1c3c, 1],
		[0x1c7e, 0x1c7f, 1], [0x203c, 0x203d, 1], [0x2047, 0x2049, 1], [0x2e2e, 0x2e3c, 14], [0x2e53, 0x2e54, 1], [0x3002, 0xa4ff, 29949],
		[0xa60e, 0xa60f, 1], [0xa6f3, 0xa6f7, 4], [0xa876, 0xa877, 1], [0xa8ce, 0xa8cf, 1], [0xa92f, 0xa9c8, 153], [0xa9c9, 0xaa5d, 148], [0xaa5e, 0xaa5f, 1],
		[0xaaf0, 0xaaf1, 1], [0xabeb, 0xfe52, 21095], [0xfe56, 0xfe57, 1], [0xff01, 0xff0e, 13], [0xff1f, 0xff61, 66],
	],
	R32: [
		[0x10a56, 0x10a57, 1], [0x10f55, 0x10f59, 1], [0x10f86, 0x10f89, 1], [0x11047, 0x11048, 1], [0x110be, 0x110c1, 1], [0x11141, 0x11143, 1],
		[0x111c5, 0x111c6, 1], [0x111cd, 0x111de, 17], [0x111df, 0x11238, 89], [0x11239, 0x1123b, 2], [0x1123c, 0x112a9, 109], [0x1144b, 0x1144c, 1],
		[0x115c2, 0x115c3, 1], [0x115c9, 0x115d7, 1], [0x11641, 0x11642, 1], [0x1173c, 0x1173e, 1], [0x11944, 0x11946, 2], [0x11a42, 0x11a43, 1],
		[0x11a9b, 0x11a9c, 1], [0x11c41, 0x11c42, 1], [0x11ef7, 0x11ef8, 1], [0x11f43, 0x11f44, 1], [0x16a6e, 0x16a6f, 1], [0x16af5, 0x16b37, 66],
		[0x16b38, 0x16b44, 12], [0x16e98, 0x1bc9f, 19975], [0x1da88, 0x1da88, 1],
	],
	LatinOffset: 2,
}

private var _Soft_Dotted:RangeTable = {
	R16: [
		[0x69, 0x6a, 1], [0x12f, 0x249, 282], [0x268, 0x29d, 53], [0x2b2, 0x3f3, 321], [0x456, 0x458, 2], [0x1d62, 0x1d96, 52], [0x1da4, 0x1da8, 4],
		[0x1e2d, 0x1ecb, 158], [0x2071, 0x2148, 215], [0x2149, 0x2c7c, 2867],
	],
	R32: [
		[0x1d422, 0x1d423, 1], [0x1d456, 0x1d457, 1], [0x1d48a, 0x1d48b, 1], [0x1d4be, 0x1d4bf, 1], [0x1d4f2, 0x1d4f3, 1], [0x1d526, 0x1d527, 1],
		[0x1d55a, 0x1d55b, 1], [0x1d58e, 0x1d58f, 1], [0x1d5c2, 0x1d5c3, 1], [0x1d5f6, 0x1d5f7, 1], [0x1d62a, 0x1d62b, 1], [0x1d65e, 0x1d65f, 1],
		[0x1d692, 0x1d693, 1], [0x1df1a, 0x1e04c, 306], [0x1e04d, 0x1e068, 27],
	],
	LatinOffset: 2,
}

private var _Unified_Ideograph:RangeTable = {
	R16: [
		[0x3400, 0x4dbf, 1],
		[0x4e00, 0x9fff, 1],
		[0xfa0e, 0xfa0f, 1],
		[0xfa11, 0xfa13, 2],
		[0xfa14, 0xfa1f, 11],
		[0xfa21, 0xfa23, 2],
		[0xfa24, 0xfa27, 3],
		[0xfa28, 0xfa29, 1],
	],
	R32: [
		[0x20000, 0x2a6df, 1],
		[0x2a700, 0x2b739, 1],
		[0x2b740, 0x2b81d, 1],
		[0x2b820, 0x2cea1, 1],
		[0x2ceb0, 0x2ebe0, 1],
		[0x30000, 0x3134a, 1],
		[0x31350, 0x323af, 1],
	],
	LatinOffset: 2,
}

private var _Hyphen:RangeTable = {
	R16: [
		[0x2d, 0xad, 128],
		[0x58a, 0x1806, 4732],
		[0x2010, 0x2011, 1],
		[0x2e17, 0x30fb, 740],
		[0xfe63, 0xff0d, 170],
		[0xff65, 0xff65, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Noncharacter_Code_Point:RangeTable = {
	R16: [[0xfdd0, 0xfdef, 1], [0xfffe, 0xffff, 1],],
	R32: [
		[0x1fffe, 0x1ffff, 1], [0x2fffe, 0x2ffff, 1], [0x3fffe, 0x3ffff, 1], [0x4fffe, 0x4ffff, 1], [0x5fffe, 0x5ffff, 1], [0x6fffe, 0x6ffff, 1],
		[0x7fffe, 0x7ffff, 1], [0x8fffe, 0x8ffff, 1], [0x9fffe, 0x9ffff, 1], [0xafffe, 0xaffff, 1], [0xbfffe, 0xbffff, 1], [0xcfffe, 0xcffff, 1],
		[0xdfffe, 0xdffff, 1], [0xefffe, 0xeffff, 1], [0xffffe, 0xfffff, 1], [0x10fffe, 0x10ffff, 1],
	],
	LatinOffset: 2,
}

private var _Other_Alphabetic:RangeTable = {
	R16: [
		[0x345, 0x5b0, 619], [0x5b1, 0x5bd, 1], [0x5bf, 0x5c1, 2], [0x5c2, 0x5c4, 2], [0x5c5, 0x5c7, 2], [0x610, 0x61a, 1], [0x64b, 0x657, 1],
		[0x659, 0x65f, 1], [0x670, 0x6d6, 102], [0x6d7, 0x6dc, 1], [0x6e1, 0x6e4, 1], [0x6e7, 0x6e8, 1], [0x6ed, 0x711, 36], [0x730, 0x73f, 1],
		[0x7a6, 0x7b0, 1], [0x816, 0x817, 1], [0x81b, 0x823, 1], [0x825, 0x827, 1], [0x829, 0x82c, 1], [0x8d4, 0x8df, 1], [0x8e3, 0x8e9, 1],
		[0x8f0, 0x903, 1], [0x93a, 0x93b, 1], [0x93e, 0x94c, 1], [0x94e, 0x94f, 1], [0x955, 0x957, 1], [0x962, 0x963, 1], [0x981, 0x983, 1],
		[0x9be, 0x9c4, 1], [0x9c7, 0x9c8, 1], [0x9cb, 0x9cc, 1], [0x9d7, 0x9e2, 11], [0x9e3, 0xa01, 30], [0xa02, 0xa03, 1], [0xa3e, 0xa42, 1],
		[0xa47, 0xa48, 1], [0xa4b, 0xa4c, 1], [0xa51, 0xa70, 31], [0xa71, 0xa75, 4], [0xa81, 0xa83, 1], [0xabe, 0xac5, 1], [0xac7, 0xac9, 1],
		[0xacb, 0xacc, 1], [0xae2, 0xae3, 1], [0xafa, 0xafc, 1], [0xb01, 0xb03, 1], [0xb3e, 0xb44, 1], [0xb47, 0xb48, 1], [0xb4b, 0xb4c, 1],
		[0xb56, 0xb57, 1], [0xb62, 0xb63, 1], [0xb82, 0xbbe, 60], [0xbbf, 0xbc2, 1], [0xbc6, 0xbc8, 1], [0xbca, 0xbcc, 1], [0xbd7, 0xc00, 41],
		[0xc01, 0xc04, 1], [0xc3e, 0xc44, 1], [0xc46, 0xc48, 1], [0xc4a, 0xc4c, 1], [0xc55, 0xc56, 1], [0xc62, 0xc63, 1], [0xc81, 0xc83, 1],
		[0xcbe, 0xcc4, 1], [0xcc6, 0xcc8, 1], [0xcca, 0xccc, 1], [0xcd5, 0xcd6, 1], [0xce2, 0xce3, 1], [0xcf3, 0xd00, 13], [0xd01, 0xd03, 1],
		[0xd3e, 0xd44, 1], [0xd46, 0xd48, 1], [0xd4a, 0xd4c, 1], [0xd57, 0xd62, 11], [0xd63, 0xd81, 30], [0xd82, 0xd83, 1], [0xdcf, 0xdd4, 1],
		[0xdd6, 0xdd8, 2], [0xdd9, 0xddf, 1], [0xdf2, 0xdf3, 1], [0xe31, 0xe34, 3], [0xe35, 0xe3a, 1], [0xe4d, 0xeb1, 100], [0xeb4, 0xeb9, 1],
		[0xebb, 0xebc, 1], [0xecd, 0xf71, 164], [0xf72, 0xf83, 1], [0xf8d, 0xf97, 1], [0xf99, 0xfbc, 1], [0x102b, 0x1036, 1], [0x1038, 0x103b, 3],
		[0x103c, 0x103e, 1], [0x1056, 0x1059, 1], [0x105e, 0x1060, 1], [0x1062, 0x1064, 1], [0x1067, 0x106d, 1], [0x1071, 0x1074, 1], [0x1082, 0x108d, 1],
		[0x108f, 0x109a, 11], [0x109b, 0x109d, 1], [0x1712, 0x1713, 1], [0x1732, 0x1733, 1], [0x1752, 0x1753, 1], [0x1772, 0x1773, 1], [0x17b6, 0x17c8, 1],
		[0x1885, 0x1886, 1], [0x18a9, 0x1920, 119], [0x1921, 0x192b, 1], [0x1930, 0x1938, 1], [0x1a17, 0x1a1b, 1], [0x1a55, 0x1a5e, 1], [0x1a61, 0x1a74, 1],
		[0x1abf, 0x1ac0, 1], [0x1acc, 0x1ace, 1], [0x1b00, 0x1b04, 1], [0x1b35, 0x1b43, 1], [0x1b80, 0x1b82, 1], [0x1ba1, 0x1ba9, 1], [0x1bac, 0x1bad, 1],
		[0x1be7, 0x1bf1, 1], [0x1c24, 0x1c36, 1], [0x1de7, 0x1df4, 1], [0x24b6, 0x24e9, 1], [0x2de0, 0x2dff, 1], [0xa674, 0xa67b, 1], [0xa69e, 0xa69f, 1],
		[0xa802, 0xa80b, 9], [0xa823, 0xa827, 1], [0xa880, 0xa881, 1], [0xa8b4, 0xa8c3, 1], [0xa8c5, 0xa8ff, 58], [0xa926, 0xa92a, 1], [0xa947, 0xa952, 1],
		[0xa980, 0xa983, 1], [0xa9b4, 0xa9bf, 1], [0xa9e5, 0xaa29, 68], [0xaa2a, 0xaa36, 1], [0xaa43, 0xaa4c, 9], [0xaa4d, 0xaa7b, 46], [0xaa7c, 0xaa7d, 1],
		[0xaab0, 0xaab2, 2], [0xaab3, 0xaab4, 1], [0xaab7, 0xaab8, 1], [0xaabe, 0xaaeb, 45], [0xaaec, 0xaaef, 1], [0xaaf5, 0xabe3, 238], [0xabe4, 0xabea, 1],
		[0xfb1e, 0xfb1e, 1],
	],
	R32: [
		[0x10376, 0x1037a, 1], [0x10a01, 0x10a03, 1], [0x10a05, 0x10a06, 1], [0x10a0c, 0x10a0f, 1], [0x10d24, 0x10d27, 1], [0x10eab, 0x10eac, 1],
		[0x11000, 0x11002, 1], [0x11038, 0x11045, 1], [0x11073, 0x11074, 1], [0x11080, 0x11082, 1], [0x110b0, 0x110b8, 1], [0x110c2, 0x11100, 62],
		[0x11101, 0x11102, 1], [0x11127, 0x11132, 1], [0x11145, 0x11146, 1], [0x11180, 0x11182, 1], [0x111b3, 0x111bf, 1], [0x111ce, 0x111cf, 1],
		[0x1122c, 0x11234, 1], [0x11237, 0x1123e, 7], [0x11241, 0x112df, 158], [0x112e0, 0x112e8, 1], [0x11300, 0x11303, 1], [0x1133e, 0x11344, 1],
		[0x11347, 0x11348, 1], [0x1134b, 0x1134c, 1], [0x11357, 0x11362, 11], [0x11363, 0x11435, 210], [0x11436, 0x11441, 1], [0x11443, 0x11445, 1],
		[0x114b0, 0x114c1, 1], [0x115af, 0x115b5, 1], [0x115b8, 0x115be, 1], [0x115dc, 0x115dd, 1], [0x11630, 0x1163e, 1], [0x11640, 0x116ab, 107],
		[0x116ac, 0x116b5, 1], [0x1171d, 0x1172a, 1], [0x1182c, 0x11838, 1], [0x11930, 0x11935, 1], [0x11937, 0x11938, 1], [0x1193b, 0x1193c, 1],
		[0x11940, 0x11942, 2], [0x119d1, 0x119d7, 1], [0x119da, 0x119df, 1], [0x119e4, 0x11a01, 29], [0x11a02, 0x11a0a, 1], [0x11a35, 0x11a39, 1],
		[0x11a3b, 0x11a3e, 1], [0x11a51, 0x11a5b, 1], [0x11a8a, 0x11a97, 1], [0x11c2f, 0x11c36, 1], [0x11c38, 0x11c3e, 1], [0x11c92, 0x11ca7, 1],
		[0x11ca9, 0x11cb6, 1], [0x11d31, 0x11d36, 1], [0x11d3a, 0x11d3c, 2], [0x11d3d, 0x11d3f, 2], [0x11d40, 0x11d41, 1], [0x11d43, 0x11d47, 4],
		[0x11d8a, 0x11d8e, 1], [0x11d90, 0x11d91, 1], [0x11d93, 0x11d96, 1], [0x11ef3, 0x11ef6, 1], [0x11f00, 0x11f01, 1], [0x11f03, 0x11f34, 49],
		[0x11f35, 0x11f3a, 1], [0x11f3e, 0x11f40, 1], [0x16f4f, 0x16f51, 2], [0x16f52, 0x16f87, 1], [0x16f8f, 0x16f92, 1], [0x16ff0, 0x16ff1, 1],
		[0x1bc9e, 0x1e000, 9058], [0x1e001, 0x1e006, 1], [0x1e008, 0x1e018, 1], [0x1e01b, 0x1e021, 1], [0x1e023, 0x1e024, 1], [0x1e026, 0x1e02a, 1],
		[0x1e08f, 0x1e947, 2232], [0x1f130, 0x1f149, 1], [0x1f150, 0x1f169, 1], [0x1f170, 0x1f189, 1],
	],
	LatinOffset: 2,
}

private var _Other_Math:RangeTable = {
	R16: [
		[0x5e, 0x3d0, 882], [0x3d1, 0x3d2, 1], [0x3d5, 0x3f0, 27], [0x3f1, 0x3f4, 3], [0x3f5, 0x2016, 7201], [0x2032, 0x2034, 1], [0x2040, 0x2061, 33],
		[0x2062, 0x2064, 1], [0x207d, 0x207e, 1], [0x208d, 0x208e, 1], [0x20d0, 0x20dc, 1], [0x20e1, 0x20e5, 4], [0x20e6, 0x20eb, 5], [0x20ec, 0x20ef, 1],
		[0x2102, 0x2107, 5], [0x210a, 0x2113, 1], [0x2115, 0x2119, 4], [0x211a, 0x211d, 1], [0x2124, 0x2128, 4], [0x2129, 0x212c, 3], [0x212d, 0x212f, 2],
		[0x2130, 0x2131, 1], [0x2133, 0x2138, 1], [0x213c, 0x213f, 1], [0x2145, 0x2149, 1], [0x2195, 0x2199, 1], [0x219c, 0x219f, 1], [0x21a1, 0x21a2, 1],
		[0x21a4, 0x21a5, 1], [0x21a7, 0x21a9, 2], [0x21aa, 0x21ad, 1], [0x21b0, 0x21b1, 1], [0x21b6, 0x21b7, 1], [0x21bc, 0x21cd, 1], [0x21d0, 0x21d1, 1],
		[0x21d3, 0x21d5, 2], [0x21d6, 0x21db, 1], [0x21dd, 0x21e4, 7], [0x21e5, 0x2308, 291], [0x2309, 0x230b, 1], [0x23b4, 0x23b5, 1], [0x23b7, 0x23d0, 25],
		[0x23e2, 0x25a0, 446], [0x25a1, 0x25ae, 13], [0x25af, 0x25b6, 1], [0x25bc, 0x25c0, 1], [0x25c6, 0x25c7, 1], [0x25ca, 0x25cb, 1], [0x25cf, 0x25d3, 1],
		[0x25e2, 0x25e4, 2], [0x25e7, 0x25ec, 1], [0x2605, 0x2606, 1], [0x2640, 0x2642, 2], [0x2660, 0x2663, 1], [0x266d, 0x266e, 1], [0x27c5, 0x27c6, 1],
		[0x27e6, 0x27ef, 1], [0x2983, 0x2998, 1], [0x29d8, 0x29db, 1], [0x29fc, 0x29fd, 1], [0xfe61, 0xfe63, 2], [0xfe68, 0xff3c, 212], [0xff3e, 0xff3e, 1],
	],
	R32: [
		[0x1d400, 0x1d454, 1], [0x1d456, 0x1d49c, 1], [0x1d49e, 0x1d49f, 1], [0x1d4a2, 0x1d4a5, 3], [0x1d4a6, 0x1d4a9, 3], [0x1d4aa, 0x1d4ac, 1],
		[0x1d4ae, 0x1d4b9, 1], [0x1d4bb, 0x1d4bd, 2], [0x1d4be, 0x1d4c3, 1], [0x1d4c5, 0x1d505, 1], [0x1d507, 0x1d50a, 1], [0x1d50d, 0x1d514, 1],
		[0x1d516, 0x1d51c, 1], [0x1d51e, 0x1d539, 1], [0x1d53b, 0x1d53e, 1], [0x1d540, 0x1d544, 1], [0x1d546, 0x1d54a, 4], [0x1d54b, 0x1d550, 1],
		[0x1d552, 0x1d6a5, 1], [0x1d6a8, 0x1d6c0, 1], [0x1d6c2, 0x1d6da, 1], [0x1d6dc, 0x1d6fa, 1], [0x1d6fc, 0x1d714, 1], [0x1d716, 0x1d734, 1],
		[0x1d736, 0x1d74e, 1], [0x1d750, 0x1d76e, 1], [0x1d770, 0x1d788, 1], [0x1d78a, 0x1d7a8, 1], [0x1d7aa, 0x1d7c2, 1], [0x1d7c4, 0x1d7cb, 1],
		[0x1d7ce, 0x1d7ff, 1], [0x1ee00, 0x1ee03, 1], [0x1ee05, 0x1ee1f, 1], [0x1ee21, 0x1ee22, 1], [0x1ee24, 0x1ee27, 3], [0x1ee29, 0x1ee32, 1],
		[0x1ee34, 0x1ee37, 1], [0x1ee39, 0x1ee3b, 2], [0x1ee42, 0x1ee47, 5], [0x1ee49, 0x1ee4d, 2], [0x1ee4e, 0x1ee4f, 1], [0x1ee51, 0x1ee52, 1],
		[0x1ee54, 0x1ee57, 3], [0x1ee59, 0x1ee61, 2], [0x1ee62, 0x1ee64, 2], [0x1ee67, 0x1ee6a, 1], [0x1ee6c, 0x1ee72, 1], [0x1ee74, 0x1ee77, 1],
		[0x1ee79, 0x1ee7c, 1], [0x1ee7e, 0x1ee80, 2], [0x1ee81, 0x1ee89, 1], [0x1ee8b, 0x1ee9b, 1], [0x1eea1, 0x1eea3, 1], [0x1eea5, 0x1eea9, 1],
		[0x1eeab, 0x1eebb, 1],
	],
	LatinOffset: 2,
}

private var _Prepended_Concatenation_Mark:RangeTable = {
	R16: [[0x600, 0x605, 1], [0x6dd, 0x70f, 50], [0x890, 0x891, 1], [0x8e2, 0x8e2, 1],],
	R32: [[0x110bd, 0x110cd, 16],],
	LatinOffset: 2,
}

private var _Bidi_Control:RangeTable = {
	R16: [
		[0x61c, 0x200e, 6642],
		[0x200f, 0x202a, 27],
		[0x202b, 0x202e, 1],
		[0x2066, 0x2069, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Diacritic:RangeTable = {
	R16: [
		[0x5e, 0x60, 2], [0xa8, 0xaf, 7], [0xb4, 0xb7, 3], [0xb8, 0x2b0, 504], [0x2b1, 0x34e, 1], [0x350, 0x357, 1], [0x35d, 0x362, 1], [0x374, 0x375, 1],
		[0x37a, 0x384, 10], [0x385, 0x483, 254], [0x484, 0x487, 1], [0x559, 0x591, 56], [0x592, 0x5a1, 1], [0x5a3, 0x5bd, 1], [0x5bf, 0x5c1, 2],
		[0x5c2, 0x5c4, 2], [0x64b, 0x652, 1], [0x657, 0x658, 1], [0x6df, 0x6e0, 1], [0x6e5, 0x6e6, 1], [0x6ea, 0x6ec, 1], [0x730, 0x74a, 1],
		[0x7a6, 0x7b0, 1], [0x7eb, 0x7f5, 1], [0x818, 0x819, 1], [0x898, 0x89f, 1], [0x8c9, 0x8d2, 1], [0x8e3, 0x8fe, 1], [0x93c, 0x94d, 17],
		[0x951, 0x954, 1], [0x971, 0x9bc, 75], [0x9cd, 0xa3c, 111], [0xa4d, 0xabc, 111], [0xacd, 0xafd, 48], [0xafe, 0xaff, 1], [0xb3c, 0xb4d, 17],
		[0xb55, 0xbcd, 120], [0xc3c, 0xc4d, 17], [0xcbc, 0xccd, 17], [0xd3b, 0xd3c, 1], [0xd4d, 0xe47, 125], [0xe48, 0xe4c, 1], [0xe4e, 0xeba, 108],
		[0xec8, 0xecc, 1], [0xf18, 0xf19, 1], [0xf35, 0xf39, 2], [0xf3e, 0xf3f, 1], [0xf82, 0xf84, 1], [0xf86, 0xf87, 1], [0xfc6, 0x1037, 113],
		[0x1039, 0x103a, 1], [0x1063, 0x1064, 1], [0x1069, 0x106d, 1], [0x1087, 0x108d, 1], [0x108f, 0x109a, 11], [0x109b, 0x135d, 706], [0x135e, 0x135f, 1],
		[0x1714, 0x1715, 1], [0x17c9, 0x17d3, 1], [0x17dd, 0x1939, 348], [0x193a, 0x193b, 1], [0x1a75, 0x1a7c, 1], [0x1a7f, 0x1ab0, 49], [0x1ab1, 0x1abe, 1],
		[0x1ac1, 0x1acb, 1], [0x1b34, 0x1b44, 16], [0x1b6b, 0x1b73, 1], [0x1baa, 0x1bab, 1], [0x1c36, 0x1c37, 1], [0x1c78, 0x1c7d, 1], [0x1cd0, 0x1ce8, 1],
		[0x1ced, 0x1cf4, 7], [0x1cf7, 0x1cf9, 1], [0x1d2c, 0x1d6a, 1], [0x1dc4, 0x1dcf, 1], [0x1df5, 0x1dff, 1], [0x1fbd, 0x1fbf, 2], [0x1fc0, 0x1fc1, 1],
		[0x1fcd, 0x1fcf, 1], [0x1fdd, 0x1fdf, 1], [0x1fed, 0x1fef, 1], [0x1ffd, 0x1ffe, 1], [0x2cef, 0x2cf1, 1], [0x2e2f, 0x302a, 507], [0x302b, 0x302f, 1],
		[0x3099, 0x309c, 1], [0x30fc, 0xa66f, 30067], [0xa67c, 0xa67d, 1], [0xa67f, 0xa69c, 29], [0xa69d, 0xa6f0, 83], [0xa6f1, 0xa700, 15],
		[0xa701, 0xa721, 1], [0xa788, 0xa78a, 1], [0xa7f8, 0xa7f9, 1], [0xa8c4, 0xa8e0, 28], [0xa8e1, 0xa8f1, 1], [0xa92b, 0xa92e, 1], [0xa953, 0xa9b3, 96],
		[0xa9c0, 0xa9e5, 37], [0xaa7b, 0xaa7d, 1], [0xaabf, 0xaac2, 1], [0xaaf6, 0xab5b, 101], [0xab5c, 0xab5f, 1], [0xab69, 0xab6b, 1], [0xabec, 0xabed, 1],
		[0xfb1e, 0xfe20, 770], [0xfe21, 0xfe2f, 1], [0xff3e, 0xff40, 2], [0xff70, 0xff9e, 46], [0xff9f, 0xffe3, 68],
	],
	R32: [
		[0x102e0, 0x10780, 1184], [0x10781, 0x10785, 1], [0x10787, 0x107b0, 1], [0x107b2, 0x107ba, 1], [0x10ae5, 0x10ae6, 1], [0x10d22, 0x10d27, 1],
		[0x10efd, 0x10eff, 1], [0x10f46, 0x10f50, 1], [0x10f82, 0x10f85, 1], [0x11046, 0x11070, 42], [0x110b9, 0x110ba, 1], [0x11133, 0x11134, 1],
		[0x11173, 0x111c0, 77], [0x111ca, 0x111cc, 1], [0x11235, 0x11236, 1], [0x112e9, 0x112ea, 1], [0x1133c, 0x1134d, 17], [0x11366, 0x1136c, 1],
		[0x11370, 0x11374, 1], [0x11442, 0x11446, 4], [0x114c2, 0x114c3, 1], [0x115bf, 0x115c0, 1], [0x1163f, 0x116b6, 119], [0x116b7, 0x1172b, 116],
		[0x11839, 0x1183a, 1], [0x1193d, 0x1193e, 1], [0x11943, 0x119e0, 157], [0x11a34, 0x11a47, 19], [0x11a99, 0x11c3f, 422], [0x11d42, 0x11d44, 2],
		[0x11d45, 0x11d97, 82], [0x13447, 0x13455, 1], [0x16af0, 0x16af4, 1], [0x16b30, 0x16b36, 1], [0x16f8f, 0x16f9f, 1], [0x16ff0, 0x16ff1, 1],
		[0x1aff0, 0x1aff3, 1], [0x1aff5, 0x1affb, 1], [0x1affd, 0x1affe, 1], [0x1cf00, 0x1cf2d, 1], [0x1cf30, 0x1cf46, 1], [0x1d167, 0x1d169, 1],
		[0x1d16d, 0x1d172, 1], [0x1d17b, 0x1d182, 1], [0x1d185, 0x1d18b, 1], [0x1d1aa, 0x1d1ad, 1], [0x1e030, 0x1e06d, 1], [0x1e130, 0x1e136, 1],
		[0x1e2ae, 0x1e2ec, 62], [0x1e2ed, 0x1e2ef, 1], [0x1e8d0, 0x1e8d6, 1], [0x1e944, 0x1e946, 1], [0x1e948, 0x1e94a, 1],
	],
	LatinOffset: 2,
}

private var _Other_Default_Ignorable_Code_Point:RangeTable = {
	R16: [
		[0x34f, 0x115f, 3600],
		[0x1160, 0x17b4, 1620],
		[0x17b5, 0x2065, 2224],
		[0x3164, 0xffa0, 52796],
		[0xfff0, 0xfff8, 1],
	],
	R32: [
		[0xe0000, 0xe0002, 2],
		[0xe0003, 0xe001f, 1],
		[0xe0080, 0xe00ff, 1],
		[0xe01f0, 0xe0fff, 1],
	],
	LatinOffset: 2,
}

private var _Deprecated:RangeTable = {
	R16: [
		[0x149, 0x673, 1322],
		[0xf77, 0xf79, 2],
		[0x17a3, 0x17a4, 1],
		[0x206a, 0x206f, 1],
		[0x2329, 0x232a, 1],
	],
	R32: [[0xe0001, 0xe0001, 1],],
	LatinOffset: 2,
}

private var _Hex_Digit:RangeTable = {
	R16: [
		[0x30, 0x39, 1],
		[0x41, 0x46, 1],
		[0x61, 0x66, 1],
		[0xff10, 0xff19, 1],
		[0xff21, 0xff26, 1],
		[0xff41, 0xff46, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Radical:RangeTable = {
	R16: [[0x2e80, 0x2e99, 1], [0x2e9b, 0x2ef3, 1], [0x2f00, 0x2fd5, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _IDS_Trinary_Operator:RangeTable = {
	R16: [[0x2ff2, 0x2ff3, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Other_Uppercase:RangeTable = {
	R16: [[0x2160, 0x216f, 1], [0x24b6, 0x24cf, 1],],
	R32: [[0x1f130, 0x1f149, 1], [0x1f150, 0x1f169, 1], [0x1f170, 0x1f189, 1],],
	LatinOffset: 2,
}

private var _STerm:RangeTable = {
	R16: [
		[0x21, 0x2e, 13], [0x3f, 0x589, 1354], [0x61d, 0x61f, 1], [0x6d4, 0x700, 44], [0x701, 0x702, 1], [0x7f9, 0x837, 62], [0x839, 0x83d, 4],
		[0x83e, 0x964, 294], [0x965, 0x104a, 1765], [0x104b, 0x1362, 791], [0x1367, 0x1368, 1], [0x166e, 0x1735, 199], [0x1736, 0x1803, 205],
		[0x1809, 0x1944, 315], [0x1945, 0x1aa8, 355], [0x1aa9, 0x1aab, 1], [0x1b5a, 0x1b5b, 1], [0x1b5e, 0x1b5f, 1], [0x1b7d, 0x1b7e, 1], [0x1c3b, 0x1c3c, 1],
		[0x1c7e, 0x1c7f, 1], [0x203c, 0x203d, 1], [0x2047, 0x2049, 1], [0x2e2e, 0x2e3c, 14], [0x2e53, 0x2e54, 1], [0x3002, 0xa4ff, 29949],
		[0xa60e, 0xa60f, 1], [0xa6f3, 0xa6f7, 4], [0xa876, 0xa877, 1], [0xa8ce, 0xa8cf, 1], [0xa92f, 0xa9c8, 153], [0xa9c9, 0xaa5d, 148], [0xaa5e, 0xaa5f, 1],
		[0xaaf0, 0xaaf1, 1], [0xabeb, 0xfe52, 21095], [0xfe56, 0xfe57, 1], [0xff01, 0xff0e, 13], [0xff1f, 0xff61, 66],
	],
	R32: [
		[0x10a56, 0x10a57, 1], [0x10f55, 0x10f59, 1], [0x10f86, 0x10f89, 1], [0x11047, 0x11048, 1], [0x110be, 0x110c1, 1], [0x11141, 0x11143, 1],
		[0x111c5, 0x111c6, 1], [0x111cd, 0x111de, 17], [0x111df, 0x11238, 89], [0x11239, 0x1123b, 2], [0x1123c, 0x112a9, 109], [0x1144b, 0x1144c, 1],
		[0x115c2, 0x115c3, 1], [0x115c9, 0x115d7, 1], [0x11641, 0x11642, 1], [0x1173c, 0x1173e, 1], [0x11944, 0x11946, 2], [0x11a42, 0x11a43, 1],
		[0x11a9b, 0x11a9c, 1], [0x11c41, 0x11c42, 1], [0x11ef7, 0x11ef8, 1], [0x11f43, 0x11f44, 1], [0x16a6e, 0x16a6f, 1], [0x16af5, 0x16b37, 66],
		[0x16b38, 0x16b44, 12], [0x16e98, 0x1bc9f, 19975], [0x1da88, 0x1da88, 1],
	],
	LatinOffset: 2,
}

private var _ASCII_Hex_Digit:RangeTable = {
	R16: [[0x30, 0x39, 1], [0x41, 0x46, 1], [0x61, 0x66, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Other_ID_Continue:RangeTable = {
	R16: [[0xb7, 0x387, 720], [0x1369, 0x1371, 1], [0x19da, 0x19da, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Other_ID_Start:RangeTable = {
	R16: [[0x1885, 0x1886, 1], [0x2118, 0x212e, 22], [0x309b, 0x309c, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Regional_Indicator:RangeTable = {
	R16: [],
	R32: [[0x1f1e6, 0x1f1ff, 1],],
	LatinOffset: 2,
}

private var _Kayah_Li:RangeTable = {
	R16: [[0xa900, 0xa92d, 1], [0xa92f, 0xa92f, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Wancho:RangeTable = {
	R16: [],
	R32: [[0x1e2c0, 0x1e2f9, 1], [0x1e2ff, 0x1e2ff, 1],],
	LatinOffset: 2,
}

private var _Gurmukhi:RangeTable = {
	R16: [
		[0xa01, 0xa03, 1], [0xa05, 0xa0a, 1], [0xa0f, 0xa10, 1], [0xa13, 0xa28, 1], [0xa2a, 0xa30, 1], [0xa32, 0xa33, 1], [0xa35, 0xa36, 1],
		[0xa38, 0xa39, 1], [0xa3c, 0xa3e, 2], [0xa3f, 0xa42, 1], [0xa47, 0xa48, 1], [0xa4b, 0xa4d, 1], [0xa51, 0xa59, 8], [0xa5a, 0xa5c, 1],
		[0xa5e, 0xa66, 8], [0xa67, 0xa76, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Kannada:RangeTable = {
	R16: [
		[0xc80, 0xc8c, 1], [0xc8e, 0xc90, 1], [0xc92, 0xca8, 1], [0xcaa, 0xcb3, 1], [0xcb5, 0xcb9, 1], [0xcbc, 0xcc4, 1], [0xcc6, 0xcc8, 1],
		[0xcca, 0xccd, 1], [0xcd5, 0xcd6, 1], [0xcdd, 0xcde, 1], [0xce0, 0xce3, 1], [0xce6, 0xcef, 1], [0xcf1, 0xcf3, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Mandaic:RangeTable = {
	R16: [[0x840, 0x85b, 1], [0x85e, 0x85e, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Sinhala:RangeTable = {
	R16: [
		[0xd81, 0xd83, 1], [0xd85, 0xd96, 1], [0xd9a, 0xdb1, 1], [0xdb3, 0xdbb, 1], [0xdbd, 0xdc0, 3], [0xdc1, 0xdc6, 1], [0xdca, 0xdcf, 5],
		[0xdd0, 0xdd4, 1], [0xdd6, 0xdd8, 2], [0xdd9, 0xddf, 1], [0xde6, 0xdef, 1], [0xdf2, 0xdf4, 1],
	],
	R32: [[0x111e1, 0x111f4, 1],],
	LatinOffset: 2,
}

private var _Bopomofo:RangeTable = {
	R16: [[0x2ea, 0x2eb, 1], [0x3105, 0x312f, 1], [0x31a0, 0x31bf, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Chorasmian:RangeTable = {
	R16: [],
	R32: [[0x10fb0, 0x10fcb, 1],],
	LatinOffset: 2,
}

private var _Dives_Akuru:RangeTable = {
	R16: [],
	R32: [
		[0x11900, 0x11906, 1],
		[0x11909, 0x1190c, 3],
		[0x1190d, 0x11913, 1],
		[0x11915, 0x11916, 1],
		[0x11918, 0x11935, 1],
		[0x11937, 0x11938, 1],
		[0x1193b, 0x11946, 1],
		[0x11950, 0x11959, 1],
	],
	LatinOffset: 2,
}

private var _Glagolitic:RangeTable = {
	R16: [[0x2c00, 0x2c5f, 1],],
	R32: [
		[0x1e000, 0x1e006, 1],
		[0x1e008, 0x1e018, 1],
		[0x1e01b, 0x1e021, 1],
		[0x1e023, 0x1e024, 1],
		[0x1e026, 0x1e02a, 1],
	],
	LatinOffset: 2,
}

private var _Ugaritic:RangeTable = {
	R16: [],
	R32: [[0x10380, 0x1039d, 1], [0x1039f, 0x1039f, 1],],
	LatinOffset: 2,
}

private var _Warang_Citi:RangeTable = {
	R16: [],
	R32: [[0x118a0, 0x118f2, 1], [0x118ff, 0x118ff, 1],],
	LatinOffset: 2,
}

private var _Inherited:RangeTable = {
	R16: [
		[0x300, 0x36f, 1], [0x485, 0x486, 1], [0x64b, 0x655, 1], [0x670, 0x951, 737], [0x952, 0x954, 1], [0x1ab0, 0x1ace, 1], [0x1cd0, 0x1cd2, 1],
		[0x1cd4, 0x1ce0, 1], [0x1ce2, 0x1ce8, 1], [0x1ced, 0x1cf4, 7], [0x1cf8, 0x1cf9, 1], [0x1dc0, 0x1dff, 1], [0x200c, 0x200d, 1], [0x20d0, 0x20f0, 1],
		[0x302a, 0x302d, 1], [0x3099, 0x309a, 1], [0xfe00, 0xfe0f, 1], [0xfe20, 0xfe2d, 1],
	],
	R32: [
		[0x101fd, 0x102e0, 227],
		[0x1133b, 0x1cf00, 48069],
		[0x1cf01, 0x1cf2d, 1],
		[0x1cf30, 0x1cf46, 1],
		[0x1d167, 0x1d169, 1],
		[0x1d17b, 0x1d182, 1],
		[0x1d185, 0x1d18b, 1],
		[0x1d1aa, 0x1d1ad, 1],
		[0xe0100, 0xe01ef, 1],
	],
	LatinOffset: 2,
}

private var _Khitan_Small_Script:RangeTable = {
	R16: [],
	R32: [[0x16fe4, 0x18b00, 6940], [0x18b01, 0x18cd5, 1],],
	LatinOffset: 2,
}

private var _Old_Sogdian:RangeTable = {
	R16: [],
	R32: [[0x10f00, 0x10f27, 1],],
	LatinOffset: 2,
}

private var _Old_Turkic:RangeTable = {
	R16: [],
	R32: [[0x10c00, 0x10c48, 1],],
	LatinOffset: 2,
}

private var _Buginese:RangeTable = {
	R16: [[0x1a00, 0x1a1b, 1], [0x1a1e, 0x1a1f, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Khmer:RangeTable = {
	R16: [
		[0x1780, 0x17dd, 1],
		[0x17e0, 0x17e9, 1],
		[0x17f0, 0x17f9, 1],
		[0x19e0, 0x19ff, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Malayalam:RangeTable = {
	R16: [
		[0xd00, 0xd0c, 1],
		[0xd0e, 0xd10, 1],
		[0xd12, 0xd44, 1],
		[0xd46, 0xd48, 1],
		[0xd4a, 0xd4f, 1],
		[0xd54, 0xd63, 1],
		[0xd66, 0xd7f, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Medefaidrin:RangeTable = {
	R16: [],
	R32: [[0x16e40, 0x16e9a, 1],],
	LatinOffset: 2,
}

private var _Phags_Pa:RangeTable = {
	R16: [[0xa840, 0xa877, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Tibetan:RangeTable = {
	R16: [
		[0xf00, 0xf47, 1],
		[0xf49, 0xf6c, 1],
		[0xf71, 0xf97, 1],
		[0xf99, 0xfbc, 1],
		[0xfbe, 0xfcc, 1],
		[0xfce, 0xfd4, 1],
		[0xfd9, 0xfda, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Avestan:RangeTable = {
	R16: [],
	R32: [[0x10b00, 0x10b35, 1], [0x10b39, 0x10b3f, 1],],
	LatinOffset: 2,
}

private var _Ethiopic:RangeTable = {
	R16: [
		[0x1200, 0x1248, 1], [0x124a, 0x124d, 1], [0x1250, 0x1256, 1], [0x1258, 0x125a, 2], [0x125b, 0x125d, 1], [0x1260, 0x1288, 1], [0x128a, 0x128d, 1],
		[0x1290, 0x12b0, 1], [0x12b2, 0x12b5, 1], [0x12b8, 0x12be, 1], [0x12c0, 0x12c2, 2], [0x12c3, 0x12c5, 1], [0x12c8, 0x12d6, 1], [0x12d8, 0x1310, 1],
		[0x1312, 0x1315, 1], [0x1318, 0x135a, 1], [0x135d, 0x137c, 1], [0x1380, 0x1399, 1], [0x2d80, 0x2d96, 1], [0x2da0, 0x2da6, 1], [0x2da8, 0x2dae, 1],
		[0x2db0, 0x2db6, 1], [0x2db8, 0x2dbe, 1], [0x2dc0, 0x2dc6, 1], [0x2dc8, 0x2dce, 1], [0x2dd0, 0x2dd6, 1], [0x2dd8, 0x2dde, 1], [0xab01, 0xab06, 1],
		[0xab09, 0xab0e, 1], [0xab11, 0xab16, 1], [0xab20, 0xab26, 1], [0xab28, 0xab2e, 1],
	],
	R32: [
		[0x1e7e0, 0x1e7e6, 1],
		[0x1e7e8, 0x1e7eb, 1],
		[0x1e7ed, 0x1e7ee, 1],
		[0x1e7f0, 0x1e7fe, 1],
	],
	LatinOffset: 2,
}

private var _Greek:RangeTable = {
	R16: [
		[0x370, 0x373, 1], [0x375, 0x377, 1], [0x37a, 0x37d, 1], [0x37f, 0x384, 5], [0x386, 0x388, 2], [0x389, 0x38a, 1], [0x38c, 0x38e, 2],
		[0x38f, 0x3a1, 1], [0x3a3, 0x3e1, 1], [0x3f0, 0x3ff, 1], [0x1d26, 0x1d2a, 1], [0x1d5d, 0x1d61, 1], [0x1d66, 0x1d6a, 1], [0x1dbf, 0x1f00, 321],
		[0x1f01, 0x1f15, 1], [0x1f18, 0x1f1d, 1], [0x1f20, 0x1f45, 1], [0x1f48, 0x1f4d, 1], [0x1f50, 0x1f57, 1], [0x1f59, 0x1f5f, 2], [0x1f60, 0x1f7d, 1],
		[0x1f80, 0x1fb4, 1], [0x1fb6, 0x1fc4, 1], [0x1fc6, 0x1fd3, 1], [0x1fd6, 0x1fdb, 1], [0x1fdd, 0x1fef, 1], [0x1ff2, 0x1ff4, 1], [0x1ff6, 0x1ffe, 1],
		[0x2126, 0xab65, 35391],
	],
	R32: [[0x10140, 0x1018e, 1], [0x101a0, 0x1d200, 53344], [0x1d201, 0x1d245, 1],],
	LatinOffset: 2,
}

private var _Nushu:RangeTable = {
	R16: [],
	R32: [[0x16fe1, 0x1b170, 16783], [0x1b171, 0x1b2fb, 1],],
	LatinOffset: 2,
}

private var _Lydian:RangeTable = {
	R16: [],
	R32: [[0x10920, 0x10939, 1], [0x1093f, 0x1093f, 1],],
	LatinOffset: 2,
}

private var _Tangut:RangeTable = {
	R16: [],
	R32: [
		[0x16fe0, 0x17000, 32],
		[0x17001, 0x187f7, 1],
		[0x18800, 0x18aff, 1],
		[0x18d00, 0x18d08, 1],
	],
	LatinOffset: 2,
}

private var _Anatolian_Hieroglyphs:RangeTable = {
	R16: [],
	R32: [[0x14400, 0x14646, 1],],
	LatinOffset: 2,
}

private var _Brahmi:RangeTable = {
	R16: [],
	R32: [[0x11000, 0x1104d, 1], [0x11052, 0x11075, 1], [0x1107f, 0x1107f, 1],],
	LatinOffset: 2,
}

private var _Hanunoo:RangeTable = {
	R16: [[0x1720, 0x1734, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Lycian:RangeTable = {
	R16: [],
	R32: [[0x10280, 0x1029c, 1],],
	LatinOffset: 2,
}

private var _Tirhuta:RangeTable = {
	R16: [],
	R32: [[0x11480, 0x114c7, 1], [0x114d0, 0x114d9, 1],],
	LatinOffset: 2,
}

private var _Ahom:RangeTable = {
	R16: [],
	R32: [[0x11700, 0x1171a, 1], [0x1171d, 0x1172b, 1], [0x11730, 0x11746, 1],],
	LatinOffset: 2,
}

private var _Cuneiform:RangeTable = {
	R16: [],
	R32: [
		[0x12000, 0x12399, 1],
		[0x12400, 0x1246e, 1],
		[0x12470, 0x12474, 1],
		[0x12480, 0x12543, 1],
	],
	LatinOffset: 2,
}

private var _Hanifi_Rohingya:RangeTable = {
	R16: [],
	R32: [[0x10d00, 0x10d27, 1], [0x10d30, 0x10d39, 1],],
	LatinOffset: 2,
}

private var _Mende_Kikakui:RangeTable = {
	R16: [],
	R32: [[0x1e800, 0x1e8c4, 1], [0x1e8c7, 0x1e8d6, 1],],
	LatinOffset: 2,
}

private var _Takri:RangeTable = {
	R16: [],
	R32: [[0x11680, 0x116b9, 1], [0x116c0, 0x116c9, 1],],
	LatinOffset: 2,
}

private var _Cherokee:RangeTable = {
	R16: [[0x13a0, 0x13f5, 1], [0x13f8, 0x13fd, 1], [0xab70, 0xabbf, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Mahajani:RangeTable = {
	R16: [],
	R32: [[0x11150, 0x11176, 1],],
	LatinOffset: 2,
}

private var _Mongolian:RangeTable = {
	R16: [
		[0x1800, 0x1801, 1],
		[0x1804, 0x1806, 2],
		[0x1807, 0x1819, 1],
		[0x1820, 0x1878, 1],
		[0x1880, 0x18aa, 1],
	],
	R32: [[0x11660, 0x1166c, 1],],
	LatinOffset: 2,
}

private var _Syloti_Nagri:RangeTable = {
	R16: [[0xa800, 0xa82c, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Palmyrene:RangeTable = {
	R16: [],
	R32: [[0x10860, 0x1087f, 1],],
	LatinOffset: 2,
}

private var _Runic:RangeTable = {
	R16: [[0x16a0, 0x16ea, 1], [0x16ee, 0x16f8, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Coptic:RangeTable = {
	R16: [[0x3e2, 0x3ef, 1], [0x2c80, 0x2cf3, 1], [0x2cf9, 0x2cff, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Gothic:RangeTable = {
	R16: [],
	R32: [[0x10330, 0x1034a, 1],],
	LatinOffset: 2,
}

private var _Makasar:RangeTable = {
	R16: [],
	R32: [[0x11ee0, 0x11ef8, 1],],
	LatinOffset: 2,
}

private var _Multani:RangeTable = {
	R16: [],
	R32: [
		[0x11280, 0x11286, 1],
		[0x11288, 0x1128a, 2],
		[0x1128b, 0x1128d, 1],
		[0x1128f, 0x1129d, 1],
		[0x1129f, 0x112a9, 1],
	],
	LatinOffset: 2,
}

private var _Telugu:RangeTable = {
	R16: [
		[0xc00, 0xc0c, 1], [0xc0e, 0xc10, 1], [0xc12, 0xc28, 1], [0xc2a, 0xc39, 1], [0xc3c, 0xc44, 1], [0xc46, 0xc48, 1], [0xc4a, 0xc4d, 1],
		[0xc55, 0xc56, 1], [0xc58, 0xc5a, 1], [0xc5d, 0xc60, 3], [0xc61, 0xc63, 1], [0xc66, 0xc6f, 1], [0xc77, 0xc7f, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Vai:RangeTable = {
	R16: [[0xa500, 0xa62b, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Cypro_Minoan:RangeTable = {
	R16: [],
	R32: [[0x12f90, 0x12ff2, 1],],
	LatinOffset: 2,
}

private var _Hiragana:RangeTable = {
	R16: [[0x3041, 0x3096, 1], [0x309d, 0x309f, 1],],
	R32: [
		[0x1b001, 0x1b11f, 1],
		[0x1b132, 0x1b150, 30],
		[0x1b151, 0x1b152, 1],
		[0x1f200, 0x1f200, 1],
	],
	LatinOffset: 2,
}

private var _Ol_Chiki:RangeTable = {
	R16: [[0x1c50, 0x1c7f, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Saurashtra:RangeTable = {
	R16: [[0xa880, 0xa8c5, 1], [0xa8ce, 0xa8d9, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Bengali:RangeTable = {
	R16: [
		[0x980, 0x983, 1], [0x985, 0x98c, 1], [0x98f, 0x990, 1], [0x993, 0x9a8, 1], [0x9aa, 0x9b0, 1], [0x9b2, 0x9b6, 4], [0x9b7, 0x9b9, 1],
		[0x9bc, 0x9c4, 1], [0x9c7, 0x9c8, 1], [0x9cb, 0x9ce, 1], [0x9d7, 0x9dc, 5], [0x9dd, 0x9df, 2], [0x9e0, 0x9e3, 1], [0x9e6, 0x9fe, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Buhid:RangeTable = {
	R16: [[0x1740, 0x1753, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Gunjala_Gondi:RangeTable = {
	R16: [],
	R32: [
		[0x11d60, 0x11d65, 1],
		[0x11d67, 0x11d68, 1],
		[0x11d6a, 0x11d8e, 1],
		[0x11d90, 0x11d91, 1],
		[0x11d93, 0x11d98, 1],
		[0x11da0, 0x11da9, 1],
	],
	LatinOffset: 2,
}

private var _Meroitic_Cursive:RangeTable = {
	R16: [],
	R32: [[0x109a0, 0x109b7, 1], [0x109bc, 0x109cf, 1], [0x109d2, 0x109ff, 1],],
	LatinOffset: 2,
}

private var _Sogdian:RangeTable = {
	R16: [],
	R32: [[0x10f30, 0x10f59, 1],],
	LatinOffset: 2,
}

private var _Tagbanwa:RangeTable = {
	R16: [[0x1760, 0x176c, 1], [0x176e, 0x1770, 1], [0x1772, 0x1773, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Armenian:RangeTable = {
	R16: [[0x531, 0x556, 1], [0x559, 0x58a, 1], [0x58d, 0x58f, 1], [0xfb13, 0xfb17, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Hangul:RangeTable = {
	R16: [
		[0x1100, 0x11ff, 1], [0x302e, 0x302f, 1], [0x3131, 0x318e, 1], [0x3200, 0x321e, 1], [0x3260, 0x327e, 1], [0xa960, 0xa97c, 1], [0xac00, 0xd7a3, 1],
		[0xd7b0, 0xd7c6, 1], [0xd7cb, 0xd7fb, 1], [0xffa0, 0xffbe, 1], [0xffc2, 0xffc7, 1], [0xffca, 0xffcf, 1], [0xffd2, 0xffd7, 1], [0xffda, 0xffdc, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Lisu:RangeTable = {
	R16: [[0xa4d0, 0xa4ff, 1],],
	R32: [[0x11fb0, 0x11fb0, 1],],
	LatinOffset: 2,
}

private var _Siddham:RangeTable = {
	R16: [],
	R32: [[0x11580, 0x115b5, 1], [0x115b8, 0x115dd, 1],],
	LatinOffset: 2,
}

private var _Lao:RangeTable = {
	R16: [
		[0xe81, 0xe82, 1], [0xe84, 0xe86, 2], [0xe87, 0xe8a, 1], [0xe8c, 0xea3, 1], [0xea5, 0xea7, 2], [0xea8, 0xebd, 1], [0xec0, 0xec4, 1],
		[0xec6, 0xec8, 2], [0xec9, 0xece, 1], [0xed0, 0xed9, 1], [0xedc, 0xedf, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Myanmar:RangeTable = {
	R16: [[0x1000, 0x109f, 1], [0xa9e0, 0xa9fe, 1], [0xaa60, 0xaa7f, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _New_Tai_Lue:RangeTable = {
	R16: [
		[0x1980, 0x19ab, 1],
		[0x19b0, 0x19c9, 1],
		[0x19d0, 0x19da, 1],
		[0x19de, 0x19df, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Thaana:RangeTable = {
	R16: [[0x780, 0x7b1, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Hatran:RangeTable = {
	R16: [],
	R32: [[0x108e0, 0x108f2, 1], [0x108f4, 0x108f5, 1], [0x108fb, 0x108ff, 1],],
	LatinOffset: 2,
}

private var _Hebrew:RangeTable = {
	R16: [
		[0x591, 0x5c7, 1],
		[0x5d0, 0x5ea, 1],
		[0x5ef, 0x5f4, 1],
		[0xfb1d, 0xfb36, 1],
		[0xfb38, 0xfb3c, 1],
		[0xfb3e, 0xfb40, 2],
		[0xfb41, 0xfb43, 2],
		[0xfb44, 0xfb46, 2],
		[0xfb47, 0xfb4f, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Kharoshthi:RangeTable = {
	R16: [],
	R32: [
		[0x10a00, 0x10a03, 1],
		[0x10a05, 0x10a06, 1],
		[0x10a0c, 0x10a13, 1],
		[0x10a15, 0x10a17, 1],
		[0x10a19, 0x10a35, 1],
		[0x10a38, 0x10a3a, 1],
		[0x10a3f, 0x10a48, 1],
		[0x10a50, 0x10a58, 1],
	],
	LatinOffset: 2,
}

private var _Khojki:RangeTable = {
	R16: [],
	R32: [[0x11200, 0x11211, 1], [0x11213, 0x11241, 1],],
	LatinOffset: 2,
}

private var _Pahawh_Hmong:RangeTable = {
	R16: [],
	R32: [
		[0x16b00, 0x16b45, 1],
		[0x16b50, 0x16b59, 1],
		[0x16b5b, 0x16b61, 1],
		[0x16b63, 0x16b77, 1],
		[0x16b7d, 0x16b8f, 1],
	],
	LatinOffset: 2,
}

private var _Tamil:RangeTable = {
	R16: [
		[0xb82, 0xb83, 1], [0xb85, 0xb8a, 1], [0xb8e, 0xb90, 1], [0xb92, 0xb95, 1], [0xb99, 0xb9a, 1], [0xb9c, 0xb9e, 2], [0xb9f, 0xba3, 4],
		[0xba4, 0xba8, 4], [0xba9, 0xbaa, 1], [0xbae, 0xbb9, 1], [0xbbe, 0xbc2, 1], [0xbc6, 0xbc8, 1], [0xbca, 0xbcd, 1], [0xbd0, 0xbd7, 7], [0xbe6, 0xbfa, 1],
	],
	R32: [[0x11fc0, 0x11ff1, 1], [0x11fff, 0x11fff, 1],],
	LatinOffset: 2,
}

private var _Common:RangeTable = {
	R16: [
		[0x0, 0x40, 1], [0x5b, 0x60, 1], [0x7b, 0xa9, 1], [0xab, 0xb9, 1], [0xbb, 0xbf, 1], [0xd7, 0xf7, 32], [0x2b9, 0x2df, 1], [0x2e5, 0x2e9, 1],
		[0x2ec, 0x2ff, 1], [0x374, 0x37e, 10], [0x385, 0x387, 2], [0x605, 0x60c, 7], [0x61b, 0x61f, 4], [0x640, 0x6dd, 157], [0x8e2, 0x964, 130],
		[0x965, 0xe3f, 1242], [0xfd5, 0xfd8, 1], [0x10fb, 0x16eb, 1520], [0x16ec, 0x16ed, 1], [0x1735, 0x1736, 1], [0x1802, 0x1803, 1],
		[0x1805, 0x1cd3, 1230], [0x1ce1, 0x1ce9, 8], [0x1cea, 0x1cec, 1], [0x1cee, 0x1cf3, 1], [0x1cf5, 0x1cf7, 1], [0x1cfa, 0x2000, 774],
		[0x2001, 0x200b, 1], [0x200e, 0x2064, 1], [0x2066, 0x2070, 1], [0x2074, 0x207e, 1], [0x2080, 0x208e, 1], [0x20a0, 0x20c0, 1], [0x2100, 0x2125, 1],
		[0x2127, 0x2129, 1], [0x212c, 0x2131, 1], [0x2133, 0x214d, 1], [0x214f, 0x215f, 1], [0x2189, 0x218b, 1], [0x2190, 0x2426, 1], [0x2440, 0x244a, 1],
		[0x2460, 0x27ff, 1], [0x2900, 0x2b73, 1], [0x2b76, 0x2b95, 1], [0x2b97, 0x2bff, 1], [0x2e00, 0x2e5d, 1], [0x2ff0, 0x2ffb, 1], [0x3000, 0x3004, 1],
		[0x3006, 0x3008, 2], [0x3009, 0x3020, 1], [0x3030, 0x3037, 1], [0x303c, 0x303f, 1], [0x309b, 0x309c, 1], [0x30a0, 0x30fb, 91], [0x30fc, 0x3190, 148],
		[0x3191, 0x319f, 1], [0x31c0, 0x31e3, 1], [0x3220, 0x325f, 1], [0x327f, 0x32cf, 1], [0x32ff, 0x3358, 89], [0x3359, 0x33ff, 1], [0x4dc0, 0x4dff, 1],
		[0xa700, 0xa721, 1], [0xa788, 0xa78a, 1], [0xa830, 0xa839, 1], [0xa92e, 0xa9cf, 161], [0xab5b, 0xab6a, 15], [0xab6b, 0xfd3e, 20947],
		[0xfd3f, 0xfe10, 209], [0xfe11, 0xfe19, 1], [0xfe30, 0xfe52, 1], [0xfe54, 0xfe66, 1], [0xfe68, 0xfe6b, 1], [0xfeff, 0xff01, 2], [0xff02, 0xff20, 1],
		[0xff3b, 0xff40, 1], [0xff5b, 0xff65, 1], [0xff70, 0xff9e, 46], [0xff9f, 0xffe0, 65], [0xffe1, 0xffe6, 1], [0xffe8, 0xffee, 1], [0xfff9, 0xfffd, 1],
	],
	R32: [
		[0x10100, 0x10102, 1], [0x10107, 0x10133, 1], [0x10137, 0x1013f, 1], [0x10190, 0x1019c, 1], [0x101d0, 0x101fc, 1], [0x102e1, 0x102fb, 1],
		[0x1bca0, 0x1bca3, 1], [0x1cf50, 0x1cfc3, 1], [0x1d000, 0x1d0f5, 1], [0x1d100, 0x1d126, 1], [0x1d129, 0x1d166, 1], [0x1d16a, 0x1d17a, 1],
		[0x1d183, 0x1d184, 1], [0x1d18c, 0x1d1a9, 1], [0x1d1ae, 0x1d1ea, 1], [0x1d2c0, 0x1d2d3, 1], [0x1d2e0, 0x1d2f3, 1], [0x1d300, 0x1d356, 1],
		[0x1d360, 0x1d378, 1], [0x1d400, 0x1d454, 1], [0x1d456, 0x1d49c, 1], [0x1d49e, 0x1d49f, 1], [0x1d4a2, 0x1d4a5, 3], [0x1d4a6, 0x1d4a9, 3],
		[0x1d4aa, 0x1d4ac, 1], [0x1d4ae, 0x1d4b9, 1], [0x1d4bb, 0x1d4bd, 2], [0x1d4be, 0x1d4c3, 1], [0x1d4c5, 0x1d505, 1], [0x1d507, 0x1d50a, 1],
		[0x1d50d, 0x1d514, 1], [0x1d516, 0x1d51c, 1], [0x1d51e, 0x1d539, 1], [0x1d53b, 0x1d53e, 1], [0x1d540, 0x1d544, 1], [0x1d546, 0x1d54a, 4],
		[0x1d54b, 0x1d550, 1], [0x1d552, 0x1d6a5, 1], [0x1d6a8, 0x1d7cb, 1], [0x1d7ce, 0x1d7ff, 1], [0x1ec71, 0x1ecb4, 1], [0x1ed01, 0x1ed3d, 1],
		[0x1f000, 0x1f02b, 1], [0x1f030, 0x1f093, 1], [0x1f0a0, 0x1f0ae, 1], [0x1f0b1, 0x1f0bf, 1], [0x1f0c1, 0x1f0cf, 1], [0x1f0d1, 0x1f0f5, 1],
		[0x1f100, 0x1f1ad, 1], [0x1f1e6, 0x1f1ff, 1], [0x1f201, 0x1f202, 1], [0x1f210, 0x1f23b, 1], [0x1f240, 0x1f248, 1], [0x1f250, 0x1f251, 1],
		[0x1f260, 0x1f265, 1], [0x1f300, 0x1f6d7, 1], [0x1f6dc, 0x1f6ec, 1], [0x1f6f0, 0x1f6fc, 1], [0x1f700, 0x1f776, 1], [0x1f77b, 0x1f7d9, 1],
		[0x1f7e0, 0x1f7eb, 1], [0x1f7f0, 0x1f800, 16], [0x1f801, 0x1f80b, 1], [0x1f810, 0x1f847, 1], [0x1f850, 0x1f859, 1], [0x1f860, 0x1f887, 1],
		[0x1f890, 0x1f8ad, 1], [0x1f8b0, 0x1f8b1, 1], [0x1f900, 0x1fa53, 1], [0x1fa60, 0x1fa6d, 1], [0x1fa70, 0x1fa7c, 1], [0x1fa80, 0x1fa88, 1],
		[0x1fa90, 0x1fabd, 1], [0x1fabf, 0x1fac5, 1], [0x1face, 0x1fadb, 1], [0x1fae0, 0x1fae8, 1], [0x1faf0, 0x1faf8, 1], [0x1fb00, 0x1fb92, 1],
		[0x1fb94, 0x1fbca, 1], [0x1fbf0, 0x1fbf9, 1], [0xe0001, 0xe0020, 31], [0xe0021, 0xe007f, 1],
	],
	LatinOffset: 2,
}

private var _Deseret:RangeTable = {
	R16: [],
	R32: [[0x10400, 0x1044f, 1],],
	LatinOffset: 2,
}

private var _Inscriptional_Parthian:RangeTable = {
	R16: [],
	R32: [[0x10b40, 0x10b55, 1], [0x10b58, 0x10b5f, 1],],
	LatinOffset: 2,
}

private var _Nyiakeng_Puachue_Hmong:RangeTable = {
	R16: [],
	R32: [
		[0x1e100, 0x1e12c, 1],
		[0x1e130, 0x1e13d, 1],
		[0x1e140, 0x1e149, 1],
		[0x1e14e, 0x1e14f, 1],
	],
	LatinOffset: 2,
}

private var _Phoenician:RangeTable = {
	R16: [],
	R32: [[0x10900, 0x1091b, 1], [0x1091f, 0x1091f, 1],],
	LatinOffset: 2,
}

private var _Bhaiksuki:RangeTable = {
	R16: [],
	R32: [
		[0x11c00, 0x11c08, 1],
		[0x11c0a, 0x11c36, 1],
		[0x11c38, 0x11c45, 1],
		[0x11c50, 0x11c6c, 1],
	],
	LatinOffset: 2,
}

private var _Masaram_Gondi:RangeTable = {
	R16: [],
	R32: [
		[0x11d00, 0x11d06, 1],
		[0x11d08, 0x11d09, 1],
		[0x11d0b, 0x11d36, 1],
		[0x11d3a, 0x11d3c, 2],
		[0x11d3d, 0x11d3f, 2],
		[0x11d40, 0x11d47, 1],
		[0x11d50, 0x11d59, 1],
	],
	LatinOffset: 2,
}

private var _Osage:RangeTable = {
	R16: [],
	R32: [[0x104b0, 0x104d3, 1], [0x104d8, 0x104fb, 1],],
	LatinOffset: 2,
}

private var _Osmanya:RangeTable = {
	R16: [],
	R32: [[0x10480, 0x1049d, 1], [0x104a0, 0x104a9, 1],],
	LatinOffset: 2,
}

private var _Grantha:RangeTable = {
	R16: [],
	R32: [
		[0x11300, 0x11303, 1], [0x11305, 0x1130c, 1], [0x1130f, 0x11310, 1], [0x11313, 0x11328, 1], [0x1132a, 0x11330, 1], [0x11332, 0x11333, 1],
		[0x11335, 0x11339, 1], [0x1133c, 0x11344, 1], [0x11347, 0x11348, 1], [0x1134b, 0x1134d, 1], [0x11350, 0x11357, 7], [0x1135d, 0x11363, 1],
		[0x11366, 0x1136c, 1], [0x11370, 0x11374, 1],
	],
	LatinOffset: 2,
}

private var _Gujarati:RangeTable = {
	R16: [
		[0xa81, 0xa83, 1], [0xa85, 0xa8d, 1], [0xa8f, 0xa91, 1], [0xa93, 0xaa8, 1], [0xaaa, 0xab0, 1], [0xab2, 0xab3, 1], [0xab5, 0xab9, 1],
		[0xabc, 0xac5, 1], [0xac7, 0xac9, 1], [0xacb, 0xacd, 1], [0xad0, 0xae0, 16], [0xae1, 0xae3, 1], [0xae6, 0xaf1, 1], [0xaf9, 0xaff, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Old_Italic:RangeTable = {
	R16: [],
	R32: [[0x10300, 0x10323, 1], [0x1032d, 0x1032f, 1],],
	LatinOffset: 2,
}

private var _Oriya:RangeTable = {
	R16: [
		[0xb01, 0xb03, 1], [0xb05, 0xb0c, 1], [0xb0f, 0xb10, 1], [0xb13, 0xb28, 1], [0xb2a, 0xb30, 1], [0xb32, 0xb33, 1], [0xb35, 0xb39, 1],
		[0xb3c, 0xb44, 1], [0xb47, 0xb48, 1], [0xb4b, 0xb4d, 1], [0xb55, 0xb57, 1], [0xb5c, 0xb5d, 1], [0xb5f, 0xb63, 1], [0xb66, 0xb77, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Meroitic_Hieroglyphs:RangeTable = {
	R16: [],
	R32: [[0x10980, 0x1099f, 1],],
	LatinOffset: 2,
}

private var _Modi:RangeTable = {
	R16: [],
	R32: [[0x11600, 0x11644, 1], [0x11650, 0x11659, 1],],
	LatinOffset: 2,
}

private var _Toto:RangeTable = {
	R16: [],
	R32: [[0x1e290, 0x1e2ae, 1],],
	LatinOffset: 2,
}

private var _Yi:RangeTable = {
	R16: [[0xa000, 0xa48c, 1], [0xa490, 0xa4c6, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Sharada:RangeTable = {
	R16: [],
	R32: [[0x11180, 0x111df, 1],],
	LatinOffset: 2,
}

private var _Tifinagh:RangeTable = {
	R16: [[0x2d30, 0x2d67, 1], [0x2d6f, 0x2d70, 1], [0x2d7f, 0x2d7f, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Han:RangeTable = {
	R16: [
		[0x2e80, 0x2e99, 1], [0x2e9b, 0x2ef3, 1], [0x2f00, 0x2fd5, 1], [0x3005, 0x3007, 2], [0x3021, 0x3029, 1], [0x3038, 0x303b, 1], [0x3400, 0x4dbf, 1],
		[0x4e00, 0x9fff, 1], [0xf900, 0xfa6d, 1], [0xfa70, 0xfad9, 1],
	],
	R32: [
		[0x16fe2, 0x16fe3, 1], [0x16ff0, 0x16ff1, 1], [0x20000, 0x2a6df, 1], [0x2a700, 0x2b739, 1], [0x2b740, 0x2b81d, 1], [0x2b820, 0x2cea1, 1],
		[0x2ceb0, 0x2ebe0, 1], [0x2f800, 0x2fa1d, 1], [0x30000, 0x3134a, 1], [0x31350, 0x323af, 1],
	],
	LatinOffset: 2,
}

private var _Bassa_Vah:RangeTable = {
	R16: [],
	R32: [[0x16ad0, 0x16aed, 1], [0x16af0, 0x16af5, 1],],
	LatinOffset: 2,
}

private var _Carian:RangeTable = {
	R16: [],
	R32: [[0x102a0, 0x102d0, 1],],
	LatinOffset: 2,
}

private var _Devanagari:RangeTable = {
	R16: [[0x900, 0x950, 1], [0x955, 0x963, 1], [0x966, 0x97f, 1], [0xa8e0, 0xa8ff, 1],],
	R32: [[0x11b00, 0x11b09, 1],],
	LatinOffset: 2,
}

private var _Elbasan:RangeTable = {
	R16: [],
	R32: [[0x10500, 0x10527, 1],],
	LatinOffset: 2,
}

private var _Chakma:RangeTable = {
	R16: [],
	R32: [[0x11100, 0x11134, 1], [0x11136, 0x11147, 1],],
	LatinOffset: 2,
}

private var _Inscriptional_Pahlavi:RangeTable = {
	R16: [],
	R32: [[0x10b60, 0x10b72, 1], [0x10b78, 0x10b7f, 1],],
	LatinOffset: 2,
}

private var _Katakana:RangeTable = {
	R16: [
		[0x30a1, 0x30fa, 1],
		[0x30fd, 0x30ff, 1],
		[0x31f0, 0x31ff, 1],
		[0x32d0, 0x32fe, 1],
		[0x3300, 0x3357, 1],
		[0xff66, 0xff6f, 1],
		[0xff71, 0xff9d, 1],
	],
	R32: [
		[0x1aff0, 0x1aff3, 1],
		[0x1aff5, 0x1affb, 1],
		[0x1affd, 0x1affe, 1],
		[0x1b000, 0x1b120, 288],
		[0x1b121, 0x1b122, 1],
		[0x1b155, 0x1b164, 15],
		[0x1b165, 0x1b167, 1],
	],
	LatinOffset: 2,
}

private var _Thai:RangeTable = {
	R16: [[0xe01, 0xe3a, 1], [0xe40, 0xe5b, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Soyombo:RangeTable = {
	R16: [],
	R32: [[0x11a50, 0x11aa2, 1],],
	LatinOffset: 2,
}

private var _Tai_Le:RangeTable = {
	R16: [[0x1950, 0x196d, 1], [0x1970, 0x1974, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Tai_Tham:RangeTable = {
	R16: [
		[0x1a20, 0x1a5e, 1],
		[0x1a60, 0x1a7c, 1],
		[0x1a7f, 0x1a89, 1],
		[0x1a90, 0x1a99, 1],
		[0x1aa0, 0x1aad, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Tai_Viet:RangeTable = {
	R16: [[0xaa80, 0xaac2, 1], [0xaadb, 0xaadf, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Kawi:RangeTable = {
	R16: [],
	R32: [[0x11f00, 0x11f10, 1], [0x11f12, 0x11f3a, 1], [0x11f3e, 0x11f59, 1],],
	LatinOffset: 2,
}

private var _Linear_A:RangeTable = {
	R16: [],
	R32: [[0x10600, 0x10736, 1], [0x10740, 0x10755, 1], [0x10760, 0x10767, 1],],
	LatinOffset: 2,
}

private var _Mro:RangeTable = {
	R16: [],
	R32: [[0x16a40, 0x16a5e, 1], [0x16a60, 0x16a69, 1], [0x16a6e, 0x16a6f, 1],],
	LatinOffset: 2,
}

private var _Ogham:RangeTable = {
	R16: [[0x1680, 0x169c, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Samaritan:RangeTable = {
	R16: [[0x800, 0x82d, 1], [0x830, 0x83e, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Syriac:RangeTable = {
	R16: [[0x700, 0x70d, 1], [0x70f, 0x74a, 1], [0x74d, 0x74f, 1], [0x860, 0x86a, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Tangsa:RangeTable = {
	R16: [],
	R32: [[0x16a70, 0x16abe, 1], [0x16ac0, 0x16ac9, 1],],
	LatinOffset: 2,
}

private var _Yezidi:RangeTable = {
	R16: [],
	R32: [[0x10e80, 0x10ea9, 1], [0x10eab, 0x10ead, 1], [0x10eb0, 0x10eb1, 1],],
	LatinOffset: 2,
}

private var _Balinese:RangeTable = {
	R16: [[0x1b00, 0x1b4c, 1], [0x1b50, 0x1b7e, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Bamum:RangeTable = {
	R16: [[0xa6a0, 0xa6f7, 1],],
	R32: [[0x16800, 0x16a38, 1],],
	LatinOffset: 2,
}

private var _Nandinagari:RangeTable = {
	R16: [],
	R32: [[0x119a0, 0x119a7, 1], [0x119aa, 0x119d7, 1], [0x119da, 0x119e4, 1],],
	LatinOffset: 2,
}

private var _Pau_Cin_Hau:RangeTable = {
	R16: [],
	R32: [[0x11ac0, 0x11af8, 1],],
	LatinOffset: 2,
}

private var _Shavian:RangeTable = {
	R16: [],
	R32: [[0x10450, 0x1047f, 1],],
	LatinOffset: 2,
}

private var _Braille:RangeTable = {
	R16: [[0x2800, 0x28ff, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Javanese:RangeTable = {
	R16: [[0xa980, 0xa9cd, 1], [0xa9d0, 0xa9d9, 1], [0xa9de, 0xa9df, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Meetei_Mayek:RangeTable = {
	R16: [[0xaae0, 0xaaf6, 1], [0xabc0, 0xabed, 1], [0xabf0, 0xabf9, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Psalter_Pahlavi:RangeTable = {
	R16: [],
	R32: [[0x10b80, 0x10b91, 1], [0x10b99, 0x10b9c, 1], [0x10ba9, 0x10baf, 1],],
	LatinOffset: 2,
}

private var _Vithkuqi:RangeTable = {
	R16: [],
	R32: [
		[0x10570, 0x1057a, 1],
		[0x1057c, 0x1058a, 1],
		[0x1058c, 0x10592, 1],
		[0x10594, 0x10595, 1],
		[0x10597, 0x105a1, 1],
		[0x105a3, 0x105b1, 1],
		[0x105b3, 0x105b9, 1],
		[0x105bb, 0x105bc, 1],
	],
	LatinOffset: 2,
}

private var _Khudawadi:RangeTable = {
	R16: [],
	R32: [[0x112b0, 0x112ea, 1], [0x112f0, 0x112f9, 1],],
	LatinOffset: 2,
}

private var _Lepcha:RangeTable = {
	R16: [[0x1c00, 0x1c37, 1], [0x1c3b, 0x1c49, 1], [0x1c4d, 0x1c4f, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Nag_Mundari:RangeTable = {
	R16: [],
	R32: [[0x1e4d0, 0x1e4f9, 1],],
	LatinOffset: 2,
}

private var _Newa:RangeTable = {
	R16: [],
	R32: [[0x11400, 0x1145b, 1], [0x1145d, 0x11461, 1],],
	LatinOffset: 2,
}

private var _SignWriting:RangeTable = {
	R16: [],
	R32: [[0x1d800, 0x1da8b, 1], [0x1da9b, 0x1da9f, 1], [0x1daa1, 0x1daaf, 1],],
	LatinOffset: 2,
}

private var _Arabic:RangeTable = {
	R16: [
		[0x600, 0x604, 1], [0x606, 0x60b, 1], [0x60d, 0x61a, 1], [0x61c, 0x61e, 1], [0x620, 0x63f, 1], [0x641, 0x64a, 1], [0x656, 0x66f, 1],
		[0x671, 0x6dc, 1], [0x6de, 0x6ff, 1], [0x750, 0x77f, 1], [0x870, 0x88e, 1], [0x890, 0x891, 1], [0x898, 0x8e1, 1], [0x8e3, 0x8ff, 1],
		[0xfb50, 0xfbc2, 1], [0xfbd3, 0xfd3d, 1], [0xfd40, 0xfd8f, 1], [0xfd92, 0xfdc7, 1], [0xfdcf, 0xfdf0, 33], [0xfdf1, 0xfdff, 1], [0xfe70, 0xfe74, 1],
		[0xfe76, 0xfefc, 1],
	],
	R32: [
		[0x10e60, 0x10e7e, 1], [0x10efd, 0x10eff, 1], [0x1ee00, 0x1ee03, 1], [0x1ee05, 0x1ee1f, 1], [0x1ee21, 0x1ee22, 1], [0x1ee24, 0x1ee27, 3],
		[0x1ee29, 0x1ee32, 1], [0x1ee34, 0x1ee37, 1], [0x1ee39, 0x1ee3b, 2], [0x1ee42, 0x1ee47, 5], [0x1ee49, 0x1ee4d, 2], [0x1ee4e, 0x1ee4f, 1],
		[0x1ee51, 0x1ee52, 1], [0x1ee54, 0x1ee57, 3], [0x1ee59, 0x1ee61, 2], [0x1ee62, 0x1ee64, 2], [0x1ee67, 0x1ee6a, 1], [0x1ee6c, 0x1ee72, 1],
		[0x1ee74, 0x1ee77, 1], [0x1ee79, 0x1ee7c, 1], [0x1ee7e, 0x1ee80, 2], [0x1ee81, 0x1ee89, 1], [0x1ee8b, 0x1ee9b, 1], [0x1eea1, 0x1eea3, 1],
		[0x1eea5, 0x1eea9, 1], [0x1eeab, 0x1eebb, 1], [0x1eef0, 0x1eef1, 1],
	],
	LatinOffset: 2,
}

private var _Canadian_Aboriginal:RangeTable = {
	R16: [[0x1400, 0x167f, 1], [0x18b0, 0x18f5, 1],],
	R32: [[0x11ab0, 0x11abf, 1],],
	LatinOffset: 2,
}

private var _Kaithi:RangeTable = {
	R16: [],
	R32: [[0x11080, 0x110c2, 1], [0x110cd, 0x110cd, 1],],
	LatinOffset: 2,
}

private var _Old_South_Arabian:RangeTable = {
	R16: [],
	R32: [[0x10a60, 0x10a7f, 1],],
	LatinOffset: 2,
}

private var _Zanabazar_Square:RangeTable = {
	R16: [],
	R32: [[0x11a00, 0x11a47, 1],],
	LatinOffset: 2,
}

private var _Egyptian_Hieroglyphs:RangeTable = {
	R16: [],
	R32: [[0x13000, 0x13455, 1],],
	LatinOffset: 2,
}

private var _Georgian:RangeTable = {
	R16: [
		[0x10a0, 0x10c5, 1],
		[0x10c7, 0x10cd, 6],
		[0x10d0, 0x10fa, 1],
		[0x10fc, 0x10ff, 1],
		[0x1c90, 0x1cba, 1],
		[0x1cbd, 0x1cbf, 1],
		[0x2d00, 0x2d25, 1],
		[0x2d27, 0x2d2d, 6],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Imperial_Aramaic:RangeTable = {
	R16: [],
	R32: [[0x10840, 0x10855, 1], [0x10857, 0x1085f, 1],],
	LatinOffset: 2,
}

private var _Old_Persian:RangeTable = {
	R16: [],
	R32: [[0x103a0, 0x103c3, 1], [0x103c8, 0x103d5, 1],],
	LatinOffset: 2,
}

private var _Nabataean:RangeTable = {
	R16: [],
	R32: [[0x10880, 0x1089e, 1], [0x108a7, 0x108af, 1],],
	LatinOffset: 2,
}

private var _Old_Hungarian:RangeTable = {
	R16: [],
	R32: [[0x10c80, 0x10cb2, 1], [0x10cc0, 0x10cf2, 1], [0x10cfa, 0x10cff, 1],],
	LatinOffset: 2,
}

private var _Limbu:RangeTable = {
	R16: [
		[0x1900, 0x191e, 1],
		[0x1920, 0x192b, 1],
		[0x1930, 0x193b, 1],
		[0x1940, 0x1944, 4],
		[0x1945, 0x194f, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Linear_B:RangeTable = {
	R16: [],
	R32: [
		[0x10000, 0x1000b, 1],
		[0x1000d, 0x10026, 1],
		[0x10028, 0x1003a, 1],
		[0x1003c, 0x1003d, 1],
		[0x1003f, 0x1004d, 1],
		[0x10050, 0x1005d, 1],
		[0x10080, 0x100fa, 1],
	],
	LatinOffset: 2,
}

private var _Old_Uyghur:RangeTable = {
	R16: [],
	R32: [[0x10f70, 0x10f89, 1],],
	LatinOffset: 2,
}

private var _Sundanese:RangeTable = {
	R16: [[0x1b80, 0x1bbf, 1], [0x1cc0, 0x1cc7, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Batak:RangeTable = {
	R16: [[0x1bc0, 0x1bf3, 1], [0x1bfc, 0x1bff, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Caucasian_Albanian:RangeTable = {
	R16: [],
	R32: [[0x10530, 0x10563, 1], [0x1056f, 0x1056f, 1],],
	LatinOffset: 2,
}

private var _Cyrillic:RangeTable = {
	R16: [
		[0x400, 0x484, 1],
		[0x487, 0x52f, 1],
		[0x1c80, 0x1c88, 1],
		[0x1d2b, 0x1d78, 77],
		[0x2de0, 0x2dff, 1],
		[0xa640, 0xa69f, 1],
		[0xfe2e, 0xfe2f, 1],
	],
	R32: [[0x1e030, 0x1e06d, 1], [0x1e08f, 0x1e08f, 1],],
	LatinOffset: 2,
}

private var _Dogra:RangeTable = {
	R16: [],
	R32: [[0x11800, 0x1183b, 1],],
	LatinOffset: 2,
}

private var _Rejang:RangeTable = {
	R16: [[0xa930, 0xa953, 1], [0xa95f, 0xa95f, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Sora_Sompeng:RangeTable = {
	R16: [],
	R32: [[0x110d0, 0x110e8, 1], [0x110f0, 0x110f9, 1],],
	LatinOffset: 2,
}

private var _Cham:RangeTable = {
	R16: [
		[0xaa00, 0xaa36, 1],
		[0xaa40, 0xaa4d, 1],
		[0xaa50, 0xaa59, 1],
		[0xaa5c, 0xaa5f, 1],
	],
	R32: [],
	LatinOffset: 2,
}

private var _Manichaean:RangeTable = {
	R16: [],
	R32: [[0x10ac0, 0x10ae6, 1], [0x10aeb, 0x10af6, 1],],
	LatinOffset: 2,
}

private var _Miao:RangeTable = {
	R16: [],
	R32: [[0x16f00, 0x16f4a, 1], [0x16f4f, 0x16f87, 1], [0x16f8f, 0x16f9f, 1],],
	LatinOffset: 2,
}

private var _Old_North_Arabian:RangeTable = {
	R16: [],
	R32: [[0x10a80, 0x10a9f, 1],],
	LatinOffset: 2,
}

private var _Duployan:RangeTable = {
	R16: [],
	R32: [
		[0x1bc00, 0x1bc6a, 1],
		[0x1bc70, 0x1bc7c, 1],
		[0x1bc80, 0x1bc88, 1],
		[0x1bc90, 0x1bc99, 1],
		[0x1bc9c, 0x1bc9f, 1],
	],
	LatinOffset: 2,
}

private var _Marchen:RangeTable = {
	R16: [],
	R32: [[0x11c70, 0x11c8f, 1], [0x11c92, 0x11ca7, 1], [0x11ca9, 0x11cb6, 1],],
	LatinOffset: 2,
}

private var _Nko:RangeTable = {
	R16: [[0x7c0, 0x7fa, 1], [0x7fd, 0x7ff, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Adlam:RangeTable = {
	R16: [],
	R32: [[0x1e900, 0x1e94b, 1], [0x1e950, 0x1e959, 1], [0x1e95e, 0x1e95f, 1],],
	LatinOffset: 2,
}

private var _Cypriot:RangeTable = {
	R16: [],
	R32: [
		[0x10800, 0x10805, 1],
		[0x10808, 0x1080a, 2],
		[0x1080b, 0x10835, 1],
		[0x10837, 0x10838, 1],
		[0x1083c, 0x1083f, 3],
	],
	LatinOffset: 2,
}

private var _Latin:RangeTable = {
	R16: [
		[0x41, 0x5a, 1], [0x61, 0x7a, 1], [0xaa, 0xba, 16], [0xc0, 0xd6, 1], [0xd8, 0xf6, 1], [0xf8, 0x2b8, 1], [0x2e0, 0x2e4, 1], [0x1d00, 0x1d25, 1],
		[0x1d2c, 0x1d5c, 1], [0x1d62, 0x1d65, 1], [0x1d6b, 0x1d77, 1], [0x1d79, 0x1dbe, 1], [0x1e00, 0x1eff, 1], [0x2071, 0x207f, 14], [0x2090, 0x209c, 1],
		[0x212a, 0x212b, 1], [0x2132, 0x214e, 28], [0x2160, 0x2188, 1], [0x2c60, 0x2c7f, 1], [0xa722, 0xa787, 1], [0xa78b, 0xa7ca, 1], [0xa7d0, 0xa7d1, 1],
		[0xa7d3, 0xa7d5, 2], [0xa7d6, 0xa7d9, 1], [0xa7f2, 0xa7ff, 1], [0xab30, 0xab5a, 1], [0xab5c, 0xab64, 1], [0xab66, 0xab69, 1], [0xfb00, 0xfb06, 1],
		[0xff21, 0xff3a, 1], [0xff41, 0xff5a, 1],
	],
	R32: [
		[0x10780, 0x10785, 1],
		[0x10787, 0x107b0, 1],
		[0x107b2, 0x107ba, 1],
		[0x1df00, 0x1df1e, 1],
		[0x1df25, 0x1df2a, 1],
	],
	LatinOffset: 2,
}

private var _Tagalog:RangeTable = {
	R16: [[0x1700, 0x1715, 1], [0x171f, 0x171f, 1],],
	R32: [],
	LatinOffset: 2,
}

private var _Elymaic:RangeTable = {
	R16: [],
	R32: [[0x10fe0, 0x10ff6, 1],],
	LatinOffset: 2,
}

private var _Old_Permic:RangeTable = {
	R16: [],
	R32: [[0x10350, 0x1037a, 1],],
	LatinOffset: 2,
}

// to hide long text for haxe vscode auto complete
var P = _P;
var Pd = _Pd;
var Pi = _Pi;
var M = _M;
var Sk = _Sk;
var S = _S;
var No = _No;
var L = _L;
var Lo = _Lo;
var Mc = _Mc;
var Me = _Me;
var Nl = _Nl;
var Zs = _Zs;
var Cc = _Cc;
var Lu = _Lu;
var Sm = _Sm;
var Cs = _Cs;
var N = _N;
var Pc = _Pc;
var Po = _Po;
var Zp = _Zp;
var Co = _Co;
var Lt = _Lt;
var Nd = _Nd;
var Pe = _Pe;
var Ps = _Ps;
var Z = _Z;
var Zl = _Zl;
var Cf = _Cf;
var Ll = _Ll;
var Lm = _Lm;
var Mn = _Mn;
var Pf = _Pf;
var Sc = _Sc;
var So = _So;
var C = _C;
var Pattern_White_Space = _Pattern_White_Space;
var Terminal_Punctuation = _Terminal_Punctuation;
var Variation_Selector = _Variation_Selector;
var Dash = _Dash;
var IDS_Binary_Operator = _IDS_Binary_Operator;
var Ideographic = _Ideographic;
var Logical_Order_Exception = _Logical_Order_Exception;
var Other_Lowercase = _Other_Lowercase;
var White_Space = _White_Space;
var Extender = _Extender;
var Join_Control = _Join_Control;
var Other_Grapheme_Extend = _Other_Grapheme_Extend;
var Pattern_Syntax = _Pattern_Syntax;
var Quotation_Mark = _Quotation_Mark;
var Sentence_Terminal = _Sentence_Terminal;
var Soft_Dotted = _Soft_Dotted;
var Unified_Ideograph = _Unified_Ideograph;
var Hyphen = _Hyphen;
var Noncharacter_Code_Point = _Noncharacter_Code_Point;
var Other_Alphabetic = _Other_Alphabetic;
var Other_Math = _Other_Math;
var Prepended_Concatenation_Mark = _Prepended_Concatenation_Mark;
var Bidi_Control = _Bidi_Control;
var Diacritic = _Diacritic;
var Other_Default_Ignorable_Code_Point = _Other_Default_Ignorable_Code_Point;
var Deprecated = _Deprecated;
var Hex_Digit = _Hex_Digit;
var Radical = _Radical;
var IDS_Trinary_Operator = _IDS_Trinary_Operator;
var Other_Uppercase = _Other_Uppercase;
var STerm = _STerm;
var ASCII_Hex_Digit = _ASCII_Hex_Digit;
var Other_ID_Continue = _Other_ID_Continue;
var Other_ID_Start = _Other_ID_Start;
var Regional_Indicator = _Regional_Indicator;
var Kayah_Li = _Kayah_Li;
var Wancho = _Wancho;
var Gurmukhi = _Gurmukhi;
var Kannada = _Kannada;
var Mandaic = _Mandaic;
var Sinhala = _Sinhala;
var Bopomofo = _Bopomofo;
var Chorasmian = _Chorasmian;
var Dives_Akuru = _Dives_Akuru;
var Glagolitic = _Glagolitic;
var Ugaritic = _Ugaritic;
var Warang_Citi = _Warang_Citi;
var Inherited = _Inherited;
var Khitan_Small_Script = _Khitan_Small_Script;
var Old_Sogdian = _Old_Sogdian;
var Old_Turkic = _Old_Turkic;
var Buginese = _Buginese;
var Khmer = _Khmer;
var Malayalam = _Malayalam;
var Medefaidrin = _Medefaidrin;
var Phags_Pa = _Phags_Pa;
var Tibetan = _Tibetan;
var Avestan = _Avestan;
var Ethiopic = _Ethiopic;
var Greek = _Greek;
var Nushu = _Nushu;
var Lydian = _Lydian;
var Tangut = _Tangut;
var Anatolian_Hieroglyphs = _Anatolian_Hieroglyphs;
var Brahmi = _Brahmi;
var Hanunoo = _Hanunoo;
var Lycian = _Lycian;
var Tirhuta = _Tirhuta;
var Ahom = _Ahom;
var Cuneiform = _Cuneiform;
var Hanifi_Rohingya = _Hanifi_Rohingya;
var Mende_Kikakui = _Mende_Kikakui;
var Takri = _Takri;
var Cherokee = _Cherokee;
var Mahajani = _Mahajani;
var Mongolian = _Mongolian;
var Syloti_Nagri = _Syloti_Nagri;
var Palmyrene = _Palmyrene;
var Runic = _Runic;
var Coptic = _Coptic;
var Gothic = _Gothic;
var Makasar = _Makasar;
var Multani = _Multani;
var Telugu = _Telugu;
var Vai = _Vai;
var Cypro_Minoan = _Cypro_Minoan;
var Hiragana = _Hiragana;
var Ol_Chiki = _Ol_Chiki;
var Saurashtra = _Saurashtra;
var Bengali = _Bengali;
var Buhid = _Buhid;
var Gunjala_Gondi = _Gunjala_Gondi;
var Meroitic_Cursive = _Meroitic_Cursive;
var Sogdian = _Sogdian;
var Tagbanwa = _Tagbanwa;
var Armenian = _Armenian;
var Hangul = _Hangul;
var Lisu = _Lisu;
var Siddham = _Siddham;
var Lao = _Lao;
var Myanmar = _Myanmar;
var New_Tai_Lue = _New_Tai_Lue;
var Thaana = _Thaana;
var Hatran = _Hatran;
var Hebrew = _Hebrew;
var Kharoshthi = _Kharoshthi;
var Khojki = _Khojki;
var Pahawh_Hmong = _Pahawh_Hmong;
var Tamil = _Tamil;
var Common = _Common;
var Deseret = _Deseret;
var Inscriptional_Parthian = _Inscriptional_Parthian;
var Nyiakeng_Puachue_Hmong = _Nyiakeng_Puachue_Hmong;
var Phoenician = _Phoenician;
var Bhaiksuki = _Bhaiksuki;
var Masaram_Gondi = _Masaram_Gondi;
var Osage = _Osage;
var Osmanya = _Osmanya;
var Grantha = _Grantha;
var Gujarati = _Gujarati;
var Old_Italic = _Old_Italic;
var Oriya = _Oriya;
var Meroitic_Hieroglyphs = _Meroitic_Hieroglyphs;
var Modi = _Modi;
var Toto = _Toto;
var Yi = _Yi;
var Sharada = _Sharada;
var Tifinagh = _Tifinagh;
var Han = _Han;
var Bassa_Vah = _Bassa_Vah;
var Carian = _Carian;
var Devanagari = _Devanagari;
var Elbasan = _Elbasan;
var Chakma = _Chakma;
var Inscriptional_Pahlavi = _Inscriptional_Pahlavi;
var Katakana = _Katakana;
var Thai = _Thai;
var Soyombo = _Soyombo;
var Tai_Le = _Tai_Le;
var Tai_Tham = _Tai_Tham;
var Tai_Viet = _Tai_Viet;
var Kawi = _Kawi;
var Linear_A = _Linear_A;
var Mro = _Mro;
var Ogham = _Ogham;
var Samaritan = _Samaritan;
var Syriac = _Syriac;
var Tangsa = _Tangsa;
var Yezidi = _Yezidi;
var Balinese = _Balinese;
var Bamum = _Bamum;
var Nandinagari = _Nandinagari;
var Pau_Cin_Hau = _Pau_Cin_Hau;
var Shavian = _Shavian;
var Braille = _Braille;
var Javanese = _Javanese;
var Meetei_Mayek = _Meetei_Mayek;
var Psalter_Pahlavi = _Psalter_Pahlavi;
var Vithkuqi = _Vithkuqi;
var Khudawadi = _Khudawadi;
var Lepcha = _Lepcha;
var Nag_Mundari = _Nag_Mundari;
var Newa = _Newa;
var SignWriting = _SignWriting;
var Arabic = _Arabic;
var Canadian_Aboriginal = _Canadian_Aboriginal;
var Kaithi = _Kaithi;
var Old_South_Arabian = _Old_South_Arabian;
var Zanabazar_Square = _Zanabazar_Square;
var Egyptian_Hieroglyphs = _Egyptian_Hieroglyphs;
var Georgian = _Georgian;
var Imperial_Aramaic = _Imperial_Aramaic;
var Old_Persian = _Old_Persian;
var Nabataean = _Nabataean;
var Old_Hungarian = _Old_Hungarian;
var Limbu = _Limbu;
var Linear_B = _Linear_B;
var Old_Uyghur = _Old_Uyghur;
var Sundanese = _Sundanese;
var Batak = _Batak;
var Caucasian_Albanian = _Caucasian_Albanian;
var Cyrillic = _Cyrillic;
var Dogra = _Dogra;
var Rejang = _Rejang;
var Sora_Sompeng = _Sora_Sompeng;
var Cham = _Cham;
var Manichaean = _Manichaean;
var Miao = _Miao;
var Old_North_Arabian = _Old_North_Arabian;
var Duployan = _Duployan;
var Marchen = _Marchen;
var Nko = _Nko;
var Adlam = _Adlam;
var Cypriot = _Cypriot;
var Latin = _Latin;
var Tagalog = _Tagalog;
var Elymaic = _Elymaic;
var Old_Permic = _Old_Permic;
